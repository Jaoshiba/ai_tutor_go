<!doctype html>
<html lang="en">
 <head>
  <base href="https://realpython.com/api-integration-in-python/">
  <link href="https://files.realpython.com" rel="preconnect">
  <title>Python and REST APIs: Interacting With Web Services – Real Python</title>
  <meta name="author" content="Real Python">
  <meta name="description" content="In this tutorial, you'll learn how to use Python to communicate with REST APIs. You'll learn about REST architecture and how to use the requests library to get data from a REST API. You'll also explore different Python tools you can use to build REST APIs.">
  <meta name="keywords" content="">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover">
  <link rel="stylesheet" href="/static/realpython.min.95dd186bacb2.css">
  <link rel="stylesheet" href="/static/gfonts/font.5ac42994de49.css">
  <link rel="preload" href="/static/glightbox.min.9b438b29cef1.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript>
   <link rel="stylesheet" href="/static/glightbox.min.9b438b29cef1.css">
  </noscript>
  <link rel="preload" as="image" href="https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg" imagesrcset="/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg 1920w" imagesizes="(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)">
  <link rel="canonical" href="https://realpython.com/api-integration-in-python/">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:image" content="https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg">
  <meta property="og:image" content="https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg">
  <meta name="robots" content="max-image-preview:large">
  <meta name="twitter:creator" content="@realpython">
  <meta name="twitter:site" content="@realpython">
  <meta property="og:title" content="Python and REST APIs: Interacting With Web Services – Real Python">
  <meta property="og:type" content="article">
  <meta property="og:url" content="https://realpython.com/api-integration-in-python/">
  <meta property="og:description" content="In this tutorial, you'll learn how to use Python to communicate with REST APIs. You'll learn about REST architecture and how to use the requests library to get data from a REST API. You'll also explore different Python tools you can use to build REST APIs.">
  <link href="/static/favicon.68cbf4197b0c.png" rel="icon">
  <link href="https://realpython.com/atom.xml" rel="alternate" title="Real Python" type="application/atom+xml">
  <link rel="manifest" href="/manifest.json">
  <script id="icons-data" type="application/json">{"iconsUrl": "/static/icons.770597e4ea96.svg"}</script>
  <script id="optins-data" type="application/json">{"turnstileSiteKey": "0x4AAAAAAAQQUCLRXBi8NnUh"}</script>
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-L7L6L5F6Y6"></script>
  <script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-L7L6L5F6Y6',{'content_group': 'article'});

  gtag('get', 'G-L7L6L5F6Y6', 'client_id', (clid) => {
    document.cookie = 'gaclid=' + clid + ';max-age=86400000;path=/;secure';
  });
  
</script>
  <meta http-equiv="X-Translated-By" content="Google">
  <meta http-equiv="X-Translated-To" content="th">
  <script type="text/javascript" src="https://www.gstatic.com/_/translate_http/_/js/k=translate_http.tr.th.d8Aip2TmILY.O/am=gMA/d=1/rs=AN8SPfpVzlb_86P8VBMU5syF4ogbz8LkSg/m=corsproxy" data-sourceurl="https://realpython.com/api-integration-in-python/"></script>
  <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" rel="stylesheet">
  <script type="text/javascript" src="https://www.gstatic.com/_/translate_http/_/js/k=translate_http.tr.th.d8Aip2TmILY.O/am=gMA/d=1/exm=corsproxy/ed=1/rs=AN8SPfpVzlb_86P8VBMU5syF4ogbz8LkSg/m=phishing_protection" data-phishing-protection-enabled="false" data-forms-warning-enabled="true" data-source-url="https://realpython.com/api-integration-in-python/"></script>
  <meta name="robots" content="none">
 </head>
 <body data-authenticated="false">
  <script type="text/javascript" src="https://www.gstatic.com/_/translate_http/_/js/k=translate_http.tr.th.d8Aip2TmILY.O/am=gMA/d=1/exm=corsproxy,phishing_protection/ed=1/rs=AN8SPfpVzlb_86P8VBMU5syF4ogbz8LkSg/m=navigationui" data-environment="prod" data-proxy-url="https://realpython-com.translate.goog" data-proxy-full-url="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" data-source-url="https://realpython.com/api-integration-in-python/" data-source-language="en" data-target-language="th" data-display-language="th" data-detected-source-language="" data-is-source-untranslated="false" data-source-untranslated-url="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://realpython.com/api-integration-in-python/&amp;anno=2" data-client="srp"></script>
  <nav class="navbar fixed-top navbar-expand-lg navbar-dark flex-column  user-select-none">
   <div class="container flex-row"><a class="navbar-brand" href="https://realpython-com.translate.goog/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc"> <img src="/static/real-python-logo.893c30edea53.svg" width="165" height="40" class="d-inline-block align-top" alt="Real Python"> </a> <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
    <div class="collapse navbar-collapse navbar-nav-scroll" id="navbarSupportedContent" role="navigation" aria-label="Main Navigation">
     <ul class="navbar-nav mr-2">
      <li class="nav-item"><a class="nav-link rounded" href="https://realpython-com.translate.goog/start-here/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Start&nbsp;Here</a></li>
      <li class="nav-item dropdown"><a class="nav-link rounded dropdown-toggle" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#" id="navbarDropdownLibrary" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="icon baseline" aria-hidden="true">
         <svg aria-hidden="true">
          <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--python" />
         </svg></span> Learn Python </a>
       <div class="dropdown-menu" aria-labelledby="navbarDropdownLibrary"><a class="dropdown-item " href="https://realpython-com.translate.goog/search?kind=article&amp;kind=course&amp;order=newest&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #ff7e73; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--graduation-cap" />
          </svg></span>Python Tutorials&nbsp;→<br><small class="text-secondary">In-depth articles and video courses</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/learning-paths/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #ffc873; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@learning-path" />
          </svg></span>Learning Paths&nbsp;→<br><small class="text-secondary">Guided study plans for accelerated learning</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/quizzes/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #abe0e5; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@quiz" />
          </svg></span>Quizzes &amp; Exercises&nbsp;→<br><small class="text-secondary">Check your learning progress</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/tutorials/all/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #ccc; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@category" />
          </svg></span>Browse Topics&nbsp;→<br><small class="text-secondary">Focus on a specific area or skill level</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/community/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #e5c6ab; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--message-smile" />
          </svg></span>Community Chat&nbsp;→<br><small class="text-secondary">Learn with other Pythonistas</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/office-hours/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #e5c6ab; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--users" />
          </svg></span>Office Hours&nbsp;→<br><small class="text-secondary">Live Q&amp;A calls with Python experts</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/podcasts/rpp/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #b8abe5; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@podcast" />
          </svg></span>Podcast&nbsp;→<br><small class="text-secondary">Hear what’s new in the world of Python</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/products/books/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #abe5b1; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--book-heart" />
          </svg></span>Books&nbsp;→<br><small class="text-secondary">Round out your knowledge and learn offline</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/ref/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #abe0e5; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@reference" />
          </svg></span>Reference&nbsp;→<br><small class="text-secondary">Concise definitions for common Python terms</small></a> <a class="dropdown-item " href="https://realpython-com.translate.goog/mentor/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #ffc873; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@code-mentor" />
          </svg></span>Code Mentor&nbsp;→<span class="float-right badge badge-pill badge-indigo">Beta</span><br><small class="text-secondary">Personalized code assistance &amp; learning tools</small></a> <a class="dropdown-item border-top" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" style="color: #ffc107; line-height: 110%;"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--star" />
          </svg></span>Unlock All Content&nbsp;→</a>
       </div></li>
      <li class="nav-item dropdown"><a class="nav-link rounded dropdown-toggle" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#" id="navbarDropdownMore" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> More </a>
       <div class="dropdown-menu" aria-labelledby="navbarDropdownMore"><a class="dropdown-item" href="https://realpython-com.translate.goog/learner-stories/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Learner Stories</a> <a class="dropdown-item" href="https://realpython-com.translate.goog/newsletter/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Python Newsletter</a> <a class="dropdown-item" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.pythonjobshq.com" target="_blank">Python Job Board</a> <a class="dropdown-item" href="https://realpython-com.translate.goog/team/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Meet the Team</a> <a class="dropdown-item" href="https://realpython-com.translate.goog/write-for-us/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Become a Tutorial Writer</a> <a class="dropdown-item" href="https://realpython-com.translate.goog/become-an-instructor/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Become a Video Instructor</a>
       </div></li>
     </ul>
     <div class="d-block d-lg-none">
      <ul class="navbar-nav">
       <li class="nav-item"><a class="nav-link rounded" href="https://realpython-com.translate.goog/search?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" title="Search"><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#v4--search" />
          </svg></span> Search</a></li>
      </ul>
     </div>
     <div class="d-none d-lg-flex align-items-center mr-2 flex-fill">
      <form class="form-inline w-100 position-relative" action="/search" method="GET"><a class="js-search-form-submit position-absolute" href="https://realpython-com.translate.goog/search?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" title="Search" aria-hidden="true" tabindex="-1"><span class="icon baseline text-muted pl-2" aria-hidden="true">
         <svg aria-hidden="true">
          <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#v4--search" />
         </svg></span></a> <input class="search-autocomplete search-field form-control form-control-md mr-sm-1 mr-lg-2 w-100" style="padding-left: 2rem;" maxlength="50" type="search" placeholder="Search" aria-label="Search" aria-keyshortcuts="/ Control+J Meta+J" name="q" autocomplete="off"> <span class="search-hotkey-indicator position-absolute px-2 border border-input text-input rounded small user-select-none" style="right: 1em;" title="Press / (forward slash) or Ctrl+J to open search" aria-hidden="true">/</span> <input type="hidden" name="_from" value="nav">
      </form>
     </div>
     <ul class="navbar-nav ml-auto">
      <li class="nav-item form-inline mr-2 my-2 ml-3 ml-lg-0"><a class="btn btn-sm btn-primary px-5 px-lg-3" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Join</a></li>
      <li class="nav-item"><a class="nav-link rounded mx-0 px-lg-2" href="https://realpython-com.translate.goog/account/login/?next=/api-integration-in-python/&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Sign‑In</a></li>
     </ul>
    </div>
   </div>
  </nav>
  <div class="container main-content">
   <div class="row justify-content-center">
    <aside class="col-md-7 col-lg-4 order-2 d-none d-lg-block">
     <div class="card mb-3 bg-secondary">
      <form class="card-body" action="/optins/process/" method="post">
       <div class="form-group">
        <p class="h5 text-muted text-center">— FREE Email Series —</p>
        <p class="h3 text-center">🐍 Python Tricks 💌</p>
        <p><img loading="lazy" class="img-fluid rounded" src="/static/pytrick-dict-merge.4201a0125a5e.png" width="738" height="490" alt="Python Tricks Dictionary Merge"></p>
       </div>
       <div class="form-group"><input type="hidden" name="csrfmiddlewaretoken" value="rzOHcE3CIBu5Ps7wPLQAokjuACvqLzbYrXmtiOn1KtHKn02hAXq87l3X846orr0V"> <input type="hidden" name="slug" value="static-python-tricks-sidebar"> <input type="email" class="form-control form-control-md" name="email" placeholder="Email…" required>
       </div><button type="submit" name="submit" class="btn btn-primary btn-md btn-block">Get Python Tricks »</button>
       <p class="mb-0 mt-2 text-muted text-center">🔒 No spam. Unsubscribe any time.</p>
      </form>
     </div>
     <div class="sidebar-module sidebar-module-inset border"><a href="https://realpython-com.translate.goog/tutorials/all/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted"><span class="icon baseline mr-1" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@category" />
        </svg></span>Browse Topics</a> <a href="https://realpython-com.translate.goog/learning-paths/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted"><span class="icon baseline mr-1" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--map-location-dot" />
        </svg></span>Guided Learning Paths</a> <br><a href="https://realpython-com.translate.goog/search?level=basics&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@level" />
        </svg></span> Basics</a> <a href="https://realpython-com.translate.goog/search?level=intermediate&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@level" />
        </svg></span><span class="icon baseline tight-left" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@level" />
        </svg></span> Intermediate</a> <a href="https://realpython-com.translate.goog/search?level=advanced&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@level" />
        </svg></span><span class="icon baseline tight-left" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@level" />
        </svg></span><span class="icon baseline tight-left" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@level" />
        </svg></span> Advanced</a>
      <hr class="my-2"><a href="https://realpython-com.translate.goog/tutorials/ai/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>ai</a> <a href="https://realpython-com.translate.goog/tutorials/api/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>api</a> <a href="https://realpython-com.translate.goog/tutorials/best-practices/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>best-practices</a> <a href="https://realpython-com.translate.goog/tutorials/career/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>career</a> <a href="https://realpython-com.translate.goog/tutorials/community/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>community</a> <a href="https://realpython-com.translate.goog/tutorials/databases/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>databases</a> <a href="https://realpython-com.translate.goog/tutorials/data-science/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>data-science</a> <a href="https://realpython-com.translate.goog/tutorials/data-structures/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>data-structures</a> <a href="https://realpython-com.translate.goog/tutorials/data-viz/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>data-viz</a> <a href="https://realpython-com.translate.goog/tutorials/devops/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>devops</a> <a href="https://realpython-com.translate.goog/tutorials/django/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>django</a> <a href="https://realpython-com.translate.goog/tutorials/docker/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>docker</a> <a href="https://realpython-com.translate.goog/tutorials/editors/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>editors</a> <a href="https://realpython-com.translate.goog/tutorials/flask/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>flask</a> <a href="https://realpython-com.translate.goog/tutorials/front-end/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>front-end</a> <a href="https://realpython-com.translate.goog/tutorials/gamedev/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>gamedev</a> <a href="https://realpython-com.translate.goog/tutorials/gui/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>gui</a> <a href="https://realpython-com.translate.goog/tutorials/machine-learning/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>machine-learning</a> <a href="https://realpython-com.translate.goog/tutorials/news/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>news</a> <a href="https://realpython-com.translate.goog/tutorials/numpy/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>numpy</a> <a href="https://realpython-com.translate.goog/tutorials/projects/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>projects</a> <a href="https://realpython-com.translate.goog/tutorials/python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>python</a> <a href="https://realpython-com.translate.goog/tutorials/testing/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>testing</a> <a href="https://realpython-com.translate.goog/tutorials/tools/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>tools</a> <a href="https://realpython-com.translate.goog/tutorials/web-dev/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>web-dev</a> <a href="https://realpython-com.translate.goog/tutorials/web-scraping/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>web-scraping</a>
     </div>
     <div class="sidebar-module sidebar-module-inset p-0" style="overflow:hidden;">
      <div style="display:block;position:relative;">
       <div style="display:block;width:100%;padding-top:100%;"></div>
       <div class="rpad" data-unit="1x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div>
      </div>
     </div>
     <div class="sidebar-sticky "><table-of-contents>
       <div class="bg-light sidebar-module sidebar-module-inset text-wrap-pretty">
        <p class="h4 text-muted"><a class="link-unstyled" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#toc">Table of Contents</a></p>
        <div class="toc">
         <ul>
          <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-architecture">REST Architecture</a></li>
          <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-apis-and-web-services">REST APIs and Web Services</a>
           <ul>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#http-methods">HTTP Methods</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#status-codes">Status Codes</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#api-endpoints">API Endpoints</a></li>
           </ul></li>
          <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-consuming-apis">REST and Python: Consuming APIs</a>
           <ul>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#get">GET</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#post">POST</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#put">PUT</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#patch">PATCH</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#delete">DELETE</a></li>
           </ul></li>
          <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-building-apis">REST and Python: Building APIs</a>
           <ul>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#identify-resources">Identify Resources</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#define-your-endpoints">Define Your Endpoints</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#pick-your-data-interchange-format">Pick Your Data Interchange Format</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#design-success-responses">Design Success Responses</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#design-error-responses">Design Error Responses</a></li>
           </ul></li>
          <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-tools-of-the-trade">REST and Python: Tools of the Trade</a>
           <ul>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#flask">Flask</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#django-rest-framework">Django REST Framework</a></li>
            <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#fastapi">FastAPI</a></li>
           </ul></li>
          <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#conclusion">Conclusion</a></li>
         </ul>
        </div>
       </div>
      </table-of-contents>
      <div class="sidebar-module sidebar-module-inset d-flex justify-content-center flex-wrap row-gap-1 col-gap-2 my-3 py-0"><completion-status class="btn-group mb-0" article-slug="api-integration-in-python" data-api-article-bookmark-url="/api/v1/articles/api-integration-in-python/bookmark/" data-api-article-completion-status-url="/api/v1/articles/api-integration-in-python/completion_status/">
        <button data-target-complete-button title="Click to mark as completed" class="btn btn-secondary border-right" style="border-top-right-radius: 0; border-bottom-right-radius: 0;" disabled>Mark as Completed</button>
        <button data-target-bookmark-button title="Add bookmark" class="btn btn-secondary border-left" disabled><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--bookmark" />
          </svg></span></button>
       </completion-status>
       <div class="w-100"></div>
       <div class="btn-group mb-0"><a class="btn btn-secondary border-right" style="border-top-right-radius: 0; border-bottom-right-radius: 0;" title="Liked it" role="button" aria-label="Liked it (thumbs up)" href="https://realpython-com.translate.goog/feedback/survey/article/api-integration-in-python/liked/?from=article-sidebar&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank"><span class="icon" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--thumbs-up" />
          </svg></span></a> <a class="btn btn-secondary border-left" role="button" aria-label="Disliked it (thumbs down)" title="Disliked it" href="https://realpython-com.translate.goog/feedback/survey/article/api-integration-in-python/disliked/?from=article-sidebar&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank"><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--thumbs-down" />
          </svg></span></a>
       </div><share-button url="https://realpython.com/api-integration-in-python/" url-title="Python and REST APIs: Interacting With Web Services" twitter-text="Interesting #Python article by @realpython:" bluesky-text="Interesting #Python article by @realpython.com:" email-subject="Python article for you" email-body="Check out this Python article:%0A%0APython and REST APIs: Interacting With Web Services">
        <button class="btn btn-secondary" type="button" title="Share" aria-label="Share"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@share-light" />
          </svg></span>Share</button>
       </share-button>
      </div>
      <div class="sidebar-module sidebar-module-inset border card">
       <p><span class="badge badge-pill badge-success"><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#v4--play-circle" />
          </svg></span> Recommended Video Course</span><br><a class="stretched-link text-success" href="https://realpython-com.translate.goog/courses/interacting-rest-apis-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Interacting With REST APIs and Python</a></p>
      </div>
      <div class="sidebar-module sidebar-module-inset p-0" style="overflow:hidden;">
       <div style="display:block;position:relative;">
        <div style="display:block;width:100%;padding-top:25%;"></div>
        <div class="rpad" data-unit="4x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div>
       </div>
      </div>
     </div>
    </aside>
    <div class="col-md-11 col-lg-8 article with-headerlinks">
     <figure class="embed-responsive embed-responsive-16by9 rounded"><img fetchpriority="high" class="card-img-top m-0 p-0 embed-responsive-item" style="object-fit: contain; background: #e5c5ac;" alt="Python API Integration" width="1920" height="1080" src="https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=480?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 480w,https://realpython-com.translate.goog/cdn-cgi/image/width=640?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 640w,https://realpython-com.translate.goog/cdn-cgi/image/width=960?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 960w,https://realpython-com.translate.goog/cdn-cgi/image/width=1920?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 1920w" sizes="(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)">
     </figure>
     <h1>Python and REST APIs: Interacting With Web Services</h1>
     <div class="mb-0"><span class="text-muted">by <a class="text-muted" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#author">Jason Van Schooneveld</a> <span class="icon baseline ml-2">
        <svg role="img">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--book-open" />
        </svg><span class="sr-only">Reading time estimate</span></span> 50m <span class="icon baseline ml-2 mr-1" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--comments" />
        </svg></span><a class="text-muted" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#reader-comments"><span class="disqus-comment-count" data-disqus-identifier="https://realpython.com/api-integration-in-python/"></span></a> <span class="d-inline d-md-block"> <span class="icon baseline ml-2 ml-md-0" aria-hidden="true">
         <svg aria-hidden="true">
          <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@category" />
         </svg></span> <a href="https://realpython-com.translate.goog/tutorials/intermediate/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>intermediate</a> <a href="https://realpython-com.translate.goog/tutorials/api/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>api</a> <a href="https://realpython-com.translate.goog/tutorials/web-dev/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>web-dev</a> </span>
       <div class="d-flex justify-content-between gap-2 my-3"><completion-status class="btn-group mb-0" article-slug="api-integration-in-python" data-api-article-bookmark-url="/api/v1/articles/api-integration-in-python/bookmark/" data-api-article-completion-status-url="/api/v1/articles/api-integration-in-python/completion_status/">
         <button data-target-complete-button title="Click to mark as completed" class="btn btn-secondary border-right" style="border-top-right-radius: 0; border-bottom-right-radius: 0;" disabled>Mark as Completed</button>
         <button data-target-bookmark-button title="Add bookmark" class="btn btn-secondary border-left" disabled><span class="icon baseline" aria-hidden="true">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--bookmark" />
           </svg></span></button>
        </completion-status> <share-button url="https://realpython.com/api-integration-in-python/" url-title="Python and REST APIs: Interacting With Web Services" twitter-text="Interesting #Python article by @realpython:" bluesky-text="Interesting #Python article by @realpython.com:" email-subject="Python article for you" email-body="Check out this Python article:%0A%0APython and REST APIs: Interacting With Web Services">
         <button class="btn btn-secondary" type="button" title="Share" aria-label="Share"><span class="icon baseline mr-1" aria-hidden="true">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@share-light" />
           </svg></span>Share</button>
        </share-button>
       </div></span>
     </div>
     <div class="article-body">
      <div class="bg-light sidebar-module sidebar-module-inset" id="toc">
       <p class="h3 mb-2 text-muted">Table of Contents</p>
       <div class="toc">
        <ul>
         <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-architecture">REST Architecture</a></li>
         <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-apis-and-web-services">REST APIs and Web Services</a>
          <ul>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#http-methods">HTTP Methods</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#status-codes">Status Codes</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#api-endpoints">API Endpoints</a></li>
          </ul></li>
         <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-consuming-apis">REST and Python: Consuming APIs</a>
          <ul>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#get">GET</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#post">POST</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#put">PUT</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#patch">PATCH</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#delete">DELETE</a></li>
          </ul></li>
         <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-building-apis">REST and Python: Building APIs</a>
          <ul>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#identify-resources">Identify Resources</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#define-your-endpoints">Define Your Endpoints</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#pick-your-data-interchange-format">Pick Your Data Interchange Format</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#design-success-responses">Design Success Responses</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#design-error-responses">Design Error Responses</a></li>
          </ul></li>
         <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-tools-of-the-trade">REST and Python: Tools of the Trade</a>
          <ul>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#flask">Flask</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#django-rest-framework">Django REST Framework</a></li>
           <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#fastapi">FastAPI</a></li>
          </ul></li>
         <li><a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#conclusion">Conclusion</a></li>
        </ul>
       </div>
      </div>
      <div class="sidebar-module sidebar-module-inset p-0" style="overflow:hidden;">
       <div style="display:block;position:relative;">
        <div style="display:block;width:100%;padding-top:12.5%;"></div>
        <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div>
       </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"><span class="icon baseline mr-1" aria-hidden="true">
         <svg aria-hidden="true">
          <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
         </svg></span>Remove ads</a>
      </div>
      <div class="border rounded p-3 card mb-2 text-wrap-pretty">
       <p class="mb-0"><span class="badge badge-pill badge-success"><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#v4--play-circle" />
          </svg></span> Watch Now</span> This tutorial has a related video course created by the Real Python team. Watch it together with the written tutorial to deepen your understanding: <a class="stretched-link text-success" href="https://realpython-com.translate.goog/courses/interacting-rest-apis-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc"><strong>Interacting With REST APIs and Python</strong></a></p>
      </div>
      <p>There’s an amazing amount of data available on the Web. Many <strong>web services</strong>, like YouTube and GitHub, make their data accessible to third-party applications through an <strong>application programming interface (API)</strong>. One of the most popular ways to build APIs is the <strong>REST</strong> architecture style. Python provides some great tools not only to get data from REST APIs but also to build your own Python REST APIs.</p>
      <p><strong>In this tutorial, you’ll learn:</strong></p>
      <ul>
       <li>What <strong>REST</strong> architecture is</li>
       <li>How <strong>REST APIs</strong> provide access to web data</li>
       <li>How to consume data from REST APIs using the <strong><code>requests</code></strong> library</li>
       <li>What steps to take to <strong>build a REST API</strong></li>
       <li>What some popular <strong>Python tools</strong> are for building REST APIs</li>
      </ul>
      <p>By using Python and REST APIs, you can retrieve, parse, update, and manipulate the data provided by any web service you’re interested in.</p>
      <div class="alert alert-warning" role="alert">
       <p><strong>Free Bonus:</strong> <a href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="alert-link" data-toggle="modal" data-target="#modal-rest-api-guide-exampes" data-focus="false">Click here to download a copy of the "REST API Examples" Guide</a> and get a hands-on introduction to Python + REST API principles with actionable examples.</p>
      </div>
      <div class="container border rounded text-wrap-pretty my-3">
       <p class="my-3"><mark class="marker-highlight"><strong><span class="icon baseline" aria-hidden="true">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@quiz" />
           </svg></span> Take the Quiz:</strong></mark> Test your knowledge with our interactive “Python and REST APIs: Interacting With Web Services” quiz. You’ll receive a score upon completion to help you track your learning progress:</p>
       <hr>
       <div class="row my-3">
        <div class="col-xs-12 col-sm-4 col-md-3 align-self-center"><a href="https://realpython-com.translate.goog/quizzes/api-integration-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" tabindex="-1">
          <div class="embed-responsive embed-responsive-16by9"><img class="card-img-top m-0 p-0 embed-responsive-item rounded" style="object-fit: contain; background: #e5c5ac;" alt="Python API Integration" src="https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg" width="1920" height="1080" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=480?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 480w,https://realpython-com.translate.goog/cdn-cgi/image/width=640?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 640w,https://realpython-com.translate.goog/cdn-cgi/image/width=960?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 960w,https://realpython-com.translate.goog/cdn-cgi/image/width=1920?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 1920w" sizes="(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)">
           <div class="card-img-overlay d-flex align-items-center">
            <div class="mx-auto"><span class="text-light" style="opacity: 0.90;"><span class="icon baseline scale2x" aria-hidden="true">
               <svg aria-hidden="true">
                <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@quiz" />
               </svg></span></span>
            </div>
           </div>
          </div></a>
        </div>
        <div class="col">
         <div class="mt-3 d-md-none"></div>
         <p class="small text-muted mb-0"><strong>Interactive Quiz</strong></p><a href="https://realpython-com.translate.goog/quizzes/api-integration-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="stretched-link"><span class="my-0 h4">Python and REST APIs: Interacting With Web Services</span></a>
         <p class="text-muted mb-0 small">In this quiz, you'll test your understanding of REST APIs and how to interact with them using Python. With this knowledge, you'll be able to retrieve, parse, update, and manipulate data provided by any RESTful API that you're interested in.</p>
        </div>
       </div>
      </div>
      <section class="section2">
       <h2 id="rest-architecture">REST Architecture<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-architecture" title="Permanent link"></a></h2>
       <p><strong>REST</strong> stands for <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/Representational_state_transfer"><strong>re</strong>presentational <strong>s</strong>tate <strong>t</strong>ransfer</a> and is a software architecture style that defines a pattern for <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/Client%25E2%2580%2593server_model">client and server</a> communications over a network. REST provides a set of constraints for software architecture to promote performance, scalability, simplicity, and reliability in the system.</p>
       <p>REST defines the following architectural constraints:</p>
       <ul>
        <li><strong>Stateless:</strong> The server won’t maintain any state between requests from the client.</li>
        <li><strong>Client-server:</strong> The client and server must be decoupled from each other, allowing each to develop independently.</li>
        <li><strong>Cacheable:</strong> The data retrieved from the server should be cacheable either by the client or by the server.</li>
        <li><strong>Uniform interface:</strong> The server will provide a uniform interface for accessing resources without defining their representation.</li>
        <li><strong>Layered system:</strong> The client may access the resources on the server indirectly through other layers such as a <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/Proxy_server">proxy</a> or <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/Load_balancing_(computing)">load balancer</a>.</li>
        <li><strong>Code on demand (optional):</strong> The server may transfer code to the client that it can run, such as <a href="https://realpython-com.translate.goog/python-vs-javascript/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">JavaScript</a> for a single-page application.</li>
       </ul>
       <p>Note, REST is <em>not</em> a specification but a set of guidelines on how to architect a network-connected software system.</p>
       <div>
        <div class="rounded border border-light" style="display:block;position:relative;">
         <div style="display:block;width:100%;padding-top:12.5%;"></div>
         <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
         </div>
        </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
          </svg></span>Remove ads</a>
       </div>
      </section>
      <section class="section2">
       <h2 id="rest-apis-and-web-services">REST APIs and Web Services<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-apis-and-web-services" title="Permanent link"></a></h2>
       <p>A <strong>REST web service</strong> is any web service that adheres to REST architecture constraints. These web services expose their data to the outside world through an API. REST APIs provide access to web service data through public web URLs.</p>
       <p>For example, here’s one of the URLs for <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.github.com/en/free-pro-team@latest/rest">GitHub’s REST API</a>:</p>
       <div class="highlight">
        <pre><span></span><code>https://api.github.com/users/&lt;username&gt;
</code></pre>
       </div>
       <p>This URL allows you to access information about a specific GitHub user. You access data from a REST API by sending an <a href="https://realpython-com.translate.goog/python-https/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#what-is-http">HTTP request</a> to a specific URL and processing the response.</p>
       <section class="section3">
        <h3 id="http-methods">HTTP Methods<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#http-methods" title="Permanent link"></a></h3>
        <p>REST APIs listen for <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods">HTTP methods</a> like <code>GET</code>, <code>POST</code>, and <code>DELETE</code> to know which operations to perform on the web service’s resources. A <strong>resource</strong> is any data available in the web service that can be accessed and manipulated with <strong>HTTP requests</strong> to the REST API. The HTTP method tells the API which action to perform on the resource.</p>
        <p>While there are many HTTP methods, the five methods listed below are the most commonly used with REST APIs:</p>
        <div class="table-responsive">
         <table class="table table-hover">
          <thead>
           <tr>
            <th>HTTP method</th>
            <th>Description</th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td><code>GET</code></td>
            <td>Retrieve an existing resource.</td>
           </tr>
           <tr>
            <td><code>POST</code></td>
            <td>Create a new resource.</td>
           </tr>
           <tr>
            <td><code>PUT</code></td>
            <td>Update an existing resource.</td>
           </tr>
           <tr>
            <td><code>PATCH</code></td>
            <td>Partially update an existing resource.</td>
           </tr>
           <tr>
            <td><code>DELETE</code></td>
            <td>Delete a resource.</td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>A REST API client application can use these five HTTP methods to manage the state of resources in the web service.</p>
       </section>
       <section class="section3">
        <h3 id="status-codes">Status Codes<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#status-codes" title="Permanent link"></a></h3>
        <p>Once a REST API receives and processes an HTTP request, it will return an <strong>HTTP response</strong>. Included in this response is an <strong>HTTP status code</strong>. This code provides information about the results of the request. An application sending requests to the API can check the status code and perform actions based on the result. These actions could include handling errors or displaying a success message to a user.</p>
        <p>Below is a list of the most common status codes returned by REST APIs:</p>
        <div class="table-responsive">
         <table class="table table-hover">
          <thead>
           <tr>
            <th>Code</th>
            <th>Meaning</th>
            <th>Description</th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td><code>200</code></td>
            <td>OK</td>
            <td>The requested action was successful.</td>
           </tr>
           <tr>
            <td><code>201</code></td>
            <td>Created</td>
            <td>A new resource was created.</td>
           </tr>
           <tr>
            <td><code>202</code></td>
            <td>Accepted</td>
            <td>The request was received, but no modification has been made yet.</td>
           </tr>
           <tr>
            <td><code>204</code></td>
            <td>No Content</td>
            <td>The request was successful, but the response has no content.</td>
           </tr>
           <tr>
            <td><code>400</code></td>
            <td>Bad Request</td>
            <td>The request was malformed.</td>
           </tr>
           <tr>
            <td><code>401</code></td>
            <td>Unauthorized</td>
            <td>The client is not authorized to perform the requested action.</td>
           </tr>
           <tr>
            <td><code>404</code></td>
            <td>Not Found</td>
            <td>The requested resource was not found.</td>
           </tr>
           <tr>
            <td><code>415</code></td>
            <td>Unsupported Media Type</td>
            <td>The request data format is not supported by the server.</td>
           </tr>
           <tr>
            <td><code>422</code></td>
            <td>Unprocessable Entity</td>
            <td>The request data was properly formatted but contained invalid or missing data.</td>
           </tr>
           <tr>
            <td><code>500</code></td>
            <td>Internal Server Error</td>
            <td>The server threw an error when processing the request.</td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>These ten status codes represent only a small subset of the available <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/List_of_HTTP_status_codes">HTTP status codes</a>. Status codes are numbered based on the category of the result:</p>
        <div class="table-responsive">
         <table class="table table-hover">
          <thead>
           <tr>
            <th>Code range</th>
            <th>Category</th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td><code>2xx</code></td>
            <td>Successful operation</td>
           </tr>
           <tr>
            <td><code>3xx</code></td>
            <td>Redirection</td>
           </tr>
           <tr>
            <td><code>4xx</code></td>
            <td>Client error</td>
           </tr>
           <tr>
            <td><code>5xx</code></td>
            <td>Server error</td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>HTTP status codes come in handy when working with REST APIs as you’ll often need to perform different logic based on the results of the request.</p>
       </section>
       <section class="section3">
        <h3 id="api-endpoints">API Endpoints<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#api-endpoints" title="Permanent link"></a></h3>
        <p>A REST API exposes a set of public URLs that client applications use to access the resources of a web service. These URLs, in the context of an API, are called <strong>endpoints</strong>.</p>
        <p>To help clarify this, take a look at the table below. In this table, you’ll see API endpoints for a hypothetical <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/Customer_relationship_management">CRM</a> system. These endpoints are for a customer resource that represents potential <code>customers</code> in the system:</p>
        <div class="table-responsive">
         <table class="table table-hover">
          <thead>
           <tr>
            <th>HTTP method</th>
            <th>API endpoint</th>
            <th>Description</th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td><code>GET</code></td>
            <td><code>/customers</code></td>
            <td>Get a list of customers.</td>
           </tr>
           <tr>
            <td><code>GET</code></td>
            <td><code>/customers/&lt;customer_id&gt;</code></td>
            <td>Get a single customer.</td>
           </tr>
           <tr>
            <td><code>POST</code></td>
            <td><code>/customers</code></td>
            <td>Create a new customer.</td>
           </tr>
           <tr>
            <td><code>PUT</code></td>
            <td><code>/customers/&lt;customer_id&gt;</code></td>
            <td>Update a customer.</td>
           </tr>
           <tr>
            <td><code>PATCH</code></td>
            <td><code>/customers/&lt;customer_id&gt;</code></td>
            <td>Partially update a customer.</td>
           </tr>
           <tr>
            <td><code>DELETE</code></td>
            <td><code>/customers/&lt;customer_id&gt;</code></td>
            <td>Delete a customer.</td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>Each of the endpoints above performs a different action based on the HTTP method.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> The base URL for the endpoints has been omitted for brevity. In reality, you’ll need the full URL path to access an API endpoint:</p>
         <div class="highlight">
          <pre><span></span><code>https://api.example.com/customers
</code></pre>
         </div>
         <p>This is the full URL you’d use to access this endpoint. The base URL is everything besides <code>/customers</code>.</p>
        </div>
        <p>You’ll note that some endpoints have <code>&lt;customer_id&gt;</code> at the end. This notation means you need to append a numeric <code>customer_id</code> to the URL to tell the REST API which <code>customer</code> you’d like to work with.</p>
        <p>The endpoints listed above represent only one resource in the system. Production-ready REST APIs often have tens or even hundreds of different endpoints to manage the resources in the web service.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
      </section>
      <section class="section2">
       <h2 id="rest-and-python-consuming-apis">REST and Python: Consuming APIs<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-consuming-apis" title="Permanent link"></a></h2>
       <p>To write code that interacts with REST APIs, most Python developers turn to <a href="https://realpython-com.translate.goog/python-requests/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc"><code>requests</code></a> to send HTTP requests. This library abstracts away the complexities of making HTTP requests. It’s one of the few projects worth treating as if it’s part of the standard library.</p>
       <p>To start using <code>requests</code>, you need to install it first. You can use <a href="https://realpython-com.translate.goog/what-is-pip/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc"><code>pip</code></a> to install it:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
        <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
         <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
            </svg></span></span>
         </div>
        </div>
        <div class="codeblock__contents">
         <div class="highlight highlight--with-header">
          <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>requests
</code></pre>
         </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
           </svg></span></button>
        </div>
       </code-block>
       <p>Now that you’ve got <code>requests</code> installed, you can start sending HTTP requests.</p>
       <section class="section3">
        <h3 id="get">GET<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#get" title="Permanent link"></a></h3>
        <p><code>GET</code> is one of the most common HTTP methods you’ll use when working with REST APIs. This method allows you to retrieve resources from a given API. <code>GET</code> is a <strong>read-only</strong> operation, so you shouldn’t use it to modify an existing resource.</p>
        <p>To test out <code>GET</code> and the other methods in this section, you’ll use a service called <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://jsonplaceholder.typicode.com/">JSONPlaceholder</a>. This free service provides fake API endpoints that send back responses that <code>requests</code> can process.</p>
        <p>To try this out, start up the <a href="https://realpython-com.translate.goog/interacting-with-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Python REPL</a> and run the following commands to send a <code>GET</code> request to a JSONPlaceholder endpoint:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="pycon" data-is-repl="true">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">requests</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">api_url</span> <span class="o">=</span> <span class="s2">"https://jsonplaceholder.typicode.com/todos/1"</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">api_url</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
<span class="go">{'userId': 1, 'id': 1, 'title': 'delectus aut autem', 'completed': False}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This code calls <code>requests.get()</code> to send a <code>GET</code> request to <code>/todos/1</code>, which responds with the <code>todo</code> item with the ID <code>1</code>. Then you can call <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.python-requests.org/en/master/user/quickstart/%23json-response-content"><code>.json()</code></a> on the <code>response</code> object to view the data that came back from the API.</p>
        <p>The response data is formatted as <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.json.org/json-en.html">JSON</a>, a key-value store similar to a <a href="https://realpython-com.translate.goog/python-dicts/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Python dictionary</a>. It’s a very popular data format and the de facto interchange format for most REST APIs.</p>
        <p>Beyond viewing the JSON data from the API, you can also view other things about the <code>response</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="pycon" data-is-repl="true">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
<span class="go">200</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s2">"Content-Type"</span><span class="p">]</span>
<span class="go">'application/json; charset=utf-8'</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Here, you access <code>response.status_code</code> to see the HTTP status code. You can also view the response’s <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers">HTTP headers</a> with <code>response.headers</code>. This dictionary contains metadata about the response, such as the <code>Content-Type</code> of the response.</p>
       </section>
       <section class="section3">
        <h3 id="post">POST<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#post" title="Permanent link"></a></h3>
        <p>Now, take a look at how you use <code>requests</code> to <code>POST</code> data to a REST API to create a new resource. You’ll use JSONPlaceholder again, but this time you’ll include JSON data in the request. Here’s the data that you’ll send:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="json">
         <div class="codeblock__header codeblock--purple"><span class="mr-2 noselect" aria-label="Language">JSON</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="p">{</span>
<span class="w">    </span><span class="nt">"userId"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Buy milk"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"completed"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This JSON contains information for a new <code>todo</code> item. Back in the Python REPL, run the following code to create the new <code>todo</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="pycon" data-is-repl="true">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">requests</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">api_url</span> <span class="o">=</span> <span class="s2">"https://jsonplaceholder.typicode.com/todos"</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">todo</span> <span class="o">=</span> <span class="p">{</span><span class="s2">"userId"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"title"</span><span class="p">:</span> <span class="s2">"Buy milk"</span><span class="p">,</span> <span class="s2">"completed"</span><span class="p">:</span> <span class="kc">False</span><span class="p">}</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">api_url</span><span class="p">,</span> <span class="n">json</span><span class="o">=</span><span class="n">todo</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
<span class="go">{'userId': 1, 'title': 'Buy milk', 'completed': False, 'id': 201}</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
<span class="go">201</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Here, you call <code>requests.post()</code> to create a new <code>todo</code> in the system.</p>
        <p>First, you create a dictionary containing the data for your <code>todo</code>. Then you pass this dictionary to the <code>json</code> keyword argument of <code>requests.post()</code>. When you do this, <code>requests.post()</code> automatically sets the request’s HTTP header <code>Content-Type</code> to <code>application/json</code>. It also serializes <code>todo</code> into a JSON string, which it appends to the body of the request.</p>
        <p>If you don’t use the <code>json</code> keyword argument to supply the JSON data, then you need to set <code>Content-Type</code> accordingly and serialize the JSON manually. Here’s an equivalent version to the previous code:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="pycon" data-is-repl="true">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">requests</span>
<span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">json</span>
</span><span class="gp">&gt;&gt;&gt; </span><span class="n">api_url</span> <span class="o">=</span> <span class="s2">"https://jsonplaceholder.typicode.com/todos"</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">todo</span> <span class="o">=</span> <span class="p">{</span><span class="s2">"userId"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"title"</span><span class="p">:</span> <span class="s2">"Buy milk"</span><span class="p">,</span> <span class="s2">"completed"</span><span class="p">:</span> <span class="kc">False</span><span class="p">}</span>
<span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">headers</span> <span class="o">=</span>  <span class="p">{</span><span class="s2">"Content-Type"</span><span class="p">:</span><span class="s2">"application/json"</span><span class="p">}</span>
</span><span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">api_url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">todo</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</span><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
<span class="go">{'userId': 1, 'title': 'Buy milk', 'completed': False, 'id': 201}</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
<span class="go">201</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>In this code, you add a <code>headers</code> dictionary that contains a single header <code>Content-Type</code> set to <code>application/json</code>. This tells the REST API that you’re sending JSON data with the request.</p>
        <p>You then call <code>requests.post()</code>, but instead of passing <code>todo</code> to the <code>json</code> argument, you first call <code>json.dumps(todo)</code> to serialize it. After it’s serialized, you pass it to the <code>data</code> keyword argument. The <code>data</code> argument tells <code>requests</code> what data to include in the request. You also pass the <code>headers</code> dictionary to <code>requests.post()</code> to set the HTTP headers manually.</p>
        <p>When you call <code>requests.post()</code> like this, it has the same effect as the previous code but gives you more control over the request.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.python.org/3/library/json.html%23json.dumps"><code>json.dumps()</code></a> comes from the <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.python.org/3/library/json.html"><code>json</code></a> package in the standard library. This package provides useful methods for working with <a href="https://realpython-com.translate.goog/python-json/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">JSON in Python</a>.</p>
        </div>
        <p>Once the API responds, you call <code>response.json()</code> to view the JSON. The JSON includes a generated <code>id</code> for the new <code>todo</code>. The <code>201</code> status code tells you that a new resource was created.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
       <section class="section3">
        <h3 id="put">PUT<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#put" title="Permanent link"></a></h3>
        <p>Beyond <code>GET</code> and <code>POST</code>, <code>requests</code> provides support for all the other HTTP methods you would use with a REST API. The following code sends a <code>PUT</code> request to update an existing <code>todo</code> with new data. Any data sent with a <code>PUT</code> request will completely replace the existing values of the <code>todo</code>.</p>
        <p>You’ll use the same JSONPlaceholder endpoint you used with <code>GET</code> and <code>POST</code>, but this time you’ll append <code>10</code> to the end of the URL. This tells the REST API which <code>todo</code> you’d like to update:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="pycon" data-is-repl="true">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">requests</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">api_url</span> <span class="o">=</span> <span class="s2">"https://jsonplaceholder.typicode.com/todos/10"</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">api_url</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
<span class="go">{'userId': 1, 'id': 10, 'title': 'illo est ... aut', 'completed': True}</span>

<span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">todo</span> <span class="o">=</span> <span class="p">{</span><span class="s2">"userId"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"title"</span><span class="p">:</span> <span class="s2">"Wash car"</span><span class="p">,</span> <span class="s2">"completed"</span><span class="p">:</span> <span class="kc">True</span><span class="p">}</span>
</span><span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">put</span><span class="p">(</span><span class="n">api_url</span><span class="p">,</span> <span class="n">json</span><span class="o">=</span><span class="n">todo</span><span class="p">)</span>
</span><span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span><span class="go">{'userId': 1, 'title': 'Wash car', 'completed': True, 'id': 10}</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
<span class="go">200</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Here, you first call <code>requests.get()</code> to view the contents of the existing <code>todo</code>. Next, you call <code>requests.put()</code> with new JSON data to replace the existing to-do’s values. You can see the new values when you call <code>response.json()</code>. Successful <code>PUT</code> requests will always return <code>200</code> instead of <code>201</code> because you aren’t creating a new resource but just updating an existing one.</p>
       </section>
       <section class="section3">
        <h3 id="patch">PATCH<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#patch" title="Permanent link"></a></h3>
        <p>Next up, you’ll use <code>requests.patch()</code> to modify the value of a specific field on an existing <code>todo</code>. <code>PATCH</code> differs from <code>PUT</code> in that it doesn’t completely replace the existing resource. It only modifies the values set in the JSON sent with the request.</p>
        <p>You’ll use the same <code>todo</code> from the last example to try out <code>requests.patch()</code>. Here are the current values:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="p">{</span><span class="s1">'userId'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">'title'</span><span class="p">:</span> <span class="s1">'Wash car'</span><span class="p">,</span> <span class="s1">'completed'</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s1">'id'</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Now you can update the <code>title</code> with a new value:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="pycon" data-is-repl="true">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">requests</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">api_url</span> <span class="o">=</span> <span class="s2">"https://jsonplaceholder.typicode.com/todos/10"</span>
<span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">todo</span> <span class="o">=</span> <span class="p">{</span><span class="s2">"title"</span><span class="p">:</span> <span class="s2">"Mow lawn"</span><span class="p">}</span>
</span><span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">patch</span><span class="p">(</span><span class="n">api_url</span><span class="p">,</span> <span class="n">json</span><span class="o">=</span><span class="n">todo</span><span class="p">)</span>
</span><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
<span class="go">{'userId': 1, 'id': 10, 'title': 'Mow lawn', 'completed': True}</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
<span class="go">200</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>When you call <code>response.json()</code>, you can see that <code>title</code> was updated to <code>Mow lawn</code>.</p>
       </section>
       <section class="section3">
        <h3 id="delete">DELETE<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#delete" title="Permanent link"></a></h3>
        <p>Last but not least, if you want to completely remove a resource, then you use <code>DELETE</code>. Here’s the code to remove a <code>todo</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="pycon" data-is-repl="true">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span><span class="w"> </span><span class="nn">requests</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">api_url</span> <span class="o">=</span> <span class="s2">"https://jsonplaceholder.typicode.com/todos/10"</span>
<span class="hll"><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">api_url</span><span class="p">)</span>
</span><span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
<span class="go">{}</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">response</span><span class="o">.</span><span class="n">status_code</span>
<span class="go">200</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>You call <code>requests.delete()</code> with an API URL that contains the ID for the <code>todo</code> you would like to remove. This sends a <code>DELETE</code> request to the REST API, which then removes the matching resource. After deleting the resource, the API sends back an empty JSON object indicating that the resource has been deleted.</p>
        <p>The <code>requests</code> library is an awesome tool for working with REST APIs and an indispensable part of your Python tool belt. In the next section, you’ll change gears and consider what it takes to build a REST API.</p>
       </section>
      </section>
      <section class="section2">
       <h2 id="rest-and-python-building-apis">REST and Python: Building APIs<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-building-apis" title="Permanent link"></a></h2>
       <p>REST API design is a huge topic with many layers. As with most things in technology, there’s a wide range of opinions on the best approach to building APIs. In this section, you’ll look at some recommended steps to follow as you build an API.</p>
       <section class="section3">
        <h3 id="identify-resources">Identify Resources<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#identify-resources" title="Permanent link"></a></h3>
        <p>The first step you’ll take as you build a REST API is to identify the resources the API will manage. It’s common to describe these resources as plural nouns, like <code>customers</code>, <code>events</code>, or <code>transactions</code>. As you identify different resources in your web service, you’ll build out a list of nouns that describe the different data users can manage in the API.</p>
        <p>As you do this, make sure to consider any nested resources. For example, <code>customers</code> may have <code>sales</code>, or <code>events</code> may contain <code>guests</code>. Establishing these resource hierarchies will help when you define API endpoints.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
       <section class="section3">
        <h3 id="define-your-endpoints">Define Your Endpoints<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#define-your-endpoints" title="Permanent link"></a></h3>
        <p>Once you’ve identified the resources in your web service, you’ll want to use these to define the API endpoints. Here are some example endpoints for a <code>transactions</code> resource you might find in an API for a payment processing service:</p>
        <div class="table-responsive">
         <table class="table table-hover">
          <thead>
           <tr>
            <th>HTTP method</th>
            <th>API endpoint</th>
            <th>Description</th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td><code>GET</code></td>
            <td><code>/transactions</code></td>
            <td>Get a list of transactions.</td>
           </tr>
           <tr>
            <td><code>GET</code></td>
            <td><code>/transactions/&lt;transaction_id&gt;</code></td>
            <td>Get a single transaction.</td>
           </tr>
           <tr>
            <td><code>POST</code></td>
            <td><code>/transactions</code></td>
            <td>Create a new transaction.</td>
           </tr>
           <tr>
            <td><code>PUT</code></td>
            <td><code>/transactions/&lt;transaction_id&gt;</code></td>
            <td>Update a transaction.</td>
           </tr>
           <tr>
            <td><code>PATCH</code></td>
            <td><code>/transactions/&lt;transaction_id&gt;</code></td>
            <td>Partially update a transaction.</td>
           </tr>
           <tr>
            <td><code>DELETE</code></td>
            <td><code>/transactions/&lt;transaction_id&gt;</code></td>
            <td>Delete a transaction.</td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>These six endpoints cover all the operations that you’ll need to create, read, update, and delete <code>transactions</code> in the web service. Each resource in your web service would have a similar list of endpoints based on what actions a user can perform with the API.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> An endpoint shouldn’t contain verbs. Instead, you should select the appropriate HTTP methods to convey the endpoint’s action. For example, the endpoint below contains an unneeded verb:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
          <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
           <div class="noselect">
           </div>
          </div>
          <div class="codeblock__contents">
           <div class="highlight highlight--with-header">
            <pre><span></span><code><span class="err">GET /getTransactions</span>
</code></pre>
           </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
             </svg></span></button>
          </div>
         </code-block>
         <p>Here, <code>get</code> is included in the endpoint when it isn’t needed. The HTTP method <code>GET</code> already provides the semantic meaning for the endpoint by indicating the action. You can remove <code>get</code> from the endpoint:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
          <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
           <div class="noselect">
           </div>
          </div>
          <div class="codeblock__contents">
           <div class="highlight highlight--with-header">
            <pre><span></span><code><span class="err">GET /transactions</span>
</code></pre>
           </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
             </svg></span></button>
          </div>
         </code-block>
         <p>This endpoint contains only a plural noun, and the HTTP method <code>GET</code> communicates the action.</p>
        </div>
        <p>Now take a look at an example of endpoints for a nested resource. Here, you’ll see endpoints for <code>guests</code> that are nested under <code>events</code> resources:</p>
        <div class="table-responsive">
         <table class="table table-hover">
          <thead>
           <tr>
            <th>HTTP method</th>
            <th>API endpoint</th>
            <th>Description</th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td><code>GET</code></td>
            <td><code>/events/&lt;event_id&gt;/guests</code></td>
            <td>Get a list of guests.</td>
           </tr>
           <tr>
            <td><code>GET</code></td>
            <td><code>/events/&lt;event_id&gt;/guests/&lt;guest_id&gt;</code></td>
            <td>Get a single guest.</td>
           </tr>
           <tr>
            <td><code>POST</code></td>
            <td><code>/events/&lt;event_id&gt;/guests</code></td>
            <td>Create a new guest.</td>
           </tr>
           <tr>
            <td><code>PUT</code></td>
            <td><code>/events/&lt;event_id&gt;/guests/&lt;guest_id&gt;</code></td>
            <td>Update a guest.</td>
           </tr>
           <tr>
            <td><code>PATCH</code></td>
            <td><code>/events/&lt;event_id&gt;/guests/&lt;guest_id&gt;</code></td>
            <td>Partially update a guest.</td>
           </tr>
           <tr>
            <td><code>DELETE</code></td>
            <td><code>/events/&lt;event_id&gt;/guests/&lt;guest_id&gt;</code></td>
            <td>Delete a guest.</td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>With these endpoints, you can manage <code>guests</code> for a specific event in the system.</p>
        <p>This isn’t the only way to define an endpoint for nested resources. Some people prefer to use <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/Query_string">query strings</a> to access a nested resource. A query string allows you to send additional parameters with your HTTP request. In the following endpoint, you append a query string to get <code>guests</code> for a specific <code>event_id</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="err">GET /guests?event_id=23</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This endpoint will filter out any <code>guests</code> that don’t reference the given <code>event_id</code>. As with many things in API design, you need to decide which method fits your web service best.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> It’s very unlikely that your REST API will stay the same throughout the life of your web service. Resources will change, and you’ll need to update your endpoints to reflect these changes. This is where <strong>API versioning</strong> comes in. API versioning allows you to modify your API without fear of breaking existing integrations.</p>
         <p>There’s a wide range of versioning strategies. Selecting the right option depends on the requirements of your API. Below are some of the most popular options for API versioning:</p>
         <ul>
          <li><a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design%23uri-versioning">URI versioning</a></li>
          <li><a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design%23header-versioning">HTTP header versioning</a></li>
          <li><a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design%23query-string-versioning">Query string versioning</a></li>
          <li><a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design%23media-type-versioning">Media type versioning</a></li>
         </ul>
         <p>No matter what strategy you select, versioning your API is an important step to ensuring it can adapt to changing requirements while supporting existing users.</p>
        </div>
        <p>Now that you’ve covered endpoints, in the next section you’ll look at some options for formatting data in your REST API.</p>
       </section>
       <section class="section3">
        <h3 id="pick-your-data-interchange-format">Pick Your Data Interchange Format<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#pick-your-data-interchange-format" title="Permanent link"></a></h3>
        <p>Two popular options for formatting web service data are <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/XML">XML</a> and JSON. Traditionally, XML was very popular with <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://en.wikipedia.org/wiki/SOAP">SOAP</a> APIs, but JSON is more popular with REST APIs. To compare the two, take a look at an example <code>book</code> resource formatted as XML and JSON.</p>
        <p>Here’s the book formatted as XML:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="xml">
         <div class="codeblock__header codeblock--green"><span class="mr-2 noselect" aria-label="Language">XML</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;book&gt;</span>
<span class="w">    </span><span class="nt">&lt;title&gt;</span>Python<span class="w"> </span>Basics<span class="nt">&lt;/title&gt;</span>
<span class="w">    </span><span class="nt">&lt;page_count&gt;</span>635<span class="nt">&lt;/page_count&gt;</span>
<span class="w">    </span><span class="nt">&lt;pub_date&gt;</span>2021-03-16<span class="nt">&lt;/pub_date&gt;</span>
<span class="w">    </span><span class="nt">&lt;authors&gt;</span>
<span class="w">        </span><span class="nt">&lt;author&gt;</span>
<span class="w">            </span><span class="nt">&lt;name&gt;</span>David<span class="w"> </span>Amos<span class="nt">&lt;/name&gt;</span>
<span class="w">        </span><span class="nt">&lt;/author&gt;</span>
<span class="w">        </span><span class="nt">&lt;author&gt;</span>
<span class="w">            </span><span class="nt">&lt;name&gt;</span>Joanna<span class="w"> </span>Jablonski<span class="nt">&lt;/name&gt;</span>
<span class="w">        </span><span class="nt">&lt;/author&gt;</span>
<span class="w">        </span><span class="nt">&lt;author&gt;</span>
<span class="w">            </span><span class="nt">&lt;name&gt;</span>Dan<span class="w"> </span>Bader<span class="nt">&lt;/name&gt;</span>
<span class="w">        </span><span class="nt">&lt;/author&gt;</span>
<span class="w">        </span><span class="nt">&lt;author&gt;</span>
<span class="w">            </span><span class="nt">&lt;name&gt;</span>Fletcher<span class="w"> </span>Heisler<span class="nt">&lt;/name&gt;</span>
<span class="w">        </span><span class="nt">&lt;/author&gt;</span>
<span class="w">    </span><span class="nt">&lt;/authors&gt;</span>
<span class="w">    </span><span class="nt">&lt;isbn13&gt;</span>978-1775093329<span class="nt">&lt;/isbn13&gt;</span>
<span class="w">    </span><span class="nt">&lt;genre&gt;</span>Education<span class="nt">&lt;/genre&gt;</span>
<span class="nt">&lt;/book&gt;</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>XML uses a series of <strong>elements</strong> to encode data. Each element has an opening and closing tag, with the data in between. Elements can be nested inside other elements. You can see this above, where several <code>&lt;author&gt;</code> tags are nested inside of <code>&lt;authors&gt;</code>.</p>
        <p>Now, take a look at the same <code>book</code> in JSON:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="json">
         <div class="codeblock__header codeblock--purple"><span class="mr-2 noselect" aria-label="Language">JSON</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="p">{</span>
<span class="w">    </span><span class="nt">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Python Basics"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"page_count"</span><span class="p">:</span><span class="w"> </span><span class="mi">635</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"pub_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2021-03-16"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"authors"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span>
<span class="w">        </span><span class="p">{</span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"David Amos"</span><span class="p">},</span>
<span class="w">        </span><span class="p">{</span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Joanna Jablonski"</span><span class="p">},</span>
<span class="w">        </span><span class="p">{</span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Dan Bader"</span><span class="p">},</span>
<span class="w">        </span><span class="p">{</span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Fletcher Heisler"</span><span class="p">}</span>
<span class="w">    </span><span class="p">],</span>
<span class="w">    </span><span class="nt">"isbn13"</span><span class="p">:</span><span class="w"> </span><span class="s2">"978-1775093329"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"genre"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Education"</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>JSON stores data in key-value pairs similar to a Python dictionary. Like XML, JSON supports nesting data to any level, so you can model complex data.</p>
        <p>Neither JSON nor XML is inherently better than the other, but there’s a preference for JSON among REST API developers. This is especially true when you pair a REST API with a front-end framework like <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://reactjs.org/">React</a> or <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://vuejs.org/">Vue</a>.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
       <section class="section3">
        <h3 id="design-success-responses">Design Success Responses<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#design-success-responses" title="Permanent link"></a></h3>
        <p>Once you’ve picked a data format, the next step is to decide how you’ll respond to HTTP requests. All responses from your REST API should have a similar format and include the proper HTTP status code.</p>
        <p>In this section, you’ll look at some example HTTP responses for a hypothetical API that manages an inventory of <code>cars</code>. These examples will give you a sense of how you should format your API responses. To make things clear, you’ll look at raw HTTP requests and responses instead of using an HTTP library like <code>requests</code>.</p>
        <p>To start things off, take a look at a <code>GET</code> request to <code>/cars</code>, which returns a list of <code>cars</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">GET</span> <span class="nn">/cars</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This HTTP request is made up of four parts:</p>
        <ol>
         <li><strong><code>GET</code></strong> is the HTTP method type.</li>
         <li><strong><code>/cars</code></strong> is the API endpoint.</li>
         <li><strong><code>HTTP/1.1</code></strong> is the HTTP version.</li>
         <li><strong><code>Host: api.example.com</code></strong> is the API host.</li>
        </ol>
        <p>These four parts are all you need to send a <code>GET</code> request to <code>/cars</code>. Now take a look at the response. This API uses JSON as the data interchange format:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>
<span class="err">...</span>

<span class="p">[</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"GMC"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1500 Club Coupe"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">1998</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1D7RV1GTXAS806941"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Red"</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Lamborghini"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"model"</span><span class="p">:</span><span class="s2">"Gallardo"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"year"</span><span class="p">:</span><span class="mi">2006</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"vin"</span><span class="p">:</span><span class="s2">"JN1BY1PR0FM736887"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"color"</span><span class="p">:</span><span class="s2">"Mauve"</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Chevrolet"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"model"</span><span class="p">:</span><span class="s2">"Monte Carlo"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"year"</span><span class="p">:</span><span class="mi">1996</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"vin"</span><span class="p">:</span><span class="s2">"1G4HP54K714224234"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"color"</span><span class="p">:</span><span class="s2">"Violet"</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>The API returns a response that contains a list of <code>cars</code>. You know that the response was successful because of the <code>200 OK</code> status code. The response also has a <code>Content-Type</code> header set to <code>application/json</code>. This tells the user to parse the response as JSON.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> When you’re working with a real API, you’re going to see more HTTP headers than this. These headers differ between APIs, so they’ve been excluded in these examples.</p>
        </div>
        <p>It’s important to always set the correct <code>Content-Type</code> header on your response. If you send JSON, then set <code>Content-Type</code> to <code>application/json</code>. If XML, then set it to <code>application/xml</code>. This header tells the user how they should parse the data.</p>
        <p>You also want to include an appropriate status code in your response. For any successful <code>GET</code> request, you should return <code>200 OK</code>. This tells the user that their request was processed as expected.</p>
        <p>Take a look at another <code>GET</code> request, this time for a single car:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">GET</span> <span class="nn">/cars/1</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This HTTP request queries the API for car <code>1</code>. Here’s the response:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"GMC"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1500 Club Coupe"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">1998</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1D7RV1GTXAS806941"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Red"</span>
<span class="p">},</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This response contains a single JSON object with the car’s data. Since it’s a single object, it doesn’t need to be wrapped in a list. Like the last response, this also has a <code>200 OK</code> status code.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> A <code>GET</code> request should never modify an existing resource. If the request contains data, then this data should be ignored and the API should return the resource unchanged.</p>
        </div>
        <p>Next up, check out a <code>POST</code> request to add a new car:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">POST</span> <span class="nn">/cars</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Nissan"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"240SX"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">1994</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1N6AD0CU5AC961553"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Violet"</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This <code>POST</code> request includes JSON for the new car in the request. It sets the <code>Content-Type</code> header to <code>application/json</code> so the API knows the content type of the request. The API will create a new car from the JSON.</p>
        <p>Here’s the response:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">201</span> <span class="ne">Created</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Nissan"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"240SX"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">1994</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1N6AD0CU5AC961553"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Violet"</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This response has a <code>201 Created</code> status code to tell the user that a new resource was created. Make sure to use <code>201 Created</code> instead of <code>200 OK</code> for all successful <code>POST</code> requests.</p>
        <p>This response also includes a copy of the new car with an <code>id</code> generated by the API. It’s important to send back an <code>id</code> in the response so that the user can modify the resource again.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> It’s important to always send back a copy of a resource when a user creates it with <code>POST</code> or modifies it with <code>PUT</code> or <code>PATCH</code>. This way, the user can see the changes that they’ve made.</p>
        </div>
        <p>Now take a look at a <code>PUT</code> request:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">PUT</span> <span class="nn">/cars/4</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Buick"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Lucerne"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2006</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4T1BF3EK8AU335094"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="s2">"Maroon"</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This request uses the <code>id</code> from the previous request to update the car with all new data. As a reminder, <code>PUT</code> updates all fields on the resource with new data. Here’s the response:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span>
<span class="hll"><span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Buick"</span><span class="p">,</span>
</span><span class="hll"><span class="w">    </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Lucerne"</span><span class="p">,</span>
</span><span class="hll"><span class="w">    </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2006</span><span class="p">,</span>
</span><span class="hll"><span class="w">    </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4T1BF3EK8AU335094"</span><span class="p">,</span>
</span><span class="hll"><span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="s2">"Maroon"</span>
</span><span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>The response includes a copy of the <code>car</code> with the new data. Again, you always want to send back the full resource for a <code>PUT</code> request. The same applies to a <code>PATCH</code> request:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">PATCH</span> <span class="nn">/cars/4</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"VNKKTUD32FA050307"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Green"</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p><code>PATCH</code> requests only update a part of a resource. In the request above, the <code>vin</code> and <code>color</code> fields will be updated with new values. Here’s the response:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Buick"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Lucerne"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">2006</span><span class="p">,</span>
<span class="hll"><span class="w">    </span><span class="nt">"vin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"VNKKTUD32FA050307"</span><span class="p">,</span>
</span><span class="hll"><span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Green"</span>
</span><span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>The response contains a full copy of the <code>car</code>. As you can see, only the <code>vin</code> and <code>color</code> fields have been updated.</p>
        <p>Finally, take a look at how your REST API should respond when it receives a <code>DELETE</code> request. Here’s a <code>DELETE</code> request to remove a <code>car</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">DELETE</span> <span class="nn">/cars/4</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This <code>DELETE</code> request tells the API to remove the <code>car</code> with the ID <code>4</code>. Here’s the response:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">204</span> <span class="ne">No Content</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This response only includes the status code <code>204 No Content</code>. This status code tells a user that the operation was successful, but no content was returned in the response. This makes sense since the <code>car</code> has been deleted. There’s no reason to send a copy of it back in the response.</p>
        <p>The responses above work well when everything goes as planned, but what happens if there’s a problem with the request? In the next section, you’ll look at how your REST API should respond when errors occur.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
       <section class="section3">
        <h3 id="design-error-responses">Design Error Responses<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#design-error-responses" title="Permanent link"></a></h3>
        <p>There’s always a chance that requests to your REST API could fail. It’s a good idea to define what an error response will look like. These responses should include a description of what error occurred along with the appropriate status code. In this section, you’ll look at a few examples.</p>
        <p>To start, take a look at a request for a resource that doesn’t exist in the API:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">GET</span> <span class="nn">/motorcycles</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Here, the user sends a <code>GET</code> request to <code>/motorcycles</code>, which doesn’t exist. The API sends back the following response:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">404</span> <span class="ne">Not Found</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>
<span class="err">...</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"The requested resource was not found."</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This response includes a <code>404 Not Found</code> status code. Along with this, the response contains a JSON object with a descriptive error message. Providing a descriptive error message gives the user more context for the error.</p>
        <p>Now take a look at the error response when the user sends an invalid request:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">POST</span> <span class="nn">/cars</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Nissan"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"year"</span><span class="p">:</span><span class="w"> </span><span class="mi">1994</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Violet"</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This <code>POST</code> request contains JSON, but it isn’t formatted correctly. It’s missing a closing curly brace (<code>}</code>) at the end. The API won’t be able to process this data. The error response tells the user about the issue:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">400</span> <span class="ne">Bad Request</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"This request was not properly formatted. Please send again."</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This response includes a descriptive error message along with the <code>400 Bad Request</code> status code, telling the user they need to fix the request.</p>
        <p>There are several other ways that the request can be wrong even if it’s formatted properly. In this next example, the user sends a <code>POST</code> request but includes an unsupported media type:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">POST</span> <span class="nn">/cars</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/xml</span>

<span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;car&gt;</span>
<span class="w">    </span><span class="nt">&lt;make&gt;</span>Nissan<span class="nt">&lt;/make&gt;</span>
<span class="w">    </span><span class="nt">&lt;model&gt;</span>240SX<span class="nt">&lt;/model&gt;</span>
<span class="w">    </span><span class="nt">&lt;year&gt;</span>1994<span class="nt">&lt;/year&gt;</span>
<span class="w">    </span><span class="nt">&lt;vin&gt;</span>1N6AD0CU5AC961553<span class="nt">&lt;/vin&gt;</span>
<span class="w">    </span><span class="nt">&lt;color&gt;</span>Violet<span class="nt">&lt;/color&gt;</span>
<span class="nt">&lt;/car&gt;</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>In this request, the user sends XML, but the API only supports JSON. The API responds with this:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">415</span> <span class="ne">Unsupported Media Type</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"The application/xml mediatype is not supported."</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This response includes the <code>415 Unsupported Media Type</code> status code to indicate that the <code>POST</code> request included a data format that isn’t supported by the API. This error code makes sense for data that’s in the wrong format, but what about data that’s invalid even with the correct format?</p>
        <p>In this next example, the user sends a <code>POST</code> request but includes <code>car</code> data that doesn’t match fields of the other data:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nf">POST</span> <span class="nn">/cars</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"make"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Nissan"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"240SX"</span><span class="p">,</span>
<span class="hll"><span class="w">    </span><span class="nt">"topSpeed"</span><span class="p">:</span><span class="w"> </span><span class="mi">120</span>
</span><span class="hll"><span class="w">    </span><span class="nt">"warrantyLength"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span>
</span><span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>In this request, the user adds <code>topSpeed</code> and <code>warrantyLength</code> fields to the JSON. These fields aren’t supported by the API, so it responds with an error message:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="http">
         <div class="codeblock__header codeblock--red"><span class="mr-2 noselect" aria-label="Language">HTTP</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">422</span> <span class="ne">Unprocessable Entity</span>
<span class="na">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>

<span class="p">{</span>
<span class="w">    </span><span class="nt">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Request had invalid or missing data."</span>
<span class="p">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This response includes the <code>422 Unprocessable Entity</code> status code. This status code indicates that there weren’t any issues with the request, but the data was invalid. A REST API needs to validate incoming data. If the user sends data with the request, then the API should validate the data and inform the user of any errors.</p>
        <p>Responding to requests, both successful and erroneous, is one of the most important jobs of a REST API. If your API is intuitive and provides accurate responses, then it’ll be easier for users to build applications around your web service. Luckily, some great Python web frameworks abstract away the complexities of processing HTTP requests and returning responses. You’ll look at three popular options in the next section.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
      </section>
      <section class="section2">
       <h2 id="rest-and-python-tools-of-the-trade">REST and Python: Tools of the Trade<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#rest-and-python-tools-of-the-trade" title="Permanent link"></a></h2>
       <p>In this section, you’ll look at three popular frameworks for building REST APIs in Python. Each framework has pros and cons, so you’ll have to evaluate which works best for your needs. To this end, in the next sections, you’ll look at a REST API in each framework. All the examples will be for a similar API that manages a collection of countries.</p>
       <p>Each country will have the following fields:</p>
       <ul>
        <li><strong><code>name</code></strong> is the name of the country.</li>
        <li><strong><code>capital</code></strong> is the capital of the country.</li>
        <li><strong><code>area</code></strong> is the area of the country in square kilometers.</li>
       </ul>
       <p>The fields <code>name</code>, <code>capital</code>, and <code>area</code> store data about a specific country somewhere in the world.</p>
       <p>Most of the time, data sent from a REST API comes from a database. <a href="https://realpython-com.translate.goog/flask-connexion-rest-api-part-2/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Connecting to a database</a> is beyond the scope of this tutorial. For the examples below, you’ll store your data in a Python list. The exception to this is the Django REST framework example, which runs off the SQLite database that Django creates.</p>
       <div class="alert alert-primary" role="alert">
        <p><strong>Note:</strong> It’s advised that you create individual folders for each of the examples to separate the source files. You’ll also want to use <a href="https://realpython-com.translate.goog/python-virtual-environments-a-primer/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">virtual environments</a> to isolate dependencies.</p>
       </div>
       <p>To keep things consistent, you’ll use <code>countries</code> as your main endpoint for all three frameworks. You’ll also use JSON as your data format for all three frameworks.</p>
       <p>Now that you’ve got the background for the API, you can move on to the next section, where you’ll look at the REST API in <strong>Flask</strong>.</p>
       <section class="section3">
        <h3 id="flask">Flask<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#flask" title="Permanent link"></a></h3>
        <p><a href="https://realpython-com.translate.goog/introduction-to-flask-part-1-setting-up-a-static-site/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Flask</a> is a Python microframework used to build web applications and REST APIs. Flask provides a solid backbone for your applications while leaving many design choices up to you. Flask’s main job is to handle HTTP requests and route them to the appropriate function in the application.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> The code in this section uses the new <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://palletsprojects.com/blog/flask-2-0-released/">Flask 2</a> syntax. If you’re running an older version of Flask, then use <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://flask.palletsprojects.com/en/2.0.x/api/%23flask.Flask.route"><code>@app.route("/countries")</code></a> instead of <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://flask.palletsprojects.com/en/2.0.x/api/%23flask.Flask.get"><code>@app.get("/countries")</code></a> and <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://flask.palletsprojects.com/en/2.0.x/api/%23flask.Flask.post"><code>@app.post("/countries")</code></a>.</p>
         <p>To handle <code>POST</code> requests in older versions of <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://flask.palletsprojects.com/en/1.1.x/">Flask</a>, you’ll also need to add the <code>methods</code> parameter to <code>@app.route()</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
          <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
           <div class="noselect">
           </div>
          </div>
          <div class="codeblock__contents">
           <div class="highlight highlight--with-header">
            <pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s2">"POST"</span><span class="p">])</span>
</code></pre>
           </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
             </svg></span></button>
          </div>
         </code-block>
         <p>This route handles <code>POST</code> requests to <code>/countries</code> in Flask 1.</p>
        </div>
        <p>Below is an example Flask application for the REST API:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># app.py</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">flask</span><span class="w"> </span><span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">jsonify</span>

<span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="vm">__name__</span><span class="p">)</span>

<span class="n">countries</span> <span class="o">=</span> <span class="p">[</span>
    <span class="p">{</span><span class="s2">"id"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Thailand"</span><span class="p">,</span> <span class="s2">"capital"</span><span class="p">:</span> <span class="s2">"Bangkok"</span><span class="p">,</span> <span class="s2">"area"</span><span class="p">:</span> <span class="mi">513120</span><span class="p">},</span>
    <span class="p">{</span><span class="s2">"id"</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Australia"</span><span class="p">,</span> <span class="s2">"capital"</span><span class="p">:</span> <span class="s2">"Canberra"</span><span class="p">,</span> <span class="s2">"area"</span><span class="p">:</span> <span class="mi">7617930</span><span class="p">},</span>
    <span class="p">{</span><span class="s2">"id"</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Egypt"</span><span class="p">,</span> <span class="s2">"capital"</span><span class="p">:</span> <span class="s2">"Cairo"</span><span class="p">,</span> <span class="s2">"area"</span><span class="p">:</span> <span class="mi">1010408</span><span class="p">},</span>
<span class="p">]</span>

<span class="k">def</span><span class="w"> </span><span class="nf">_find_next_id</span><span class="p">():</span>
    <span class="k">return</span> <span class="nb">max</span><span class="p">(</span><span class="n">country</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]</span> <span class="k">for</span> <span class="n">country</span> <span class="ow">in</span> <span class="n">countries</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>

<span class="nd">@app</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">)</span>
<span class="k">def</span><span class="w"> </span><span class="nf">get_countries</span><span class="p">():</span>
    <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">countries</span><span class="p">)</span>

<span class="nd">@app</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">)</span>
<span class="k">def</span><span class="w"> </span><span class="nf">add_country</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">is_json</span><span class="p">:</span>
        <span class="n">country</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">get_json</span><span class="p">()</span>
        <span class="n">country</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]</span> <span class="o">=</span> <span class="n">_find_next_id</span><span class="p">()</span>
        <span class="n">countries</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">country</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">country</span><span class="p">,</span> <span class="mi">201</span>
    <span class="k">return</span> <span class="p">{</span><span class="s2">"error"</span><span class="p">:</span> <span class="s2">"Request must be JSON"</span><span class="p">},</span> <span class="mi">415</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This application defines the API endpoint <code>/countries</code> to manage the list of countries. It handles two different kinds of requests:</p>
        <ol>
         <li><strong><code>GET /countries</code></strong> returns the list of <code>countries</code>.</li>
         <li><strong><code>POST /countries</code></strong> adds a new <code>country</code> to the list.</li>
        </ol>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> This Flask application includes functions to handle only two types of requests to the API endpoint, <code>/countries</code>. In a full REST API, you’d want to expand this to include functions for all the required operations.</p>
        </div>
        <p>You can try out this application by installing <code>flask</code> with <code>pip</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>flask
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Once <code>flask</code> is installed, save the code in a file called <code>app.py</code>. To run this Flask application, you first need to set an environment variable called <code>FLASK_APP</code> to <code>app.py</code>. This tells Flask which file contains your application.</p>
        <p>Run the following command inside the folder that contains <code>app.py</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span><span class="nb">export</span><span class="w"> </span><span class="nv">FLASK_APP</span><span class="o">=</span>app.py
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This sets <code>FLASK_APP</code> to <code>app.py</code> in the current shell. Optionally, you can set <code>FLASK_ENV</code> to <code>development</code>, which puts Flask in <strong>debug mode</strong>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span><span class="nb">export</span><span class="w"> </span><span class="nv">FLASK_ENV</span><span class="o">=</span>development
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Besides providing helpful error messages, debug mode will trigger a reload of the application after all code changes. Without debug mode, you’d have to restart the server after every change.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> The above commands work on macOS or Linux. If you’re running this on Windows, then you need to set <code>FLASK_APP</code> and <code>FLASK_ENV</code> like this in the Command Prompt:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="doscon" data-is-repl="true">
          <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Windows Command Prompt</span>
           <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
              <svg aria-hidden="true">
               <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
              </svg></span></span>
           </div>
          </div>
          <div class="codeblock__contents">
           <div class="highlight highlight--with-header">
            <pre><span></span><code><span class="gp">C:\&gt;</span> <span class="k">set</span> <span class="nv">FLASK_APP</span><span class="p">=</span>app.py
<span class="gp">C:\&gt;</span> <span class="k">set</span> <span class="nv">FLASK_ENV</span><span class="p">=</span>development
</code></pre>
           </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
             </svg></span></button>
          </div>
         </code-block>
         <p>Now <code>FLASK_APP</code> and <code>FLASK_ENV</code> are set inside the Windows shell.</p>
        </div>
        <p>With all the environment variables ready, you can now start the Flask development server by calling <code>flask run</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>flask<span class="w"> </span>run
<span class="go">* Serving Flask app "app.py" (lazy loading)</span>
<span class="go">* Environment: development</span>
<span class="go">* Debug mode: on</span>
<span class="go">* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This starts up a server running the application. Open up your browser and go to <code>http://127.0.0.1:5000/countries</code>, and you’ll see the following response:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="json">
         <div class="codeblock__header codeblock--purple"><span class="mr-2 noselect" aria-label="Language">JSON</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="p">[</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"area"</span><span class="p">:</span><span class="w"> </span><span class="mi">513120</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"capital"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bangkok"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Thailand"</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"area"</span><span class="p">:</span><span class="w"> </span><span class="mi">7617930</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"capital"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Canberra"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Australia"</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"area"</span><span class="p">:</span><span class="w"> </span><span class="mi">1010408</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"capital"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Cairo"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Egypt"</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This JSON response contains the three <code>countries</code> defined at the start of <code>app.py</code>. Take a look at the following code to see how this works:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">)</span>
<span class="k">def</span><span class="w"> </span><span class="nf">get_countries</span><span class="p">():</span>
    <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">countries</span><span class="p">)</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This code uses <code>@app.get()</code>, a Flask route <a href="https://realpython-com.translate.goog/primer-on-python-decorators/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">decorator</a>, to connect <code>GET</code> requests to a function in the application. When you access <code>/countries</code>, Flask calls the decorated function to handle the HTTP request and <a href="https://realpython-com.translate.goog/python-return-statement/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">return</a> a response.</p>
        <p>In the code above, <code>get_countries()</code> takes <code>countries</code>, which is a <a href="https://realpython-com.translate.goog/python-lists-tuples/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Python list</a>, and converts it to JSON with <code>jsonify()</code>. This JSON is returned in the response.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> Most of the time, you can just return a Python dictionary from a Flask function. Flask will automatically convert any Python dictionary to JSON. You can see this in action with the function below:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
          <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
           <div class="noselect">
           </div>
          </div>
          <div class="codeblock__contents">
           <div class="highlight highlight--with-header">
            <pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">"/country"</span><span class="p">)</span>
<span class="k">def</span><span class="w"> </span><span class="nf">get_country</span><span class="p">():</span>
    <span class="k">return</span> <span class="n">countries</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</code></pre>
           </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
             </svg></span></button>
          </div>
         </code-block>
         <p>In this code, you return the second dictionary from <code>countries</code>. Flask will convert this dictionary to JSON. Here’s what you’ll see when you request <code>/country</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="json">
          <div class="codeblock__header codeblock--purple"><span class="mr-2 noselect" aria-label="Language">JSON</span>
           <div class="noselect">
           </div>
          </div>
          <div class="codeblock__contents">
           <div class="highlight highlight--with-header">
            <pre><span></span><code><span class="p">{</span>
<span class="w">    </span><span class="nt">"area"</span><span class="p">:</span><span class="w"> </span><span class="mi">7617930</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"capital"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Canberra"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Australia"</span>
<span class="p">}</span>
</code></pre>
           </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
             </svg></span></button>
          </div>
         </code-block>
         <p>This is the JSON version of the dictionary you returned from <code>get_country()</code>.</p>
         <p>In <code>get_countries()</code>, you need to use <code>jsonify()</code> because you’re returning a list of dictionaries and not just a single dictionary. Flask doesn’t automatically convert lists to JSON.</p>
        </div>
        <p>Now take a look at <code>add_country()</code>. This function handles <code>POST</code> requests to <code>/countries</code> and allows you to add a new country to the list. It uses the Flask <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://flask.palletsprojects.com/en/1.1.x/quickstart/%23the-request-object"><code>request</code></a> object to get information about the current HTTP request:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">)</span>
<span class="k">def</span><span class="w"> </span><span class="nf">add_country</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">is_json</span><span class="p">:</span>
        <span class="n">country</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">get_json</span><span class="p">()</span>
        <span class="n">country</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]</span> <span class="o">=</span> <span class="n">_find_next_id</span><span class="p">()</span>
        <span class="n">countries</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">country</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">country</span><span class="p">,</span> <span class="mi">201</span>
    <span class="k">return</span> <span class="p">{</span><span class="s2">"error"</span><span class="p">:</span> <span class="s2">"Request must be JSON"</span><span class="p">},</span> <span class="mi">415</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This function performs the following operations:</p>
        <ol>
         <li>Using <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://flask.palletsprojects.com/en/1.1.x/api/?highlight%3Dis_json%23flask.Request.is_json"><code>request.is_json</code></a> to check that the request is JSON</li>
         <li>Creating a new <code>country</code> instance with <code>request.get_json()</code></li>
         <li>Finding the next <code>id</code> and setting it on the <code>country</code></li>
         <li>Appending the new <code>country</code> to <code>countries</code></li>
         <li>Returning the <code>country</code> in the response along with a <code>201 Created</code> status code</li>
         <li>Returning an error message and <code>415 Unsupported Media Type</code> status code if the request wasn’t JSON</li>
        </ol>
        <p><code>add_country()</code> also calls <code>_find_next_id()</code> to determine the <code>id</code> for the new <code>country</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="k">def</span><span class="w"> </span><span class="nf">_find_next_id</span><span class="p">():</span>
    <span class="k">return</span> <span class="nb">max</span><span class="p">(</span><span class="n">country</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]</span> <span class="k">for</span> <span class="n">country</span> <span class="ow">in</span> <span class="n">countries</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This helper function uses a <a href="https://realpython-com.translate.goog/introduction-to-python-generators/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">generator expression</a> to select all the country IDs and then calls <a href="https://realpython-com.translate.goog/python-min-and-max/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc"><code>max()</code></a> on them to get the largest value. It increments this value by <code>1</code> to get the next ID to use.</p>
        <p>You can try out this endpoint in the shell using the command-line tool <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://curl.se/">curl</a>, which allows you to send HTTP requests from the command line. Here, you’ll add a new <code>country</code> to the list of <code>countries</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:5000/countries<span class="w"> </span><span class="se">\</span>
-X<span class="w"> </span>POST<span class="w"> </span><span class="se">\</span>
-H<span class="w"> </span><span class="s1">'Content-Type: application/json'</span><span class="w"> </span><span class="se">\</span>
-d<span class="w"> </span><span class="s1">'{"name":"Germany", "capital": "Berlin", "area": 357022}'</span>

<span class="go">HTTP/1.0 201 CREATED</span>
<span class="go">Content-Type: application/json</span>
<span class="go">...</span>

<span class="go">{</span>
<span class="go">    "area": 357022,</span>
<span class="go">    "capital": "Berlin",</span>
<span class="go">    "id": 4,</span>
<span class="go">    "name": "Germany"</span>
<span class="go">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This curl command has some options that are helpful to know:</p>
        <ul>
         <li><strong><code>-X</code></strong> sets the HTTP method for the request.</li>
         <li><strong><code>-H</code></strong> adds an HTTP header to the request.</li>
         <li><strong><code>-d</code></strong> defines the request data.</li>
        </ul>
        <p>With these options set, curl sends JSON data in a <code>POST</code> request with the <code>Content-Type</code> header set to <code>application/json</code>. The REST API returns <code>201 CREATED</code> along with the JSON for the new <code>country</code> you added.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> In this example, <code>add_country()</code> doesn’t contain any validation to confirm that the JSON in the request matches the format of <code>countries</code>. Check out <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://pypi.org/project/flask-expects-json/">flask-expects-json</a> if you’d like to validate the format of JSON in Flask.</p>
        </div>
        <p>You can use curl to send a <code>GET</code> request to <code>/countries</code> to confirm that the new <code>country</code> was added. If you don’t use <code>-X</code> in your curl command, then it sends a <code>GET</code> request by default:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:5000/countries

<span class="go">HTTP/1.0 200 OK</span>
<span class="go">Content-Type: application/json</span>
<span class="go">...</span>

<span class="go">[</span>
<span class="go">    {</span>
<span class="go">        "area": 513120,</span>
<span class="go">        "capital": "Bangkok",</span>
<span class="go">        "id": 1,</span>
<span class="go">        "name": "Thailand"</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "area": 7617930,</span>
<span class="go">        "capital": "Canberra",</span>
<span class="go">        "id": 2,</span>
<span class="go">        "name": "Australia"</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "area": 1010408,</span>
<span class="go">        "capital": "Cairo",</span>
<span class="go">        "id": 3,</span>
<span class="go">        "name": "Egypt"</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "area": 357022,</span>
<span class="go">        "capital": "Berlin",</span>
<span class="go">        "id": 4,</span>
<span class="go">        "name": "Germany"</span>
<span class="go">    }</span>
<span class="go">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This returns the full list of countries in the system, with the newest country at the bottom.</p>
        <p>This is just a sampling of what Flask can do. This application could be expanded to include endpoints for all the other HTTP methods. Flask also has a large ecosystem of extensions that provide additional functionality for REST APIs, such as <a href="https://realpython-com.translate.goog/flask-connexion-rest-api/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">database integrations</a>, <a href="https://realpython-com.translate.goog/flask-google-login/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">authentication</a>, and background processing.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
       <section class="section3">
        <h3 id="django-rest-framework">Django REST Framework<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#django-rest-framework" title="Permanent link"></a></h3>
        <p>Another popular option for building REST APIs is <a href="https://realpython-com.translate.goog/django-rest-framework-quick-start/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Django REST framework</a>. Django REST framework is a <a href="https://realpython-com.translate.goog/get-started-with-django-1/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Django</a> plugin that adds REST API functionality on top of an existing Django project.</p>
        <p>To use Django REST framework, you need a Django project to work with. If you already have one, then you can apply the patterns in the section to your project. Otherwise, follow along and you’ll build a Django project and add in Django REST framework.</p>
        <p>First, install <code>Django</code> and <code>djangorestframework</code> with <code>pip</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>Django<span class="w"> </span>djangorestframework
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This installs <code>Django</code> and <code>djangorestframework</code>. You can now use the <code>django-admin</code> tool to create a new Django project. Run the following command to start your project:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>django-admin<span class="w"> </span>startproject<span class="w"> </span>countryapi
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This command creates a new folder in your current directory called <code>countryapi</code>. Inside this folder are all the files you need to run your Django project. Next, you’re going to create a new <strong>Django application</strong> inside your project. Django breaks up the functionality of a project into applications. Each application manages a distinct part of the project.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> You’re only going to scratch the surface of what Django can do in this tutorial. If you’re interested in learning more, then check out the available <a href="https://realpython-com.translate.goog/tutorials/django/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Django tutorials</a>.</p>
        </div>
        <p>To create the application, change directories to <code>countryapi</code> and run the following command:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>manage.py<span class="w"> </span>startapp<span class="w"> </span>countries
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This creates a new <code>countries</code> folder inside your project. Inside this folder are the base files for this application.</p>
        <p>Now that you’ve created an application to work with, you need to tell Django about it. Alongside the <code>countries</code> folder that you just created is another folder called <code>countryapi</code>. This folder contains configurations and settings for your project.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> This folder has the same name as the root folder that Django created when you ran <code>django-admin startproject countryapi</code>.</p>
        </div>
        <p>Open up the <code>settings.py</code> file that’s inside the <code>countryapi</code> folder. Add the following lines to <code>INSTALLED_APPS</code> to tell Django about the <code>countries</code> application and Django REST framework:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># countryapi/settings.py</span>
<span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s2">"django.contrib.admin"</span><span class="p">,</span>
    <span class="s2">"django.contrib.auth"</span><span class="p">,</span>
    <span class="s2">"django.contrib.contenttypes"</span><span class="p">,</span>
    <span class="s2">"django.contrib.sessions"</span><span class="p">,</span>
    <span class="s2">"django.contrib.messages"</span><span class="p">,</span>
    <span class="s2">"django.contrib.staticfiles"</span><span class="p">,</span>
<span class="hll">    <span class="s2">"rest_framework"</span><span class="p">,</span>
</span><span class="hll">    <span class="s2">"countries"</span><span class="p">,</span>
</span><span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>You’ve added a line for the <code>countries</code> application and <code>rest_framework</code>.</p>
        <p>You may be wondering why you need to add <code>rest_framework</code> to the applications list. You need to add it because Django REST framework is just another Django application. Django plugins are Django applications that are packaged up and distributed and that anyone can use.</p>
        <p>The next step is to create a Django model to define the fields of your data. Inside of the <code>countries</code> application, update <code>models.py</code> with the following code:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># countries/models.py</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">django.db</span><span class="w"> </span><span class="kn">import</span> <span class="n">models</span>

<span class="hll"><span class="k">class</span><span class="w"> </span><span class="nc">Country</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class="hll">    <span class="n">name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span><span class="hll">    <span class="n">capital</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span><span class="hll">    <span class="n">area</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">help_text</span><span class="o">=</span><span class="s2">"(in square kilometers)"</span><span class="p">)</span>
</span></code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This code defines a <code>Country</code> model. Django will use this model to create the database table and columns for the country data.</p>
        <p>Run the following commands to have Django update the database based on this model:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>manage.py<span class="w"> </span>makemigrations
<span class="go">Migrations for 'countries':</span>
<span class="go">  countries/migrations/0001_initial.py</span>
<span class="go">    - Create model Country</span>

<span class="gp">$ </span>python<span class="w"> </span>manage.py<span class="w"> </span>migrate
<span class="go">Operations to perform:</span>
<span class="go">  Apply all migrations: admin, auth, contenttypes, countries, sessions</span>
<span class="go">Running migrations:</span>
<span class="go">  Applying contenttypes.0001_initial... OK</span>
<span class="go">  Applying auth.0001_initial... OK</span>
<span class="go">  ...</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>These commands use <a href="https://realpython-com.translate.goog/django-migrations-a-primer/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Django migrations</a> to create a new table in the database.</p>
        <p>This table starts empty, but it would be nice to have some initial data so you can test Django REST framework. To do this, you’re going to use a <a href="https://realpython-com.translate.goog/django-pytest-fixtures/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Django fixture</a> to load some data in the database.</p>
        <p>Copy and save the following JSON data into a file called <code>countries.json</code> and save it inside the <code>countries</code> directory:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="json">
         <div class="codeblock__header codeblock--purple"><span class="mr-2 noselect" aria-label="Language">JSON</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="p">[</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"countries.country"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"pk"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"fields"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Thailand"</span><span class="p">,</span>
<span class="w">            </span><span class="nt">"capital"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bangkok"</span><span class="p">,</span>
<span class="w">            </span><span class="nt">"area"</span><span class="p">:</span><span class="w"> </span><span class="mi">513120</span>
<span class="w">        </span><span class="p">}</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"countries.country"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"pk"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"fields"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Australia"</span><span class="p">,</span>
<span class="w">            </span><span class="nt">"capital"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Canberra"</span><span class="p">,</span>
<span class="w">            </span><span class="nt">"area"</span><span class="p">:</span><span class="w"> </span><span class="mi">7617930</span>
<span class="w">        </span><span class="p">}</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"countries.country"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"pk"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"fields"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Egypt"</span><span class="p">,</span>
<span class="w">            </span><span class="nt">"capital"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Cairo"</span><span class="p">,</span>
<span class="w">            </span><span class="nt">"area"</span><span class="p">:</span><span class="w"> </span><span class="mi">1010408</span>
<span class="w">        </span><span class="p">}</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This JSON contains database entries for three countries. Call the following command to load this data in the database:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>manage.py<span class="w"> </span>loaddata<span class="w"> </span>countries.json
<span class="go">Installed 3 object(s) from 1 fixture(s)</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This adds three rows to the database.</p>
        <p>With that, your Django application is all set up and populated with some data. You can now start adding Django REST framework to the project.</p>
        <p>Django REST framework takes an existing Django model and converts it to JSON for a REST API. It does this with <strong>model serializers</strong>. A model serializer tells Django REST framework how to convert a model instance into JSON and what data to include.</p>
        <p>You’ll create your serializer for the <code>Country</code> model from above. Start by creating a file called <code>serializers.py</code> inside of the <code>countries</code> application. Once you’ve done that, add the following code to <code>serializers.py</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># countries/serializers.py</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">rest_framework</span><span class="w"> </span><span class="kn">import</span> <span class="n">serializers</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">.models</span><span class="w"> </span><span class="kn">import</span> <span class="n">Country</span>

<span class="k">class</span><span class="w"> </span><span class="nc">CountrySerializer</span><span class="p">(</span><span class="n">serializers</span><span class="o">.</span><span class="n">ModelSerializer</span><span class="p">):</span>
    <span class="k">class</span><span class="w"> </span><span class="nc">Meta</span><span class="p">:</span>
        <span class="n">model</span> <span class="o">=</span> <span class="n">Country</span>
        <span class="n">fields</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"id"</span><span class="p">,</span> <span class="s2">"name"</span><span class="p">,</span> <span class="s2">"capital"</span><span class="p">,</span> <span class="s2">"area"</span><span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This serializer, <code>CountrySerializer</code>, subclasses <code>serializers.ModelSerializer</code> to automatically generate JSON content based on the model fields of <code>Country</code>. Unless specified, a <code>ModelSerializer</code> subclass will include all fields from the Django model in the JSON. You can modify this behavior by setting <code>fields</code> to a list of data you wish to include.</p>
        <p>Just like Django, Django REST framework uses <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://docs.djangoproject.com/en/dev/topics/http/views/">views</a> to query data from the database to display to the user. Instead of writing REST API views from scratch, you can subclass Django REST framework’s <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.django-rest-framework.org/api-guide/viewsets/%23modelviewset"><code>ModelViewSet</code></a> class, which has default views for common REST API operations.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> The Django REST framework documentation refers to these views as <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.django-rest-framework.org/api-guide/viewsets/%23viewset-actions">actions</a>.</p>
        </div>
        <p>Here’s a list of the actions that <code>ModelViewSet</code> provides and their equivalent HTTP methods:</p>
        <div class="table-responsive">
         <table class="table table-hover">
          <thead>
           <tr>
            <th>HTTP method</th>
            <th>Action</th>
            <th>Description</th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td><code>GET</code></td>
            <td><code>.list()</code></td>
            <td>Get a list of countries.</td>
           </tr>
           <tr>
            <td><code>GET</code></td>
            <td><code>.retrieve()</code></td>
            <td>Get a single country.</td>
           </tr>
           <tr>
            <td><code>POST</code></td>
            <td><code>.create()</code></td>
            <td>Create a new country.</td>
           </tr>
           <tr>
            <td><code>PUT</code></td>
            <td><code>.update()</code></td>
            <td>Update a country.</td>
           </tr>
           <tr>
            <td><code>PATCH</code></td>
            <td><code>.partial_update()</code></td>
            <td>Partially update a country.</td>
           </tr>
           <tr>
            <td><code>DELETE</code></td>
            <td><code>.destroy()</code></td>
            <td>Delete a country.</td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>As you can see, these actions map to the standard HTTP methods you’d expect in a REST API. You can <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.django-rest-framework.org/api-guide/viewsets/%23example">override these actions</a> in your subclass or <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.django-rest-framework.org/api-guide/viewsets/%23marking-extra-actions-for-routing">add additional actions</a> based on the requirements of your API.</p>
        <p>Below is the code for a <code>ModelViewSet</code> subclass called <code>CountryViewSet</code>. This class will generate the views needed to manage <code>Country</code> data. Add the following code to <code>views.py</code> inside the <code>countries</code> application:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># countries/views.py</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">rest_framework</span><span class="w"> </span><span class="kn">import</span> <span class="n">viewsets</span>

<span class="kn">from</span><span class="w"> </span><span class="nn">.models</span><span class="w"> </span><span class="kn">import</span> <span class="n">Country</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">.serializers</span><span class="w"> </span><span class="kn">import</span> <span class="n">CountrySerializer</span>

<span class="k">class</span><span class="w"> </span><span class="nc">CountryViewSet</span><span class="p">(</span><span class="n">viewsets</span><span class="o">.</span><span class="n">ModelViewSet</span><span class="p">):</span>
    <span class="n">serializer_class</span> <span class="o">=</span> <span class="n">CountrySerializer</span>
    <span class="n">queryset</span> <span class="o">=</span> <span class="n">Country</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>In this class, <code>serializer_class</code> is set to <code>CountrySerializer</code> and <code>queryset</code> is set to <code>Country.objects.all()</code>. This tells Django REST framework which serializer to use and how to query the database for this specific set of views.</p>
        <p>Once the views are created, they need to be mapped to the appropriate URLs or endpoints. To do this, Django REST framework provides a <code>DefaultRouter</code> that will automatically generate URLs for a <code>ModelViewSet</code>.</p>
        <p>Create a <code>urls.py</code> file in the <code>countries</code> application and add the following code to the file:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># countries/urls.py</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">django.urls</span><span class="w"> </span><span class="kn">import</span> <span class="n">path</span><span class="p">,</span> <span class="n">include</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">rest_framework.routers</span><span class="w"> </span><span class="kn">import</span> <span class="n">DefaultRouter</span>

<span class="kn">from</span><span class="w"> </span><span class="nn">.views</span><span class="w"> </span><span class="kn">import</span> <span class="n">CountryViewSet</span>

<span class="n">router</span> <span class="o">=</span> <span class="n">DefaultRouter</span><span class="p">()</span>
<span class="n">router</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="sa">r</span><span class="s2">"countries"</span><span class="p">,</span> <span class="n">CountryViewSet</span><span class="p">)</span>

<span class="n">urlpatterns</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">path</span><span class="p">(</span><span class="s2">""</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">router</span><span class="o">.</span><span class="n">urls</span><span class="p">))</span>
<span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This code creates a <code>DefaultRouter</code> and registers <code>CountryViewSet</code> under the <code>countries</code> URL. This will place all the URLs for <code>CountryViewSet</code> under <code>/countries/</code>.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> Django REST framework automatically appends a forward slash (<code>/</code>) to the end of any endpoints generated by <code>DefaultRouter</code>. You can disable this behavior like so:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
          <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
           <div class="noselect">
           </div>
          </div>
          <div class="codeblock__contents">
           <div class="highlight highlight--with-header">
            <pre><span></span><code><span class="n">router</span> <span class="o">=</span> <span class="n">DefaultRouter</span><span class="p">(</span><span class="n">trailing_slash</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre>
           </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
             </svg></span></button>
          </div>
         </code-block>
         <p>This will disable the forward slash at the end of endpoints.</p>
        </div>
        <p>Finally, you need to update the project’s base <code>urls.py</code> file to include all the <code>countries</code> URLs in the project. Update the <code>urls.py</code> file inside of the <code>countryapi</code> folder with the following code:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># countryapi/urls.py</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">django.contrib</span><span class="w"> </span><span class="kn">import</span> <span class="n">admin</span>
<span class="hll"><span class="kn">from</span><span class="w"> </span><span class="nn">django.urls</span><span class="w"> </span><span class="kn">import</span> <span class="n">path</span><span class="p">,</span> <span class="n">include</span>
</span>
<span class="n">urlpatterns</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">path</span><span class="p">(</span><span class="s2">"admin/"</span><span class="p">,</span> <span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">),</span>
<span class="hll">    <span class="n">path</span><span class="p">(</span><span class="s2">""</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s2">"countries.urls"</span><span class="p">)),</span>
</span><span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This puts all the URLs under <code>/countries/</code>. Now you’re ready to try out your Django-backed REST API. Run the following command in the root <code>countryapi</code> directory to start the Django development server:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>manage.py<span class="w"> </span>runserver
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>The development server is now running. Go ahead and send a <code>GET</code> request to <code>/countries/</code> to get a list of all the countries in your Django project:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:8000/countries/<span class="w"> </span>-w<span class="w"> </span><span class="s1">'\n'</span>

<span class="go">HTTP/1.1 200 OK</span>
<span class="go">...</span>

<span class="go">[</span>
<span class="go">    {</span>
<span class="go">        "id": 1,</span>
<span class="go">        "name":"Thailand",</span>
<span class="go">        "capital":"Bangkok",</span>
<span class="go">        "area":513120</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "id": 2,</span>
<span class="go">        "name":"Australia",</span>
<span class="go">        "capital":"Canberra",</span>
<span class="go">        "area":7617930</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "id": 3,</span>
<span class="go">        "name":"Egypt",</span>
<span class="go">        "capital":"Cairo",</span>
<span class="go">        "area":1010408</span>
<span class="go">    }</span>
<span class="go">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>Django REST framework sends back a JSON response with the three countries you added earlier. The response above is formatted for readability, so your response will look different.</p>
        <p>The <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.django-rest-framework.org/api-guide/routers/%23defaultrouter"><code>DefaultRouter</code></a> you created in <code>countries/urls.py</code> provides URLs for requests to all the standard API endpoints:</p>
        <ul>
         <li><code>GET /countries/</code></li>
         <li><code>GET /countries/&lt;country_id&gt;/</code></li>
         <li><code>POST /countries/</code></li>
         <li><code>PUT /countries/&lt;country_id&gt;/</code></li>
         <li><code>PATCH /countries/&lt;country_id&gt;/</code></li>
         <li><code>DELETE /countries/&lt;country_id&gt;/</code></li>
        </ul>
        <p>You can try out a few more endpoints below. Send a <code>POST</code> request to <code>/countries/</code> to a create a new <code>Country</code> in your Django project:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:8000/countries/<span class="w"> </span><span class="se">\</span>
-X<span class="w"> </span>POST<span class="w"> </span><span class="se">\</span>
-H<span class="w"> </span><span class="s1">'Content-Type: application/json'</span><span class="w"> </span><span class="se">\</span>
-d<span class="w"> </span><span class="s1">'{"name":"Germany", "capital": "Berlin", "area": 357022}'</span><span class="w"> </span><span class="se">\</span>
-w<span class="w"> </span><span class="s1">'\n'</span>

<span class="go">HTTP/1.1 201 Created</span>
<span class="go">...</span>

<span class="go">{</span>
<span class="go">    "id":4,</span>
<span class="go">    "name":"Germany",</span>
<span class="go">    "capital":"Berlin",</span>
<span class="go">    "area":357022</span>
<span class="go">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This creates a new <code>Country</code> with the JSON you sent in the request. Django REST framework returns a <code>201 Created</code> status code and the new <code>Country</code>.</p>
        <div class="alert alert-primary" role="alert">
         <p><strong>Note:</strong> By default, the response doesn’t include a new line at the end. This means that the JSON may run into your command prompt. The curl command above includes <code>-w '\n'</code> to add a newline character after the JSON to fix this issue.</p>
        </div>
        <p>You can view an existing <code>Country</code> by sending a request to <code>GET /countries/&lt;country_id&gt;/</code> with an existing <code>id</code>. Run the following command to get the first <code>Country</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:8000/countries/1/<span class="w"> </span>-w<span class="w"> </span><span class="s1">'\n'</span>

<span class="go">HTTP/1.1 200 OK</span>
<span class="go">...</span>

<span class="go">{</span>
<span class="go">    "id":1,</span>
<span class="go">    "name":"Thailand",</span>
<span class="go">    "capital":"Bangkok",</span>
<span class="go">    "area":513120</span>
<span class="go">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>The response contains the information for the first <code>Country</code>. These examples only covered <code>GET</code> and <code>POST</code> requests. Feel free to try out <code>PUT</code>, <code>PATCH</code>, and <code>DELETE</code> requests on your own to see how you can fully manage your model from the REST API.</p>
        <p>As you’ve seen, Django REST framework is a great option for building REST APIs, especially if you have an existing Django project and you want to add an API.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
       <section class="section3">
        <h3 id="fastapi">FastAPI<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#fastapi" title="Permanent link"></a></h3>
        <p><a href="https://realpython-com.translate.goog/fastapi-python-web-apis/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">FastAPI</a> is a Python web framework that’s optimized for building APIs. It uses <a href="https://realpython-com.translate.goog/python-type-checking/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Python type hints</a> and has built-in support for <a href="https://realpython-com.translate.goog/async-io-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">async operations</a>. FastAPI is built on top of <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.starlette.io/">Starlette</a> and <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://pydantic-docs.helpmanual.io/">Pydantic</a> and is very performant.</p>
        <p>Below is an example of the REST API built with FastAPI:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="c1"># app.py</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">fastapi</span><span class="w"> </span><span class="kn">import</span> <span class="n">FastAPI</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">pydantic</span><span class="w"> </span><span class="kn">import</span> <span class="n">BaseModel</span><span class="p">,</span> <span class="n">Field</span>

<span class="n">app</span> <span class="o">=</span> <span class="n">FastAPI</span><span class="p">()</span>

<span class="k">def</span><span class="w"> </span><span class="nf">_find_next_id</span><span class="p">():</span>
    <span class="k">return</span> <span class="nb">max</span><span class="p">(</span><span class="n">country</span><span class="o">.</span><span class="n">country_id</span> <span class="k">for</span> <span class="n">country</span> <span class="ow">in</span> <span class="n">countries</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>

<span class="k">class</span><span class="w"> </span><span class="nc">Country</span><span class="p">(</span><span class="n">BaseModel</span><span class="p">):</span>
    <span class="n">country_id</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="n">Field</span><span class="p">(</span><span class="n">default_factory</span><span class="o">=</span><span class="n">_find_next_id</span><span class="p">,</span> <span class="n">alias</span><span class="o">=</span><span class="s2">"id"</span><span class="p">)</span>
    <span class="n">name</span><span class="p">:</span> <span class="nb">str</span>
    <span class="n">capital</span><span class="p">:</span> <span class="nb">str</span>
    <span class="n">area</span><span class="p">:</span> <span class="nb">int</span>

<span class="n">countries</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">Country</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s2">"Thailand"</span><span class="p">,</span> <span class="n">capital</span><span class="o">=</span><span class="s2">"Bangkok"</span><span class="p">,</span> <span class="n">area</span><span class="o">=</span><span class="mi">513120</span><span class="p">),</span>
    <span class="n">Country</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s2">"Australia"</span><span class="p">,</span> <span class="n">capital</span><span class="o">=</span><span class="s2">"Canberra"</span><span class="p">,</span> <span class="n">area</span><span class="o">=</span><span class="mi">7617930</span><span class="p">),</span>
    <span class="n">Country</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s2">"Egypt"</span><span class="p">,</span> <span class="n">capital</span><span class="o">=</span><span class="s2">"Cairo"</span><span class="p">,</span> <span class="n">area</span><span class="o">=</span><span class="mi">1010408</span><span class="p">),</span>
<span class="p">]</span>

<span class="nd">@app</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">)</span>
<span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">get_countries</span><span class="p">():</span>
    <span class="k">return</span> <span class="n">countries</span>

<span class="nd">@app</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">,</span> <span class="n">status_code</span><span class="o">=</span><span class="mi">201</span><span class="p">)</span>
<span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">add_country</span><span class="p">(</span><span class="n">country</span><span class="p">:</span> <span class="n">Country</span><span class="p">):</span>
    <span class="n">countries</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">country</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">country</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This application uses the features of FastAPI to build a REST API for the same <code>country</code> data you’ve seen in the other examples.</p>
        <p>You can try this application by installing <code>fastapi</code> with <code>pip</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>fastapi
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>You’ll also need to install <code>uvicorn[standard]</code>, a server that can run FastAPI applications:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>uvicorn<span class="o">[</span>standard<span class="o">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>If you’ve installed both <code>fastapi</code> and <code>uvicorn</code>, then save the code above in a file called <code>app.py</code>. Run the following command to start up a development server:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>uvicorn<span class="w"> </span>app:app<span class="w"> </span>--reload
<span class="go">INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>The server is now running. Open up a browser and go to <code>http://127.0.0.1:8000/countries</code>. You’ll see FastAPI respond with this:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="json">
         <div class="codeblock__header codeblock--purple"><span class="mr-2 noselect" aria-label="Language">JSON</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="p">[</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"name"</span><span class="p">:</span><span class="s2">"Thailand"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"capital"</span><span class="p">:</span><span class="s2">"Bangkok"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"area"</span><span class="p">:</span><span class="mi">513120</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"name"</span><span class="p">:</span><span class="s2">"Australia"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"capital"</span><span class="p">:</span><span class="s2">"Canberra"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"area"</span><span class="p">:</span><span class="mi">7617930</span>
<span class="w">    </span><span class="p">},</span>
<span class="w">    </span><span class="p">{</span>
<span class="w">        </span><span class="nt">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"name"</span><span class="p">:</span><span class="s2">"Egypt"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"capital"</span><span class="p">:</span><span class="s2">"Cairo"</span><span class="p">,</span>
<span class="w">        </span><span class="nt">"area"</span><span class="p">:</span><span class="mi">1010408</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>FastAPI responds with a JSON array containing a list of <code>countries</code>. You can also add a new country by sending a <code>POST</code> request to <code>/countries</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:8000/countries<span class="w"> </span><span class="se">\</span>
-X<span class="w"> </span>POST<span class="w"> </span><span class="se">\</span>
-H<span class="w"> </span><span class="s1">'Content-Type: application/json'</span><span class="w"> </span><span class="se">\</span>
-d<span class="w"> </span><span class="s1">'{"name":"Germany", "capital": "Berlin", "area": 357022}'</span><span class="w"> </span><span class="se">\</span>
-w<span class="w"> </span><span class="s1">'\n'</span>

<span class="go">HTTP/1.1 201 Created</span>
<span class="go">content-type: application/json</span>
<span class="go">...</span>

<span class="go">{"id":4,"name":"Germany","capital":"Berlin","area": 357022}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>You added a new country. You can confirm this with <code>GET /countries</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:8000/countries<span class="w"> </span>-w<span class="w"> </span><span class="s1">'\n'</span>

<span class="go">HTTP/1.1 200 OK</span>
<span class="go">content-type: application/json</span>
<span class="go">...</span>

<span class="go">[</span>
<span class="go">    {</span>
<span class="go">        "id":1,</span>
<span class="go">        "name":"Thailand",</span>
<span class="go">        "capital":"Bangkok",</span>
<span class="go">        "area":513120,</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "id":2,</span>
<span class="go">        "name":"Australia",</span>
<span class="go">        "capital":"Canberra",</span>
<span class="go">        "area":7617930</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "id":3,</span>
<span class="go">        "name":"Egypt",</span>
<span class="go">        "capital":"Cairo",</span>
<span class="go">        "area":1010408</span>
<span class="go">    },</span>
<span class="go">    {</span>
<span class="go">        "id":4,</span>
<span class="go">        "name": "Germany",</span>
<span class="go">        "capital": "Berlin",</span>
<span class="go">        "area": 357022</span>
<span class="go">    }</span>
<span class="go">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>FastAPI returns a JSON list including the new country you just added.</p>
        <p>You’ll notice that the FastAPI application looks similar to the Flask application. Like Flask, FastAPI has a focused feature set. It doesn’t try to handle all aspects of web application development. It’s designed to build APIs with modern Python features.</p>
        <p>If you look near the top of <code>app.py</code>, then you’ll see a class called <code>Country</code> that extends <code>BaseModel</code>. The <code>Country</code> class describes the structure of the data in the REST API:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="k">class</span><span class="w"> </span><span class="nc">Country</span><span class="p">(</span><span class="n">BaseModel</span><span class="p">):</span>
    <span class="n">country_id</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="n">Field</span><span class="p">(</span><span class="n">default_factory</span><span class="o">=</span><span class="n">_find_next_id</span><span class="p">,</span> <span class="n">alias</span><span class="o">=</span><span class="s2">"id"</span><span class="p">)</span>
    <span class="n">name</span><span class="p">:</span> <span class="nb">str</span>
    <span class="n">capital</span><span class="p">:</span> <span class="nb">str</span>
    <span class="n">area</span><span class="p">:</span> <span class="nb">int</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This is an example of a <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://pydantic-docs.helpmanual.io/usage/models/">Pydantic model</a>. Pydantic models provide some helpful features in FastAPI. They use Python type annotations to enforce the data type for each field in the class. This allows FastAPI to automatically generate JSON, with the correct data types, for API endpoints. It also allows FastAPI to validate incoming JSON.</p>
        <p>It’s helpful to highlight the first line as there’s a lot going on there:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="n">country_id</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="n">Field</span><span class="p">(</span><span class="n">default_factory</span><span class="o">=</span><span class="n">_find_next_id</span><span class="p">,</span> <span class="n">alias</span><span class="o">=</span><span class="s2">"id"</span><span class="p">)</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>In this line, you see <code>country_id</code>, which stores an <a href="https://realpython-com.translate.goog/python-numbers/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#integers">integer</a> for the ID of the <code>Country</code>. It uses the <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://pydantic-docs.helpmanual.io/usage/schema/%23field-customisation"><code>Field</code> function</a> from Pydantic to modify the behavior of <code>country_id</code>. In this example, you’re passing <code>Field</code> the keyword arguments <code>default_factory</code> and <code>alias</code>.</p>
        <p>The first argument, <code>default_factory</code>, is set to <code>_find_next_id()</code>. This argument specifies a function to run whenever a new <code>Country</code> is created. The return value will be assigned to <code>country_id</code>.</p>
        <p>The second argument, <code>alias</code>, is set to <code>id</code>. This tells FastAPI to output the key <code>"id"</code> instead of <code>"country_id"</code> in the JSON:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="json">
         <div class="codeblock__header codeblock--purple"><span class="mr-2 noselect" aria-label="Language">JSON</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="p">{</span>
<span class="w">    </span><span class="nt">"id"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"name"</span><span class="p">:</span><span class="s2">"Thailand"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"capital"</span><span class="p">:</span><span class="s2">"Bangkok"</span><span class="p">,</span>
<span class="w">    </span><span class="nt">"area"</span><span class="p">:</span><span class="mi">513120</span><span class="p">,</span>
<span class="p">},</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This <code>alias</code> also means you can use <code>id</code> when you create a new <code>Country</code>. You can see this in the <code>countries</code> list:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="n">countries</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">Country</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s2">"Thailand"</span><span class="p">,</span> <span class="n">capital</span><span class="o">=</span><span class="s2">"Bangkok"</span><span class="p">,</span> <span class="n">area</span><span class="o">=</span><span class="mi">513120</span><span class="p">),</span>
    <span class="n">Country</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s2">"Australia"</span><span class="p">,</span> <span class="n">capital</span><span class="o">=</span><span class="s2">"Canberra"</span><span class="p">,</span> <span class="n">area</span><span class="o">=</span><span class="mi">7617930</span><span class="p">),</span>
    <span class="n">Country</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s2">"Egypt"</span><span class="p">,</span> <span class="n">capital</span><span class="o">=</span><span class="s2">"Cairo"</span><span class="p">,</span> <span class="n">area</span><span class="o">=</span><span class="mi">1010408</span><span class="p">),</span>
<span class="p">]</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This list contains three instances of <code>Country</code> for the initial countries in the API. Pydantic models provide some great features and allow FastAPI to easily process JSON data.</p>
        <p>Now take a look at the two API functions in this application. The first, <code>get_countries()</code>, returns a list of <code>countries</code> for <code>GET</code> requests to <code>/countries</code>:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">)</span>
<span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">get_countries</span><span class="p">():</span>
    <span class="k">return</span> <span class="n">countries</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>FastAPI will automatically create JSON based on the fields in the Pydantic model and set the right JSON data type from the Python type hints.</p>
        <p>The Pydantic model also provides a benefit when you make a <code>POST</code> request to <code>/countries</code>. You can see in the second API function below that the parameter <code>country</code> has a <code>Country</code> annotation:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="python">
         <div class="codeblock__header codeblock--blue"><span class="mr-2 noselect" aria-label="Language">Python</span>
          <div class="noselect">
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s2">"/countries"</span><span class="p">,</span> <span class="n">status_code</span><span class="o">=</span><span class="mi">201</span><span class="p">)</span>
<span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">add_country</span><span class="p">(</span><span class="n">country</span><span class="p">:</span> <span class="n">Country</span><span class="p">):</span>
    <span class="n">countries</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">country</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">country</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>This type annotation tells FastAPI to validate the incoming JSON against <code>Country</code>. If it doesn’t match, then FastAPI will return an error. You can try this out by making a request with JSON that doesn’t match the Pydantic model:</p><code-block class="mb-3" aria-label="Code block" data-syntax-language="console" data-is-repl="true">
         <div class="codeblock__header codeblock--yellow"><span class="mr-2 noselect" aria-label="Language">Shell</span>
          <div class="noselect"><span class="codeblock__output-toggle" title="Toggle prompts and output" role="button"><span class="icon baseline js-codeblock-output-on codeblock__header--icon-lower" aria-hidden="true">
             <svg aria-hidden="true">
              <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#regular--rectangle-terminal" />
             </svg></span></span>
          </div>
         </div>
         <div class="codeblock__contents">
          <div class="highlight highlight--with-header">
           <pre><span></span><code><span class="gp">$ </span>curl<span class="w"> </span>-i<span class="w"> </span>http://127.0.0.1:8000/countries<span class="w"> </span><span class="se">\</span>
-X<span class="w"> </span>POST<span class="w"> </span><span class="se">\</span>
-H<span class="w"> </span><span class="s1">'Content-Type: application/json'</span><span class="w"> </span><span class="se">\</span>
-d<span class="w"> </span><span class="s1">'{"name":"Germany", "capital": "Berlin"}'</span><span class="w"> </span><span class="se">\</span>
-w<span class="w"> </span><span class="s1">'\n'</span>

<span class="go">HTTP/1.1 422 Unprocessable Entity</span>
<span class="go">content-type: application/json</span>
<span class="go">...</span>

<span class="go">{</span>
<span class="go">    "detail": [</span>
<span class="go">        {</span>
<span class="go">            "loc":["body","area"],</span>
<span class="go">            "msg":"field required",</span>
<span class="go">            "type":"value_error.missing"</span>
<span class="go">        }</span>
<span class="go">    ]</span>
<span class="go">}</span>
</code></pre>
          </div><button class="codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only" title="Copy to clipboard"><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@copy" />
            </svg></span></button>
         </div>
        </code-block>
        <p>The JSON in this request was missing a value for <code>area</code>, so FastAPI returned a response with the status code <code>422 Unprocessable Entity</code> as well as details about the error. This validation is made possible by the Pydantic model.</p>
        <p>This example only scratches the surface of what FastAPI can do. With its high performance and modern features like <code>async</code> functions and automatic documentation, FastAPI is worth considering for your next REST API.</p>
        <div>
         <div class="rounded border border-light" style="display:block;position:relative;">
          <div style="display:block;width:100%;padding-top:12.5%;"></div>
          <div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;">
          </div>
         </div><a class="small text-muted" href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" rel="nofollow"> <span aria-hidden="true" class="icon baseline mr-1">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--circle-info" />
           </svg></span>Remove ads</a>
        </div>
       </section>
      </section>
      <section class="section2">
       <h2 id="conclusion">Conclusion<a class="headerlink" href="https://realpython-com.translate.goog/api-integration-in-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#conclusion" title="Permanent link"></a></h2>
       <p>REST APIs are everywhere. Knowing how to leverage Python to consume and build APIs allows you to work with the vast amount of data that web services provide.</p>
       <p><strong>In this tutorial, you’ve learned how to</strong>:</p>
       <ul>
        <li>Identify the <strong>REST architecture</strong> style</li>
        <li>Work with <strong>HTTP methods</strong> and status codes</li>
        <li>Use <strong><code>requests</code></strong> to get and consume data from an external API</li>
        <li>Define <strong>endpoints</strong>, <strong>data</strong>, and <strong>responses</strong> for a REST API</li>
        <li>Get started with Python tools to build a <strong>REST API</strong></li>
       </ul>
       <p>Using your new Python REST API skills, you’ll be able to not only interact with web services but also build REST APIs for your applications. These tools open the door to a wide range of interesting, data-driven applications and services.</p>
       <div class="container border rounded text-wrap-pretty my-3">
        <p class="my-3"><mark class="marker-highlight"><strong><span class="icon baseline" aria-hidden="true">
            <svg aria-hidden="true">
             <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@quiz" />
            </svg></span> Take the Quiz:</strong></mark> Test your knowledge with our interactive “Python and REST APIs: Interacting With Web Services” quiz. You’ll receive a score upon completion to help you track your learning progress:</p>
        <hr>
        <div class="row my-3">
         <div class="col-xs-12 col-sm-4 col-md-3 align-self-center"><a href="https://realpython-com.translate.goog/quizzes/api-integration-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" tabindex="-1">
           <div class="embed-responsive embed-responsive-16by9"><img class="card-img-top m-0 p-0 embed-responsive-item rounded" style="object-fit: contain; background: #e5c5ac;" alt="Python API Integration" src="https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg" width="1920" height="1080" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=480?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 480w,https://realpython-com.translate.goog/cdn-cgi/image/width=640?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 640w,https://realpython-com.translate.goog/cdn-cgi/image/width=960?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 960w,https://realpython-com.translate.goog/cdn-cgi/image/width=1920?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 1920w" sizes="(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)">
            <div class="card-img-overlay d-flex align-items-center">
             <div class="mx-auto"><span class="text-light" style="opacity: 0.90;"><span class="icon baseline scale2x" aria-hidden="true">
                <svg aria-hidden="true">
                 <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@quiz" />
                </svg></span></span>
             </div>
            </div>
           </div></a>
         </div>
         <div class="col">
          <div class="mt-3 d-md-none"></div>
          <p class="small text-muted mb-0"><strong>Interactive Quiz</strong></p><a href="https://realpython-com.translate.goog/quizzes/api-integration-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="stretched-link"><span class="my-0 h4">Python and REST APIs: Interacting With Web Services</span></a>
          <p class="text-muted mb-0 small">In this quiz, you'll test your understanding of REST APIs and how to interact with them using Python. With this knowledge, you'll be able to retrieve, parse, update, and manipulate data provided by any RESTful API that you're interested in.</p>
         </div>
        </div>
       </div>
      </section>
      <div class="d-flex justify-content-center flex-wrap gap-2 my-3"><completion-status class="btn-group mb-0" article-slug="api-integration-in-python" data-api-article-bookmark-url="/api/v1/articles/api-integration-in-python/bookmark/" data-api-article-completion-status-url="/api/v1/articles/api-integration-in-python/completion_status/">
        <button data-target-complete-button title="Click to mark as completed" class="btn btn-secondary border-right" style="border-top-right-radius: 0; border-bottom-right-radius: 0;" disabled>Mark as Completed</button>
        <button data-target-bookmark-button title="Add bookmark" class="btn btn-secondary border-left" disabled><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--bookmark" />
          </svg></span></button>
       </completion-status>
       <div class="btn-group mb-0"><a class="btn btn-secondary border-right" style="border-top-right-radius: 0; border-bottom-right-radius: 0;" title="Liked it" role="button" aria-label="Liked it (thumbs up)" href="https://realpython-com.translate.goog/feedback/survey/article/api-integration-in-python/liked/?from=article-footer&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank"><span class="icon" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--thumbs-up" />
          </svg></span></a> <a class="btn btn-secondary border-left" role="button" aria-label="Disliked it (thumbs down)" title="Disliked it" href="https://realpython-com.translate.goog/feedback/survey/article/api-integration-in-python/disliked/?from=article-footer&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank"><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--thumbs-down" />
          </svg></span></a>
       </div><share-button url="https://realpython.com/api-integration-in-python/" url-title="Python and REST APIs: Interacting With Web Services" twitter-text="Interesting #Python article by @realpython:" bluesky-text="Interesting #Python article by @realpython.com:" email-subject="Python article for you" email-body="Check out this Python article:%0A%0APython and REST APIs: Interacting With Web Services">
        <button class="btn btn-secondary" type="button" title="Share" aria-label="Share"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#@share-light" />
          </svg></span>Share</button>
       </share-button>
      </div>
      <div class="border rounded p-3 card mb-2 text-wrap-pretty">
       <p class="mb-0"><span class="badge badge-pill badge-success"><span class="icon baseline" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#v4--play-circle" />
          </svg></span> Watch Now</span> This tutorial has a related video course created by the Real Python team. Watch it together with the written tutorial to deepen your understanding: <a class="stretched-link text-success" href="https://realpython-com.translate.goog/courses/interacting-rest-apis-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc"><strong>Interacting With REST APIs and Python</strong></a></p>
      </div>
     </div>
     <div class="card mt-4 mb-4 bg-secondary">
      <p class="card-header h3 text-center bg-light">🐍 Python Tricks 💌</p>
      <div class="card-body">
       <div class="container">
        <div class="row">
         <div class="col-xs-12 col-sm-7">
          <p>Get a short &amp; sweet <strong>Python Trick</strong> delivered to your inbox every couple of days. No spam ever. Unsubscribe any time. Curated by the Real Python team.</p>
         </div>
         <div class="col-xs-12 col-sm-5"><img loading="lazy" class="img-fluid rounded mb-3" src="/static/pytrick-dict-merge.4201a0125a5e.png" width="738" height="490" alt="Python Tricks Dictionary Merge">
         </div>
        </div>
        <div class="row mb-3">
         <form class="col-12" action="/optins/process/" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="rzOHcE3CIBu5Ps7wPLQAokjuACvqLzbYrXmtiOn1KtHKn02hAXq87l3X846orr0V"> <input type="hidden" name="slug" value="static-python-tricks-footer">
          <div class="form-group"><input name="email" type="email" class="form-control form-control-lg" placeholder="Email Address" required>
          </div><button name="submit" type="submit" class="btn btn-primary btn-lg btn-block">Send Me Python Tricks »</button>
         </form>
        </div>
       </div>
      </div>
     </div>
     <div class="card mt-3" id="author">
      <p class="card-header h3">About <strong>Jason Van Schooneveld</strong></p>
      <div class="card-body">
       <div class="container p-0">
        <div class="row">
         <div class="col-12 col-md-3 align-self-center"><a href="https://realpython-com.translate.goog/team/jvanschooneveld/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" aria-hidden="true" tabindex="-1"> <img loading="lazy" src="/cdn-cgi/image/width=250,height=250,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=62?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=62?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 62w,https://realpython-com.translate.goog/cdn-cgi/image/width=83?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=83?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 83w,https://realpython-com.translate.goog/cdn-cgi/image/width=125?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=125?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 125w,https://realpython-com.translate.goog/cdn-cgi/image/width=250?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=250?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 250w" sizes="(min-width: 580px) 154px, calc(33.08vw - 24px)" width="250" height="250" style="background: #bacee7;" class="d-block d-md-none rounded-circle img-fluid w-33 mb-0 mx-auto" alt="Jason Van Schooneveld"> <img loading="lazy" src="/cdn-cgi/image/width=250,height=250,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=62?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=62?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 62w,https://realpython-com.translate.goog/cdn-cgi/image/width=83?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=83?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 83w,https://realpython-com.translate.goog/cdn-cgi/image/width=125?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=125?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 125w,https://realpython-com.translate.goog/cdn-cgi/image/width=250?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=250?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 250w" sizes="(min-width: 1200px) 140px, calc(-1.5vw + 137px)" width="250" height="250" style="background: #bacee7;" class="d-none d-md-block rounded-circle img-fluid w-100 mb-0" alt="Jason Van Schooneveld"> </a>
         </div>
         <div class="col mt-3">
          <p>Jason is a software developer based in Taipei. When he's not tinkering with electronics or building Django web apps, you can find him hiking the mountains of Taiwan or brushing up on his Chinese.</p><a href="https://realpython-com.translate.goog/team/jvanschooneveld/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="card-link">» More about Jason</a>
         </div>
        </div>
       </div>
      </div>
      <hr class="my-0">
      <div class="card-body pb-0">
       <div class="container">
        <div class="row">
         <p><em>Each tutorial at Real Python is created by a team of developers so that it meets our high quality standards. The team members who worked on this tutorial are:</em></p>
        </div>
        <div class="row align-items-center w-100 mx-auto">
         <div class="col-4 col-sm-2 align-self-center"><a href="https://realpython-com.translate.goog/team/acutenco/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" aria-hidden="true" tabindex="-1" data-previewable><img loading="lazy" src="/cdn-cgi/image/width=900,height=900,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/acutenco.676e4197c133.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=225?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=225?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/acutenco.676e4197c133.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 225w,https://realpython-com.translate.goog/cdn-cgi/image/width=300?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=300?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/acutenco.676e4197c133.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 300w,https://realpython-com.translate.goog/cdn-cgi/image/width=450?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=450?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/acutenco.676e4197c133.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 450w,https://realpython-com.translate.goog/cdn-cgi/image/width=900?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=900?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/acutenco.676e4197c133.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 900w" sizes="(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)" width="900" height="900" style="background: #a59b9c;" class="rounded-circle img-fluid w-100" alt="Adriana Cutenco"></a>
         </div>
         <div class="col pl-0 d-none d-sm-block"><a href="https://realpython-com.translate.goog/team/acutenco/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="card-link small" data-previewable><p>Adriana</p></a>
         </div>
         <div class="col-4 col-sm-2 align-self-center"><a href="https://realpython-com.translate.goog/team/asantos/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" aria-hidden="true" tabindex="-1" data-previewable><img loading="lazy" src="/cdn-cgi/image/width=500,height=500,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/Aldren_Santos_Real_Python.6b0861d8b841.png" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=125?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=125?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Aldren_Santos_Real_Python.6b0861d8b841.png?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 125w,https://realpython-com.translate.goog/cdn-cgi/image/width=166?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=166?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Aldren_Santos_Real_Python.6b0861d8b841.png?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 166w,https://realpython-com.translate.goog/cdn-cgi/image/width=250?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=250?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Aldren_Santos_Real_Python.6b0861d8b841.png?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 250w,https://realpython-com.translate.goog/cdn-cgi/image/width=500?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=500?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Aldren_Santos_Real_Python.6b0861d8b841.png?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 500w" sizes="(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)" width="500" height="500" style="background: #d2cec3;" class="rounded-circle img-fluid w-100" alt="Aldren Santos"></a>
         </div>
         <div class="col pl-0 d-none d-sm-block"><a href="https://realpython-com.translate.goog/team/asantos/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="card-link small" data-previewable><p>Aldren</p></a>
         </div>
         <div class="col-4 col-sm-2 align-self-center"><a href="https://realpython-com.translate.goog/team/gahjelle/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" aria-hidden="true" tabindex="-1" data-previewable><img loading="lazy" src="/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=200?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=200?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 200w,https://realpython-com.translate.goog/cdn-cgi/image/width=266?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=266?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 266w,https://realpython-com.translate.goog/cdn-cgi/image/width=400?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=400?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 400w,https://realpython-com.translate.goog/cdn-cgi/image/width=800?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=800?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 800w" sizes="(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)" width="800" height="800" style="background: #080a09;" class="rounded-circle img-fluid w-100" alt="Geir Arne Hjelle"></a>
         </div>
         <div class="col pl-0 d-none d-sm-block"><a href="https://realpython-com.translate.goog/team/gahjelle/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="card-link small" data-previewable><p>Geir Arne</p></a>
         </div>
        </div>
        <div class="row align-items-center w-100 mx-auto">
         <div class="col-4 col-sm-2 align-self-center"><a href="https://realpython-com.translate.goog/team/jjablonski/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" aria-hidden="true" tabindex="-1" data-previewable><img loading="lazy" src="/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=200?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=200?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 200w,https://realpython-com.translate.goog/cdn-cgi/image/width=266?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=266?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 266w,https://realpython-com.translate.goog/cdn-cgi/image/width=400?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=400?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 400w,https://realpython-com.translate.goog/cdn-cgi/image/width=800?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=800?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 800w" sizes="(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)" width="800" height="800" style="background: #b8b9bb;" class="rounded-circle img-fluid w-100" alt="Joanna Jablonski"></a>
         </div>
         <div class="col pl-0 d-none d-sm-block"><a href="https://realpython-com.translate.goog/team/jjablonski/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="card-link small" data-previewable><p>Joanna</p></a>
         </div>
         <div class="col-4 col-sm-2 align-self-center"><a href="https://realpython-com.translate.goog/team/jschmitt/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" aria-hidden="true" tabindex="-1" data-previewable><img loading="lazy" src="/cdn-cgi/image/width=400,height=400,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=100?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=100?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 100w,https://realpython-com.translate.goog/cdn-cgi/image/width=133?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=133?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 133w,https://realpython-com.translate.goog/cdn-cgi/image/width=200?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=200?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 200w,https://realpython-com.translate.goog/cdn-cgi/image/width=400?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=400?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 400w" sizes="(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)" width="400" height="400" style="background: #c0c0c0;" class="rounded-circle img-fluid w-100" alt="Jacob Schmitt"></a>
         </div>
         <div class="col pl-0 d-none d-sm-block"><a href="https://realpython-com.translate.goog/team/jschmitt/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="card-link small" data-previewable><p>Jacob</p></a>
         </div>
         <div class="col-4 col-sm-2 align-self-center"><a href="https://realpython-com.translate.goog/team/lpozoramos/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" aria-hidden="true" tabindex="-1" data-previewable><img loading="lazy" src="/cdn-cgi/image/width=862,height=862,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/Perfil_final1.9f896bc212f6.jpg" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=215?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=215?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Perfil_final1.9f896bc212f6.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 215w,https://realpython-com.translate.goog/cdn-cgi/image/width=287?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=287?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Perfil_final1.9f896bc212f6.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 287w,https://realpython-com.translate.goog/cdn-cgi/image/width=431?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=431?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Perfil_final1.9f896bc212f6.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 431w,https://realpython-com.translate.goog/cdn-cgi/image/width=862?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/height=862?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/fit=crop?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/gravity=auto?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/Perfil_final1.9f896bc212f6.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 862w" sizes="(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)" width="862" height="862" style="background: #534032;" class="rounded-circle img-fluid w-100" alt="Leodanis Pozo Ramos"></a>
         </div>
         <div class="col pl-0 d-none d-sm-block"><a href="https://realpython-com.translate.goog/team/lpozoramos/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="card-link small" data-previewable><p>Leodanis</p></a>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="bg-light rounded py-4 my-4 shadow shadow-sm mx-n2">
      <div class="col-12 text-center d-block d-md-none">
       <p class="h2 mb-3">Master <u><span class="marker-highlight">Real-World Python Skills</span></u> With Unlimited Access to Real&nbsp;Python</p>
       <p class="mb-1"><img loading="lazy" class="w-75" src="/static/videos/lesson-locked.f5105cfd26db.svg" width="510" height="260" alt="Locked learning resources"></p>
       <p class="mx-auto w-75 mb-3 small"><strong>Join us and get access to thousands of tutorials, hands-on video courses, and a community of expert&nbsp;Pythonistas:</strong></p>
       <p class="mb-0"><a href="https://realpython-com.translate.goog/account/join/?utm_source=rp_article_footer&amp;utm_content=api-integration-in-python&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="btn btn-primary btn-sm px-4 mb-0">Level Up Your Python Skills »</a></p>
      </div>
      <div class="col-12 text-center d-none d-md-block">
       <p class="h2 mb-2">Master <u><span class="marker-highlight">Real-World Python Skills</span></u><br>
        With Unlimited Access to Real&nbsp;Python</p>
       <p class="mb-2"><img loading="lazy" class="w-50 mb-2" src="/static/videos/lesson-locked.f5105cfd26db.svg" width="510" height="260" alt="Locked learning resources"></p>
       <p class="mx-auto w-50 mb-3"><strong>Join us and get access to thousands of tutorials, hands-on video courses, and a community of expert Pythonistas:</strong></p>
       <p><a href="https://realpython-com.translate.goog/account/join/?utm_source=rp_article_footer&amp;utm_content=api-integration-in-python&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="btn btn-primary btn-lg px-4">Level Up Your Python Skills »</a></p>
      </div>
     </div>
     <div class="card mt-4" id="reader-comments">
      <p class="card-header h3">What Do You Think?</p>
      <div class="text-center mt-3 mb-0 p-0">
       <div class="mb-2"><strong class="mr-2">Rate this article:</strong>
        <div class="btn-group mb-0"><a class="btn btn-secondary border-right" style="border-top-right-radius: 0; border-bottom-right-radius: 0;" title="Liked it" role="button" aria-label="Liked it (thumbs up)" href="https://realpython-com.translate.goog/feedback/survey/article/api-integration-in-python/liked/?from=article-comments&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank"><span class="icon" aria-hidden="true">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--thumbs-up" />
           </svg></span></a> <a class="btn btn-secondary border-left" role="button" aria-label="Disliked it (thumbs down)" title="Disliked it" href="https://realpython-com.translate.goog/feedback/survey/article/api-integration-in-python/disliked/?from=article-comments&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank"><span class="icon baseline" aria-hidden="true">
           <svg aria-hidden="true">
            <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#light--thumbs-down" />
           </svg></span></a>
        </div>
       </div>
       <div class="d-flex justify-content-center flex-wrap gap-2 my-3"><a target="_blank" rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.linkedin.com/sharing/share-offsite/?url%3Dhttps%253A%252F%252Frealpython.com%252Fapi-integration-in-python%252F" class="btn btn-sm share-linkedin" aria-label="Share on LinkedIn"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--linkedin" />
          </svg></span>LinkedIn</a> <a target="_blank" rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://twitter.com/intent/tweet/?text%3DInteresting%2520Python%2520article%2520on%2520%2540realpython%253A%2520Python%2520and%2520REST%2520APIs%253A%2520Interacting%2520With%2520Web%2520Services%26url%3Dhttps%253A%252F%252Frealpython.com%252Fapi-integration-in-python%252F" class="btn btn-sm share-x-twitter" aria-label="Share on X/Twitter"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--x-twitter" />
          </svg></span>Twitter</a> <a target="_blank" rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://bsky.app/intent/compose?text%3DInteresting%2520Python%2520article%2520on%2520%2540realpython.com%253A%2520Python%2520and%2520REST%2520APIs%253A%2520Interacting%2520With%2520Web%2520Services%2520https%253A%252F%252Frealpython.com%252Fapi-integration-in-python%252F" class="btn btn-sm share-bluesky" aria-label="Share on Bluesky"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--bluesky" />
          </svg></span>Bluesky</a> <a target="_blank" rel="nofollow" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://facebook.com/sharer/sharer.php?u%3Dhttps%253A%252F%252Frealpython.com%252Fapi-integration-in-python%252F" class="btn btn-sm share-facebook" aria-label="Share on Facebook"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--facebook" />
          </svg></span>Facebook</a> <a target="_blank" rel="nofollow" href="mailto:?subject=Python+article+for+you&amp;body=Python+and+REST+APIs:+Interacting+With+Web+Services+on+Real+Python%0A%0Ahttps://realpython.com/api-integration-in-python/%0A&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="btn btn-sm share-email" aria-label="Share via Email"><span class="icon baseline mr-1" aria-hidden="true">
          <svg aria-hidden="true">
           <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--envelope" />
          </svg></span>Email</a>
       </div>
      </div>
      <div class="card-body pt-0 text-wrap-pretty">
       <p>What’s your #1 takeaway or favorite thing you learned? How are you going to put your newfound skills to use? Leave a comment below and let us know.</p>
       <div class="alert alert-dark">
        <p class="mb-0"><strong>Commenting Tips:</strong> The most useful comments are those written with the goal of learning from or helping out other students. <a href="https://realpython-com.translate.goog/python-beginner-tips/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#tip-9-ask-good-questions" target="_blank">Get tips for asking good questions</a> and <a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://support.realpython.com" target="_blank">get answers to common questions in our support portal</a>.</p>
        <hr>Looking for a real-time conversation? Visit the <a href="https://realpython-com.translate.goog/community/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank">Real Python Community Chat</a> or join the next <a href="https://realpython-com.translate.goog/office-hours/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" target="_blank">“Office&nbsp;Hours” Live Q&amp;A Session</a>. Happy Pythoning!
        <p></p>
       </div>
       <div class="mb-4" id="disqus_thread">
       </div>
      </div>
     </div>
     <div class="card mt-4 mb-4">
      <p class="card-header h3">Keep Learning</p>
      <div class="card-body">
       <p class="mb-0">Related Topics: <a href="https://realpython-com.translate.goog/tutorials/intermediate/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>intermediate</a> <a href="https://realpython-com.translate.goog/tutorials/api/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>api</a> <a href="https://realpython-com.translate.goog/tutorials/web-dev/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="badge badge-light text-muted" data-previewable>web-dev</a></p>
       <p class="mt-3 mb-0">Recommended Video Course: <a class="text-success" href="https://realpython-com.translate.goog/courses/interacting-rest-apis-python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" data-previewable>Interacting With REST APIs and Python</a></p>
       <p class="mt-3 mb-0">Related Tutorials:</p>
       <ul class="mb-0">
        <li><a href="https://realpython-com.translate.goog/python-requests/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=api-integration-in-python&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" data-previewable>Python's Requests Library (Guide)</a></li>
        <li><a href="https://realpython-com.translate.goog/python-json/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=api-integration-in-python&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" data-previewable>Working With JSON Data in Python</a></li>
        <li><a href="https://realpython-com.translate.goog/fastapi-python-web-apis/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=api-integration-in-python&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" data-previewable>Using FastAPI to Build Python Web APIs</a></li>
        <li><a href="https://realpython-com.translate.goog/flask-connexion-rest-api/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=api-integration-in-python&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" data-previewable>Python REST APIs With Flask, Connexion, and SQLAlchemy – Part 1</a></li>
        <li><a href="https://realpython-com.translate.goog/python-api/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=api-integration-in-python&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" data-previewable>Python &amp; APIs: A Winning Combo for Reading Public Data</a></li>
       </ul>
      </div>
     </div>
     <div class="modal fade" tabindex="-1" role="dialog" id="rprw">
      <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
       <div class="modal-content">
        <div class="modal-header border-0">
         <div class="col-12 col-lg-9 mx-auto modal-title text-center my-2">
          <h2 class="my-0">Keep reading Real&nbsp;Python by creating a free account or signing&nbsp;in:</h2>
         </div>
        </div>
        <div class="modal-body bg-light">
         <div class="col-12 text-center">
          <div class="col-12 col-lg-8 mx-auto mb-2 mt-3"><a href="https://realpython-com.translate.goog/account/signup/?intent=continue_reading&amp;utm_source=rp&amp;utm_medium=web&amp;utm_campaign=rwn&amp;utm_content=v1&amp;next=/api-integration-in-python/&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc"><img loading="lazy" class="w-100" src="/static/videos/lesson-locked.f5105cfd26db.svg" width="510" height="260" alt="Keep reading"></a>
          </div>
          <p><a href="https://realpython-com.translate.goog/account/signup/?intent=continue_reading&amp;utm_source=rp&amp;utm_medium=web&amp;utm_campaign=rwn&amp;utm_content=v1&amp;next=/api-integration-in-python/&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="btn btn-primary btn-lg px-5">Continue »</a></p>
         </div>
        </div>
        <div class="modal-footer border-0">
         <p class="text-center text-muted mt-2 mb-1">Already have an account? <a href="https://realpython-com.translate.goog/account/login/?next=/api-integration-in-python/&amp;_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Sign-In</a></p>
        </div>
       </div>
      </div>
     </div>
     <script src="/static/frontend/reader/rw.49e6f431db65.js" async></script>
    </div>
   </div>
  </div>
  <div class="modal fade" id="modal-rest-api-guide-exampes" tabindex="-1" aria-labelledby="modal-rest-api-guide-exampes-title" aria-describedby="modal-rest-api-guide-exampes-desc">
   <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
     <div class="modal-header bg-light pt-3 pb-2">
      <div class="container-fluid">
       <div class="row">
        <div class="col-12">
         <div class="progress" style="height: .5rem;" aria-hidden="true">
          <div class="progress-bar progress-bar-striped progress-bar-animated w-75" role="progressbar"></div>
         </div>
        </div>
        <div class="col-12">
         <p id="modal-rest-api-guide-exampes-desc" class="text-muted text-center mb-0 mt-2">Almost there! Complete this form and click the button below to gain instant&nbsp;access:</p>
        </div>
       </div>
      </div><button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">×</span> </button>
     </div>
     <div class="modal-body m-4">
      <div class="container-fluid">
       <div class="row align-items-center text-center">
        <div class="col-12 col-lg-4 mb-4 mb-lg-0"><img loading="lazy" class="img-fluid rounded" src="https://files.realpython.com/media/python-rest-api-guide.d45ad1f2e68c.jpg" width="1024" height="768" srcset="https://realpython-com.translate.goog/cdn-cgi/image/width=256?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/python-rest-api-guide.d45ad1f2e68c.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 256w,https://realpython-com.translate.goog/cdn-cgi/image/width=341?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/python-rest-api-guide.d45ad1f2e68c.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 341w,https://realpython-com.translate.goog/cdn-cgi/image/width=512?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/python-rest-api-guide.d45ad1f2e68c.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 512w,https://realpython-com.translate.goog/cdn-cgi/image/width=1024?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc,https://realpython-com.translate.goog/api-integration-in-python/format=auto/https://files.realpython.com/media/python-rest-api-guide.d45ad1f2e68c.jpg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc 1024w" sizes="(min-width: 1000px) 207px, (min-width: 580px) 382px, calc(100vw - 134px)" alt="Python REST API Guide">
        </div>
        <div class="col">
         <p id="modal-rest-api-guide-exampes-title" class="text-center h3 mb-4">Practical REST API Examples (PDF Guide)</p>
         <form class="col-12" action="/optins/process/" method="post"><input type="hidden" name="csrfmiddlewaretoken" value="rzOHcE3CIBu5Ps7wPLQAokjuACvqLzbYrXmtiOn1KtHKn02hAXq87l3X846orr0V"> <input type="hidden" name="slug" value="rest-api-guide-exampes"> <input type="hidden" name="source_path" value="/api-integration-in-python/">
          <div class="form-group"><input type="email" name="email" class="form-control" placeholder="Email Address" required autofocus>
          </div><button name="submit" type="submit" class="btn btn-primary btn-block text-wrap">Send My Free Download »</button>
          <p class="mb-0 mt-2 text-muted text-center"><small>🔒 No spam. We take your privacy seriously.</small></p>
         </form>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <footer class="footer pb-4">
   <div class="mx-5">
    <div class="row justify-content-lg-center">
     <div class="mx-4 mt-5">
      <h5>Learn Python</h5>
      <ul class="list-unstyled mb-0">
       <li><a href="https://realpython-com.translate.goog/start-here/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Start Here</a></li>
       <li><a href="https://realpython-com.translate.goog/search?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Learning Resources</a></li>
       <li><a href="https://realpython-com.translate.goog/mentor/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Code Mentor</a></li>
       <li><a href="https://realpython-com.translate.goog/ref/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Python Reference</a></li>
       <li><a href="https://realpython-com.translate.goog/cheatsheets/python/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Python Cheat Sheet</a></li>
       <li><a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://support.realpython.com/">Support Center</a></li>
      </ul>
     </div>
     <div class="mx-4 mt-5">
      <h5>Courses &amp; Paths</h5>
      <ul class="list-unstyled mb-0">
       <li><a href="https://realpython-com.translate.goog/learning-paths/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Learning Paths</a></li>
       <li><a href="https://realpython-com.translate.goog/quizzes/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Quizzes &amp; Exercises</a></li>
       <li><a href="https://realpython-com.translate.goog/tutorials/all/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Browse Topics</a></li>
       <li><a href="https://realpython-com.translate.goog/workshops/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Workshops</a></li>
       <li><a href="https://realpython-com.translate.goog/books/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Books</a></li>
      </ul>
     </div>
     <div class="mx-4 mt-5">
      <h5>Community</h5>
      <ul class="list-unstyled mb-0">
       <li><a href="https://realpython-com.translate.goog/podcasts/rpp/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Podcast</a></li>
       <li><a href="https://realpython-com.translate.goog/newsletter/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Newsletter</a></li>
       <li><a href="https://realpython-com.translate.goog/community/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Community Chat</a></li>
       <li><a href="https://realpython-com.translate.goog/office-hours/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Office Hours</a></li>
       <li><a href="https://realpython-com.translate.goog/learner-stories/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Learner Stories</a></li>
      </ul>
     </div>
     <div class="mx-4 mt-5">
      <h5>Membership</h5>
      <ul class="list-unstyled mb-0">
       <li><a href="https://realpython-com.translate.goog/account/join/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Plans &amp; Pricing</a></li>
       <li><a href="https://realpython-com.translate.goog/account/join-team/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Team Plans</a></li>
       <li><a href="https://realpython-com.translate.goog/account/join-team/inquiry/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">For Business</a></li>
       <li><a href="https://realpython-com.translate.goog/account/join-team/education-inquiry/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">For Schools</a></li>
       <li><a href="https://realpython-com.translate.goog/learner-stories/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Reviews</a></li>
      </ul>
     </div>
     <div class="mx-4 mt-5">
      <h5>Company</h5>
      <ul class="list-unstyled mb-0">
       <li><a href="https://realpython-com.translate.goog/about/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">About Us</a></li>
       <li><a href="https://realpython-com.translate.goog/team/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Team</a></li>
       <li><a href="https://realpython-com.translate.goog/mission/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Mission &amp; Values</a></li>
       <li><a href="https://realpython-com.translate.goog/sponsorships/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Sponsorships</a></li>
       <li><a href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://realpython.workable.com">Careers</a></li>
       <li><a href="https://realpython-com.translate.goog/media-kit/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Press Kit</a></li>
       <li><a href="https://realpython-com.translate.goog/merch?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Merch</a></li>
      </ul>
     </div>
    </div>
    <div class="flex-column flex-lg-row justify-content-center align-items-center mt-5 row ">
     <div class="d-flex justify-content-center mx-4 text-muted flex-nowrap"><a class="highlight-icon-hover-dark px-2 ml-n2" title="YouTube" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.youtube.com/realpython"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--youtube" />
        </svg></span></a> <a class="highlight-icon-hover-dark px-2" title="X/Twitter" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://x.com/realpython"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--x-twitter" />
        </svg></span></a> <a class="highlight-icon-hover-dark px-2" title="LinkedIn" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.linkedin.com/company/realpython-com"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--linkedin" />
        </svg></span></a> <a class="highlight-icon-hover-dark px-2" title="Facebook" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://www.facebook.com/LearnRealPython"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--facebook" />
        </svg></span></a> <a class="highlight-icon-hover-dark px-2 mr-n2" title="GitHub" href="https://translate.google.com/website?sl=en&amp;tl=th&amp;hl=th&amp;client=srp&amp;u=https://github.com/realpython/"><span class="icon baseline" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#brands--github" />
        </svg></span></a>
     </div>
     <div class="mx-4 small text-muted text-center text-wrap-balance"><a href="https://realpython-com.translate.goog/privacy-policy/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Privacy Policy</a>&nbsp;⋅ <a href="https://realpython-com.translate.goog/terms/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Terms of Use</a>&nbsp;⋅ <a href="https://realpython-com.translate.goog/security/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Security</a>&nbsp;⋅ <a href="https://realpython-com.translate.goog/contact/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc">Contact</a>
     </div>
     <div class="mx-4 small text-muted user-select-none text-center"><span><span class="icon baseline text-color-red" aria-hidden="true">
        <svg aria-hidden="true">
         <use href="https://realpython-com.translate.goog/static/icons.770597e4ea96.svg?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc#solid--heart" />
        </svg></span> Happy Pythoning!</span>
     </div>
    </div>
    <div class="d-flex justify-content-center small mt-4">
     <div class="text-muted text-center text-wrap-balance" style="line-height: 1.25;"><small> © 2012–2025 DevCademy Media Inc. DBA Real&nbsp;Python. All rights reserved.<br>
        REALPYTHON™ is a trademark of DevCademy&nbsp;Media&nbsp;Inc. </small> <a href="https://realpython-com.translate.goog/?_x_tr_sl=en&amp;_x_tr_tl=th&amp;_x_tr_hl=th&amp;_x_tr_pto=tc" class="d-flex justify-content-center mt-3 mx-auto w-50"> <img loading="lazy" src="/static/real-python-logo-primary.973743b6d39d.svg" class="img-fluid flex-grow-1" width="120" height="47" alt="Real Python - Online Python Training (logo)"> </a>
     </div>
    </div>
   </div>
  </footer>
  <script>
      (function() {
        var isAndroid = navigator.userAgent.toLowerCase().indexOf("android") > -1;
        if (!isAndroid) {
          return;
        }

        var styles = `
        @font-face {
          font-family: 'DejaVu Sans Mono';
          font-weight: normal;
          font-style: normal;
          font-display: swap;
          src: url('/static/mfonts/dejavu-sans-mono.33f00225f915.woff2') format('woff2'),
               url('/static/mfonts/dejavu-sans-mono.0da77d3739f3.woff') format('woff'),
               url('/static/mfonts/dejavu-sans-mono.c2356fc49835.ttf') format('truetype');
        }
        code, kbd, pre, samp {
          font-family: 'DejaVu Sans Mono', monospace;
        }
        `

        var styleSheet = document.createElement("style")
        styleSheet.type = "text/css"
        styleSheet.innerText = styles
        document.head.appendChild(styleSheet)
      })();
    </script>
  <script src="/static/jquery.min.2c872dbe60f4.js"></script>
  <script src="/static/popper.min.aeebb49d0b64.js"></script>
  <script src="/static/bootstrap.min.248284cdd069.js"></script>
  <script>
    (function() {
      document.querySelectorAll(".js-search-form-submit").forEach(function(el) {
        el.addEventListener("click", function(e) {
          e.preventDefault();
          e.currentTarget.parentElement.submit();
        })
      });
    })();
    </script>
  <script src="/static/frontend/reader/lightbox.dd10e15e1e9c.js" async></script>
  <script src="/static/frontend/reader/platforms-ui.62fa23f43d8d.js" async></script>
  <script src="/static/frontend/previews/popover.82934fcc85e1.js" async></script>
  <script src="/static/frontend/components/code-block.a80092088604.js" defer></script>
  <script src="/static/frontend/blog/components/table-of-contents.859023792ab1.js" defer></script>
  <script src="/static/frontend/blog/components/completion-status.f58d65790fca.js" defer></script>
  <script src="/static/frontend/components/share-button.2a475651bc5f.js" defer></script>
  <script>window.rp_prop_id = '58946116052';</script>
  <script src="https://srv.realpython.net/tag.js" async></script>
  <script id="js-context" type="application/json">{"is_completed": false, "is_bookmarked": false, "api_article_bookmark_url": "/api/v1/articles/api-integration-in-python/bookmark/", "api_article_completion_status_url": "/api/v1/articles/api-integration-in-python/completion_status/"}</script>
  <script id="dsq-count-scr" src="https://realpython.disqus.com/count.js" async></script>
  <script>
      var disqus_config = function () {
        this.page.url = 'https://realpython.com/api-integration-in-python/';
        this.page.identifier = 'https://realpython.com/api-integration-in-python/';
        this.callbacks.onReady = [function() {
          if (window.onDisqusReady) {
            window.onDisqusReady();
          }
        }];
      };
      var disqus_script_url = 'https://realpython.disqus.com/embed.js';
    </script>
  <script src="/static/frontend/reader/lazy-disqus.9d68fc312624.js" defer></script>
  <script>
    window.OneSignalDeferred = window.OneSignalDeferred || [];
    OneSignalDeferred.push(function(OneSignal) {
      OneSignal.init({
        appId: "c0081e20-a523-42bb-b0ac-04c5a9e8bf40",
        safari_web_id: "web.onesignal.auto.337e82fd-eeda-48f8-8fe5-d2f6dec774c2",
        notifyButton: {
          enable: true,
          position: "bottom-left",
          showCredit: false,
          text: {
            "tip.state.unsubscribed": "Receive a notification when we post a new tutorial",
            "tip.state.subscribed": "You're subscribed to new tutorial notifications",
            'tip.state.blocked': "You've blocked notifications",
            'message.prenotify': 'Click to subscribe to notifications',
            "message.action.subscribed": "Great, we'll let you know when the next tutorial comes out!",
            'message.action.resubscribed': "You're subscribed to notifications",
            'message.action.unsubscribed': "You won't receive notifications again",
            'dialog.main.title': 'Manage Site Notifications',
            'dialog.main.button.subscribe': 'SUBSCRIBE',
            'dialog.main.button.unsubscribe': 'UNSUBSCRIBE',
            'dialog.blocked.title': 'Unblock Notifications',
            'dialog.blocked.message': "Follow these instructions to allow notifications:"
          },
          
        },
      });
    });
    setTimeout(()=>{const n=document.createElement("script");n.src="https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js";n.async=!0;document.head.appendChild(n)}, 3000);
  </script>
  <script type="application/ld+json">{
  "@context": "http://schema.org",
  "@type": "Article",
  "headline": "Python and REST APIs: Interacting With Web Services",
  "image": {
    "@type": "ImageObject",
    "url": "https://files.realpython.com/media/API-Integration-in-Python_watermark.c7945f579b25.jpg",
    "width": 1920,
    "height": 1080
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://realpython.com/api-integration-in-python/",
    "lastReviewed": "2023-12-06",
    "author": {
      "@type": "Person",
      "name": "Jason Van Schooneveld",
      "image": "https://realpython.com/cdn-cgi/image/width=250,height=250,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg",
      "url": "https://realpython.com/team/jvanschooneveld/",
      "affiliation": {
        "@type": "Organization",
        "@id": "https://realpython.com/#organization",
        "name": "Real Python",
        "url": "https://realpython.com",
        "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
      }
    },
    "reviewedBy": [
      {
        "@type": "Person",
        "name": "Adriana Cutenco",
        "image": "https://realpython.com/cdn-cgi/image/width=900,height=900,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/acutenco.676e4197c133.jpg",
        "url": "https://realpython.com/team/acutenco/",
        "affiliation": {
          "@type": "Organization",
          "@id": "https://realpython.com/#organization",
          "name": "Real Python",
          "url": "https://realpython.com",
          "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
        }
      },
      {
        "@type": "Person",
        "name": "Aldren Santos",
        "image": "https://realpython.com/cdn-cgi/image/width=500,height=500,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/Aldren_Santos_Real_Python.6b0861d8b841.png",
        "url": "https://realpython.com/team/asantos/",
        "affiliation": {
          "@type": "Organization",
          "@id": "https://realpython.com/#organization",
          "name": "Real Python",
          "url": "https://realpython.com",
          "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
        }
      },
      {
        "@type": "Person",
        "name": "Geir Arne Hjelle",
        "image": "https://realpython.com/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg",
        "url": "https://realpython.com/team/gahjelle/",
        "affiliation": {
          "@type": "Organization",
          "@id": "https://realpython.com/#organization",
          "name": "Real Python",
          "url": "https://realpython.com",
          "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
        }
      },
      {
        "@type": "Person",
        "name": "Joanna Jablonski",
        "image": "https://realpython.com/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg",
        "url": "https://realpython.com/team/jjablonski/",
        "affiliation": {
          "@type": "Organization",
          "@id": "https://realpython.com/#organization",
          "name": "Real Python",
          "url": "https://realpython.com",
          "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
        }
      },
      {
        "@type": "Person",
        "name": "Jacob Schmitt",
        "image": "https://realpython.com/cdn-cgi/image/width=400,height=400,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg",
        "url": "https://realpython.com/team/jschmitt/",
        "affiliation": {
          "@type": "Organization",
          "@id": "https://realpython.com/#organization",
          "name": "Real Python",
          "url": "https://realpython.com",
          "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
        }
      },
      {
        "@type": "Person",
        "name": "Leodanis Pozo Ramos",
        "image": "https://realpython.com/cdn-cgi/image/width=862,height=862,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/Perfil_final1.9f896bc212f6.jpg",
        "url": "https://realpython.com/team/lpozoramos/",
        "affiliation": {
          "@type": "Organization",
          "@id": "https://realpython.com/#organization",
          "name": "Real Python",
          "url": "https://realpython.com",
          "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
        }
      }
    ]
  },
  "datePublished": "2021-07-28T14:00:00+00:00",
  "dateModified": "2023-12-06T09:09:36.714818+00:00",
  "publisher": {
    "@type": "Organization",
    "@id": "https://realpython.com/#organization",
    "name": "Real Python",
    "url": "https://realpython.com",
    "logo": {
      "@type": "ImageObject",
      "url": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png",
      "width": 512,
      "height": 512
    },
    "description": "Real Python is a leading provider of online Python education and one of the largest language-specific online communities for software developers. It publishes high-quality learning resources, such as tutorials, books, and courses to an audience of millions of developers, data scientists, and machine learning engineers each month.",
    "slogan": "Become a Python Expert",
    "email": "info@realpython.com",
    "sameAs": [
      "https://github.com/realpython",
      "https://www.youtube.com/realpython",
      "https://twitter.com/realpython",
      "https://x.com/realpython",
      "https://www.linkedin.com/company/realpython-com/",
      "https://www.facebook.com/learnrealpython",
      "https://www.instagram.com/realpython",
      "https://www.tiktok.com/@realpython.com"
    ]
  },
  "author": {
    "@type": "Person",
    "name": "Jason Van Schooneveld",
    "image": "https://realpython.com/cdn-cgi/image/width=250,height=250,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jason-headshot.be1e7c0d4405.jpg",
    "url": "https://realpython.com/team/jvanschooneveld/",
    "affiliation": {
      "@type": "Organization",
      "@id": "https://realpython.com/#organization",
      "name": "Real Python",
      "url": "https://realpython.com",
      "logo": "https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png"
    }
  },
  "description": "In this tutorial, you'll learn how to use Python to communicate with REST APIs. You'll learn about REST architecture and how to use the requests library to get data from a REST API. You'll also explore different Python tools you can use to build REST APIs."
}</script>
  <script src="/static/frontend/optins/optins.77afb051505a.js" async></script>
  <script src="/static/frontend/search/autocomplete.73b799d7feb6.js" async></script>
  <script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  setTimeout(function(){s.parentNode.insertBefore(t,s)}, 3000);}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '2220911568135371');
  fbq('track', 'PageView');
</script>
  <noscript>
   <img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=2220911568135371&amp;ev=PageView&amp;noscript=1">
  </noscript>
  <div id="g_id_onload" data-client_id="912944204353-gv43om9f7qmj4eprm0esc45r12etunvp.apps.googleusercontent.com" data-login_uri="https://realpython.com/account/google/login/token/?next=/api-integration-in-python/" data-itp_support="false">
  </div>
  <script src="//accounts.google.com/gsi/client" async></script>
  <script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'97d9715b1f8d5fa2',t:'MTc1NzYxNzU5Mi4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script>
  <script>function gtElInit() {var lib = new google.translate.TranslateService();lib.translatePage('en', 'th', function () {});}</script>
  <script id="google-translate-element-script">
    // go/mss-setup#7-load-the-js-or-css-from-your-initial-page
    if(!window['_DumpException']) {
      const _DumpException = window['_DumpException'] || function(e) {
        throw e;
      };
      window['_DumpException'] = _DumpException;
    }
  "use strict";this.default_tr=this.default_tr||{};(function(_){var window=this;
try{
_._F_toggles_initialize=function(a){(typeof globalThis!=="undefined"?globalThis:typeof self!=="undefined"?self:this)._F_toggles_default_tr=a||[]};(0,_._F_toggles_initialize)([0xc080, ]);
/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
/*

 Copyright Google LLC
 SPDX-License-Identifier: Apache-2.0
*/
var aa,ba,ea,ja,sa,ya,Ba,Ca,Fa,Ga,Ha,Ja,Za,cb,hb,jb,kb,qb,rb,sb,vb,wb,xb,x,zb,Ab,Cb,Gb,Ib,Jb;aa=function(a,b){if(Error.captureStackTrace)Error.captureStackTrace(this,aa);else{var c=Error().stack;c&&(this.stack=c)}a&&(this.message=String(a));b!==void 0&&(this.cause=b)};ba=function(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");aa.call(this,c+a[d])};ea=function(a){if(_.ca)a(_.ca);else{var b;((b=da)!=null?b:da=[]).push(a)}};
ja=function(){!_.ca&&_.ha&&_.ia();return _.ca};_.ia=function(){_.ca=_.ha();var a;(a=da)==null||a.forEach(ea);da=void 0};_.la=function(a){_.ca&&ka(a)};_.na=function(){_.ca&&ma(_.ca)};_.pa=function(a,b){b.hasOwnProperty("displayName")||(b.displayName=a.toString());b[oa]=a};_.qa=function(a){a&&typeof a.dispose=="function"&&a.dispose()};sa=function(a){for(var b=0,c=arguments.length;b<c;++b){var d=arguments[b];_.ra(d)?sa.apply(null,d):_.qa(d)}};_.ua=function(a,b){return ta(a,b)>=0};
_.va=function(a,b){_.ua(a,b)||a.push(b)};_.wa=function(a,b){b=ta(a,b);var c;(c=b>=0)&&Array.prototype.splice.call(a,b,1);return c};_.xa=function(a){var b=a.length;if(b>0){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};ya=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(_.ra(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};
Ba=function(a,b){b=b||a;for(var c=0,d=0,e={};d<a.length;){var f=a[d++],g=_.za(f)?"o"+_.Aa(f):(typeof f).charAt(0)+f;Object.prototype.hasOwnProperty.call(e,g)||(e[g]=!0,b[c++]=f)}b.length=c};Ca=function(a,b){for(var c in a)if(b.call(void 0,a[c],c,a))return!0;return!1};_.Da=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};
Fa=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<Ea.length;f++)c=Ea[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};Ga=function(a){var b=arguments.length;if(b==1&&Array.isArray(arguments[0]))return Ga.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};Ha=function(a){return{valueOf:a}.valueOf()};
Ja=function(){var a=null;if(!Ia)return a;try{var b=function(c){return c};a=Ia.createPolicy("goog#html",{createHTML:b,createScript:b,createScriptURL:b})}catch(c){}return a};_.La=function(){Ka===void 0&&(Ka=Ja());return Ka};_.Na=function(a){var b=_.La();a=b?b.createScriptURL(a):a;return new _.Ma(a)};_.Oa=function(a){if(a instanceof _.Ma)return a.g;throw Error("v");};
_.Pa=function(a,b){b=b===void 0?document:b;var c,d;b=(d=(c=b).querySelector)==null?void 0:d.call(c,a+"[nonce]");return b==null?"":b.nonce||b.getAttribute("nonce")||""};_.Ra=function(a){var b=_.La();a=b?b.createScript(a):a;return new _.Qa(a)};_.Sa=function(a){if(a instanceof _.Qa)return a.g;throw Error("v");};_.Ta=function(a,b){a.src=_.Oa(b);(b=_.Pa("script",a.ownerDocument))&&a.setAttribute("nonce",b)};_.Ua=function(){var a=_.t.navigator;return a&&(a=a.userAgent)?a:""};
_.v=function(a){return _.Ua().indexOf(a)!=-1};_.Xa=function(){return _.Va?!!_.Wa&&_.Wa.brands.length>0:!1};_.Ya=function(){return _.Xa()?!1:_.v("Opera")};Za=function(){return _.Va?!!_.Wa&&!!_.Wa.platform:!1};_.$a=function(){return _.v("iPhone")&&!_.v("iPod")&&!_.v("iPad")};_.ab=function(){return _.$a()||_.v("iPad")||_.v("iPod")};_.bb=function(){return Za()?_.Wa.platform==="macOS":_.v("Macintosh")};cb=function(a){this.src=a;this.g={};this.h=0};
hb=function(a,b){_.w.call(this);this.o=a;if(b){if(this.l)throw Error("z");this.l=b;this.h=_.db(b);this.g=new eb(_.fb(b));this.g.le(this.o.h());this.j=new gb(this.h);this.j.start()}};jb=function(a){a=a.fg.charCodeAt(a.Yb++);return ib[a]};kb=function(a){var b=0,c=0;do{var d=jb(a);b|=(d&31)<<c;c+=5}while(d&32);return b<0?b+4294967296:b};_.lb=function(a){_.t.setTimeout(function(){throw a;},0)};qb=function(){for(var a;a=mb.remove();){try{a.g.call(a.scope)}catch(b){_.lb(b)}nb(ob,a)}pb=!1};rb=function(){};
sb=function(){};_.ub=function(a){a=_.tb(a);return _.Na(a)};_.tb=function(a){return a===null?"null":a===void 0?"undefined":a};vb=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};wb=typeof Object.defineProperties=="function"?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
xb=function(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("a");};_.yb=xb(this);x=function(a,b){if(b)a:{var c=_.yb;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&b!=null&&wb(c,a,{configurable:!0,writable:!0,value:b})}};
x("Symbol",function(a){if(a)return a;var b=function(f,g){this.g=f;wb(this,"description",{configurable:!0,writable:!0,value:g})};b.prototype.toString=function(){return this.g};var c="jscomp_symbol_"+(Math.random()*1E9>>>0)+"_",d=0,e=function(f){if(this instanceof e)throw new TypeError("b");return new b(c+(f||"")+"_"+d++,f)};return e});
x("Symbol.iterator",function(a){if(a)return a;a=Symbol("c");for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),c=0;c<b.length;c++){var d=_.yb[b[c]];typeof d==="function"&&typeof d.prototype[a]!="function"&&wb(d.prototype,a,{configurable:!0,writable:!0,value:function(){return zb(vb(this))}})}return a});zb=function(a){a={next:a};a[Symbol.iterator]=function(){return this};return a};
Ab=typeof Object.create=="function"?Object.create:function(a){var b=function(){};b.prototype=a;return new b};
_.Bb=function(){function a(){function c(){}new c;Reflect.construct(c,[],function(){});return new c instanceof c}if(typeof Reflect!="undefined"&&Reflect.construct){if(a())return Reflect.construct;var b=Reflect.construct;return function(c,d,e){c=b(c,d);e&&Reflect.setPrototypeOf(c,e.prototype);return c}}return function(c,d,e){e===void 0&&(e=c);e=Ab(e.prototype||Object.prototype);return Function.prototype.apply.call(c,e,d)||e}}();
if(typeof Object.setPrototypeOf=="function")Cb=Object.setPrototypeOf;else{var Db;a:{var Eb={a:!0},Fb={};try{Fb.__proto__=Eb;Db=Fb.a;break a}catch(a){}Db=!1}Cb=Db?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError("d`"+a);return a}:null}Gb=Cb;
_.y=function(a,b){a.prototype=Ab(b.prototype);a.prototype.constructor=a;if(Gb)Gb(a,b);else for(var c in b)if(c!="prototype")if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.P=b.prototype};_.z=function(a){var b=typeof Symbol!="undefined"&&Symbol.iterator&&a[Symbol.iterator];if(b)return b.call(a);if(typeof a.length=="number")return{next:vb(a)};throw Error("e`"+String(a));};
_.Hb=function(a){if(!(a instanceof Array)){a=_.z(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a};Ib=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};Jb=typeof Object.assign=="function"?Object.assign:function(a,b){if(a==null)throw new TypeError("f");a=Object(a);for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)Ib(d,e)&&(a[e]=d[e])}return a};x("Object.assign",function(a){return a||Jb});
_.Kb=function(){for(var a=Number(this),b=[],c=a;c<arguments.length;c++)b[c-a]=arguments[c];return b};x("globalThis",function(a){return a||_.yb});x("Reflect",function(a){return a?a:{}});x("Reflect.construct",function(){return _.Bb});x("Reflect.setPrototypeOf",function(a){return a?a:Gb?function(b,c){try{return Gb(b,c),!0}catch(d){return!1}}:null});
x("Promise",function(a){function b(){this.g=null}function c(g){return g instanceof e?g:new e(function(h){h(g)})}if(a)return a;b.prototype.h=function(g){if(this.g==null){this.g=[];var h=this;this.j(function(){h.o()})}this.g.push(g)};var d=_.yb.setTimeout;b.prototype.j=function(g){d(g,0)};b.prototype.o=function(){for(;this.g&&this.g.length;){var g=this.g;this.g=[];for(var h=0;h<g.length;++h){var k=g[h];g[h]=null;try{k()}catch(m){this.l(m)}}}this.g=null};b.prototype.l=function(g){this.j(function(){throw g;
})};var e=function(g){this.g=0;this.j=void 0;this.h=[];this.B=!1;var h=this.l();try{g(h.resolve,h.reject)}catch(k){h.reject(k)}};e.prototype.l=function(){function g(m){return function(n){k||(k=!0,m.call(h,n))}}var h=this,k=!1;return{resolve:g(this.L),reject:g(this.o)}};e.prototype.L=function(g){if(g===this)this.o(new TypeError("i"));else if(g instanceof e)this.O(g);else{a:switch(typeof g){case "object":var h=g!=null;break a;case "function":h=!0;break a;default:h=!1}h?this.I(g):this.A(g)}};e.prototype.I=
function(g){var h=void 0;try{h=g.then}catch(k){this.o(k);return}typeof h=="function"?this.qa(h,g):this.A(g)};e.prototype.o=function(g){this.D(2,g)};e.prototype.A=function(g){this.D(1,g)};e.prototype.D=function(g,h){if(this.g!=0)throw Error("j`"+g+"`"+h+"`"+this.g);this.g=g;this.j=h;this.g===2&&this.J();this.G()};e.prototype.J=function(){var g=this;d(function(){if(g.F()){var h=_.yb.console;typeof h!=="undefined"&&h.error(g.j)}},1)};e.prototype.F=function(){if(this.B)return!1;var g=_.yb.CustomEvent,
h=_.yb.Event,k=_.yb.dispatchEvent;if(typeof k==="undefined")return!0;typeof g==="function"?g=new g("unhandledrejection",{cancelable:!0}):typeof h==="function"?g=new h("unhandledrejection",{cancelable:!0}):(g=_.yb.document.createEvent("CustomEvent"),g.initCustomEvent("unhandledrejection",!1,!0,g));g.promise=this;g.reason=this.j;return k(g)};e.prototype.G=function(){if(this.h!=null){for(var g=0;g<this.h.length;++g)f.h(this.h[g]);this.h=null}};var f=new b;e.prototype.O=function(g){var h=this.l();g.xd(h.resolve,
h.reject)};e.prototype.qa=function(g,h){var k=this.l();try{g.call(h,k.resolve,k.reject)}catch(m){k.reject(m)}};e.prototype.then=function(g,h){function k(q,r){return typeof q=="function"?function(u){try{m(q(u))}catch(A){n(A)}}:r}var m,n,p=new e(function(q,r){m=q;n=r});this.xd(k(g,m),k(h,n));return p};e.prototype.catch=function(g){return this.then(void 0,g)};e.prototype.xd=function(g,h){function k(){switch(m.g){case 1:g(m.j);break;case 2:h(m.j);break;default:throw Error("k`"+m.g);}}var m=this;this.h==
null?f.h(k):this.h.push(k);this.B=!0};e.resolve=c;e.reject=function(g){return new e(function(h,k){k(g)})};e.race=function(g){return new e(function(h,k){for(var m=_.z(g),n=m.next();!n.done;n=m.next())c(n.value).xd(h,k)})};e.all=function(g){var h=_.z(g),k=h.next();return k.done?c([]):new e(function(m,n){function p(u){return function(A){q[u]=A;r--;r==0&&m(q)}}var q=[],r=0;do q.push(void 0),r++,c(k.value).xd(p(q.length-1),n),k=h.next();while(!k.done)})};return e});
var Lb=function(a,b,c){if(a==null)throw new TypeError("l`"+c);if(b instanceof RegExp)throw new TypeError("m`"+c);return a+""};x("String.prototype.startsWith",function(a){return a?a:function(b,c){var d=Lb(this,b,"startsWith"),e=d.length,f=b.length;c=Math.max(0,Math.min(c|0,d.length));for(var g=0;g<f&&c<e;)if(d[c++]!=b[g++])return!1;return g>=f}});x("Object.setPrototypeOf",function(a){return a||Gb});x("Symbol.dispose",function(a){return a?a:Symbol("n")});
x("WeakMap",function(a){function b(){}function c(k){var m=typeof k;return m==="object"&&k!==null||m==="function"}function d(k){if(!Ib(k,f)){var m=new b;wb(k,f,{value:m})}}function e(k){var m=Object[k];m&&(Object[k]=function(n){if(n instanceof b)return n;Object.isExtensible(n)&&d(n);return m(n)})}if(function(){if(!a||!Object.seal)return!1;try{var k=Object.seal({}),m=Object.seal({}),n=new a([[k,2],[m,3]]);if(n.get(k)!=2||n.get(m)!=3)return!1;n.delete(k);n.set(m,4);return!n.has(k)&&n.get(m)==4}catch(p){return!1}}())return a;
var f="$jscomp_hidden_"+Math.random();e("freeze");e("preventExtensions");e("seal");var g=0,h=function(k){this.g=(g+=Math.random()+1).toString();if(k){k=_.z(k);for(var m;!(m=k.next()).done;)m=m.value,this.set(m[0],m[1])}};h.prototype.set=function(k,m){if(!c(k))throw Error("o");d(k);if(!Ib(k,f))throw Error("p`"+k);k[f][this.g]=m;return this};h.prototype.get=function(k){return c(k)&&Ib(k,f)?k[f][this.g]:void 0};h.prototype.has=function(k){return c(k)&&Ib(k,f)&&Ib(k[f],this.g)};h.prototype.delete=function(k){return c(k)&&
Ib(k,f)&&Ib(k[f],this.g)?delete k[f][this.g]:!1};return h});
x("Map",function(a){if(function(){if(!a||typeof a!="function"||!a.prototype.entries||typeof Object.seal!="function")return!1;try{var h=Object.seal({x:4}),k=new a(_.z([[h,"s"]]));if(k.get(h)!="s"||k.size!=1||k.get({x:4})||k.set({x:4},"t")!=k||k.size!=2)return!1;var m=k.entries(),n=m.next();if(n.done||n.value[0]!=h||n.value[1]!="s")return!1;n=m.next();return n.done||n.value[0].x!=4||n.value[1]!="t"||!m.next().done?!1:!0}catch(p){return!1}}())return a;var b=new WeakMap,c=function(h){this[0]={};this[1]=
f();this.size=0;if(h){h=_.z(h);for(var k;!(k=h.next()).done;)k=k.value,this.set(k[0],k[1])}};c.prototype.set=function(h,k){h=h===0?0:h;var m=d(this,h);m.list||(m.list=this[0][m.id]=[]);m.entry?m.entry.value=k:(m.entry={next:this[1],ub:this[1].ub,head:this[1],key:h,value:k},m.list.push(m.entry),this[1].ub.next=m.entry,this[1].ub=m.entry,this.size++);return this};c.prototype.delete=function(h){h=d(this,h);return h.entry&&h.list?(h.list.splice(h.index,1),h.list.length||delete this[0][h.id],h.entry.ub.next=
h.entry.next,h.entry.next.ub=h.entry.ub,h.entry.head=null,this.size--,!0):!1};c.prototype.clear=function(){this[0]={};this[1]=this[1].ub=f();this.size=0};c.prototype.has=function(h){return!!d(this,h).entry};c.prototype.get=function(h){return(h=d(this,h).entry)&&h.value};c.prototype.entries=function(){return e(this,function(h){return[h.key,h.value]})};c.prototype.keys=function(){return e(this,function(h){return h.key})};c.prototype.values=function(){return e(this,function(h){return h.value})};c.prototype.forEach=
function(h,k){for(var m=this.entries(),n;!(n=m.next()).done;)n=n.value,h.call(k,n[1],n[0],this)};c.prototype[Symbol.iterator]=c.prototype.entries;var d=function(h,k){var m=k&&typeof k;m=="object"||m=="function"?b.has(k)?m=b.get(k):(m=""+ ++g,b.set(k,m)):m="p_"+k;var n=h[0][m];if(n&&Ib(h[0],m))for(h=0;h<n.length;h++){var p=n[h];if(k!==k&&p.key!==p.key||k===p.key)return{id:m,list:n,index:h,entry:p}}return{id:m,list:n,index:-1,entry:void 0}},e=function(h,k){var m=h[1];return zb(function(){if(m){for(;m.head!=
h[1];)m=m.ub;for(;m.next!=m.head;)return m=m.next,{done:!1,value:k(m)};m=null}return{done:!0,value:void 0}})},f=function(){var h={};return h.ub=h.next=h.head=h},g=0;return c});
x("Set",function(a){if(function(){if(!a||typeof a!="function"||!a.prototype.entries||typeof Object.seal!="function")return!1;try{var c=Object.seal({x:4}),d=new a(_.z([c]));if(!d.has(c)||d.size!=1||d.add(c)!=d||d.size!=1||d.add({x:4})!=d||d.size!=2)return!1;var e=d.entries(),f=e.next();if(f.done||f.value[0]!=c||f.value[1]!=c)return!1;f=e.next();return f.done||f.value[0]==c||f.value[0].x!=4||f.value[1]!=f.value[0]?!1:e.next().done}catch(g){return!1}}())return a;var b=function(c){this.g=new Map;if(c){c=
_.z(c);for(var d;!(d=c.next()).done;)this.add(d.value)}this.size=this.g.size};b.prototype.add=function(c){c=c===0?0:c;this.g.set(c,c);this.size=this.g.size;return this};b.prototype.delete=function(c){c=this.g.delete(c);this.size=this.g.size;return c};b.prototype.clear=function(){this.g.clear();this.size=0};b.prototype.has=function(c){return this.g.has(c)};b.prototype.entries=function(){return this.g.entries()};b.prototype.values=function(){return this.g.values()};b.prototype.keys=b.prototype.values;
b.prototype[Symbol.iterator]=b.prototype.values;b.prototype.forEach=function(c,d){var e=this;this.g.forEach(function(f){return c.call(d,f,f,e)})};return b});var Mb=function(a,b){a instanceof String&&(a+="");var c=0,d=!1,e={next:function(){if(!d&&c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}d=!0;return{done:!0,value:void 0}}};e[Symbol.iterator]=function(){return e};return e};x("Array.prototype.entries",function(a){return a?a:function(){return Mb(this,function(b,c){return[b,c]})}});
x("Array.prototype.keys",function(a){return a?a:function(){return Mb(this,function(b){return b})}});x("String.prototype.endsWith",function(a){return a?a:function(b,c){var d=Lb(this,b,"endsWith");c===void 0&&(c=d.length);c=Math.max(0,Math.min(c|0,d.length));for(var e=b.length;e>0&&c>0;)if(d[--c]!=b[--e])return!1;return e<=0}});x("Number.isFinite",function(a){return a?a:function(b){return typeof b!=="number"?!1:!isNaN(b)&&b!==Infinity&&b!==-Infinity}});
x("Array.prototype.find",function(a){return a?a:function(b,c){a:{var d=this;d instanceof String&&(d=String(d));for(var e=d.length,f=0;f<e;f++){var g=d[f];if(b.call(c,g,f,d)){b=g;break a}}b=void 0}return b}});x("Object.entries",function(a){return a?a:function(b){var c=[],d;for(d in b)Ib(b,d)&&c.push([d,b[d]]);return c}});
x("Array.from",function(a){return a?a:function(b,c,d){c=c!=null?c:function(h){return h};var e=[],f=typeof Symbol!="undefined"&&Symbol.iterator&&b[Symbol.iterator];if(typeof f=="function"){b=f.call(b);for(var g=0;!(f=b.next()).done;)e.push(c.call(d,f.value,g++))}else for(f=b.length,g=0;g<f;g++)e.push(c.call(d,b[g],g));return e}});x("Array.prototype.values",function(a){return a?a:function(){return Mb(this,function(b,c){return c})}});
x("Object.values",function(a){return a?a:function(b){var c=[],d;for(d in b)Ib(b,d)&&c.push(b[d]);return c}});x("Object.is",function(a){return a?a:function(b,c){return b===c?b!==0||1/b===1/c:b!==b&&c!==c}});x("Array.prototype.includes",function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var e=d.length;c=c||0;for(c<0&&(c=Math.max(c+e,0));c<e;c++){var f=d[c];if(f===b||Object.is(f,b))return!0}return!1}});
x("String.prototype.includes",function(a){return a?a:function(b,c){return Lb(this,b,"includes").indexOf(b,c||0)!==-1}});x("Number.MAX_SAFE_INTEGER",function(){return 9007199254740991});x("Number.MIN_SAFE_INTEGER",function(){return-9007199254740991});x("Number.isInteger",function(a){return a?a:function(b){return Number.isFinite(b)?b===Math.floor(b):!1}});x("Number.isSafeInteger",function(a){return a?a:function(b){return Number.isInteger(b)&&Math.abs(b)<=Number.MAX_SAFE_INTEGER}});
x("Math.trunc",function(a){return a?a:function(b){b=Number(b);if(isNaN(b)||b===Infinity||b===-Infinity||b===0)return b;var c=Math.floor(Math.abs(b));return b<0?-c:c}});x("Number.isNaN",function(a){return a?a:function(b){return typeof b==="number"&&isNaN(b)}});x("Array.prototype.fill",function(a){return a?a:function(b,c,d){var e=this.length||0;c<0&&(c=Math.max(0,e+c));if(d==null||d>e)d=e;d=Number(d);d<0&&(d=Math.max(0,e+d));for(c=Number(c||0);c<d;c++)this[c]=b;return this}});
var Nb=function(a){return a?a:Array.prototype.fill};x("Int8Array.prototype.fill",Nb);x("Uint8Array.prototype.fill",Nb);x("Uint8ClampedArray.prototype.fill",Nb);x("Int16Array.prototype.fill",Nb);x("Uint16Array.prototype.fill",Nb);x("Int32Array.prototype.fill",Nb);x("Uint32Array.prototype.fill",Nb);x("Float32Array.prototype.fill",Nb);x("Float64Array.prototype.fill",Nb);
x("String.prototype.replaceAll",function(a){return a?a:function(b,c){if(b instanceof RegExp&&!b.global)throw new TypeError("q");return b instanceof RegExp?this.replace(b,c):this.replace(new RegExp(String(b).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08"),"g"),c)}});x("Object.getOwnPropertySymbols",function(a){return a?a:function(){return[]}});
x("Array.prototype.flat",function(a){return a?a:function(b){b=b===void 0?1:b;var c=[];Array.prototype.forEach.call(this,function(d){Array.isArray(d)&&b>0?(d=Array.prototype.flat.call(d,b-1),c.push.apply(c,d)):c.push(d)});return c}});x("Promise.prototype.finally",function(a){return a?a:function(b){return this.then(function(c){return Promise.resolve(b()).then(function(){return c})},function(c){return Promise.resolve(b()).then(function(){throw c;})})}});
_._DumpException=window._DumpException||function(a){throw a;};window._DumpException=_._DumpException;var Ob,Qb,Rb,Sb,Ub,Vb,Wb,Xb;Ob=Ob||{};_.t=this||self;Qb=function(a,b){var c=_.Pb("WIZ_global_data.oxN3nb");a=c&&c[a];return a!=null?a:b};Rb=_.t._F_toggles_default_tr||[];Sb=function(){};Sb.get=function(){return null};_.Pb=function(a,b){a=a.split(".");b=b||_.t;for(var c=0;c<a.length;c++)if(b=b[a[c]],b==null)return null;return b};_.Tb=function(a){var b=typeof a;return b!="object"?b:a?Array.isArray(a)?"array":b:"null"};_.ra=function(a){var b=_.Tb(a);return b=="array"||b=="object"&&typeof a.length=="number"};
_.za=function(a){var b=typeof a;return b=="object"&&a!=null||b=="function"};_.Aa=function(a){return Object.prototype.hasOwnProperty.call(a,Ub)&&a[Ub]||(a[Ub]=++Vb)};Ub="closure_uid_"+(Math.random()*1E9>>>0);Vb=0;Wb=function(a,b,c){return a.call.apply(a.bind,arguments)};
Xb=function(a,b,c){if(!a)throw Error();if(arguments.length>2){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};_.B=function(a,b,c){_.B=Function.prototype.bind&&Function.prototype.bind.toString().indexOf("native code")!=-1?Wb:Xb;return _.B.apply(null,arguments)};
_.Yb=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};_.Zb=function(){return Date.now()};_.$b=function(a,b){a=a.split(".");for(var c=_.t,d;a.length&&(d=a.shift());)a.length||b===void 0?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b};
_.D=function(a,b){function c(){}c.prototype=b.prototype;a.P=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.wm=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};_.D(aa,Error);aa.prototype.name="CustomError";var ac;_.D(ba,aa);ba.prototype.name="AssertionError";var da;var bc=function(a,b){this.h=a;this.g=b||null};bc.prototype.toString=function(){return this.h};var cc=new bc("n73qwf","n73qwf");var oa=Symbol("s");_.w=function(){this.Da=this.Da;this.qa=this.qa};_.w.prototype.Da=!1;_.w.prototype.Za=function(){return this.Da};_.w.prototype.dispose=function(){this.Da||(this.Da=!0,this.M())};_.w.prototype[Symbol.dispose]=function(){this.dispose()};_.w.prototype.M=function(){if(this.qa)for(;this.qa.length;)this.qa.shift()()};var ta,ec;ta=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(typeof a==="string")return typeof b!=="string"||b.length!=1?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};_.dc=Array.prototype.forEach?function(a,b){Array.prototype.forEach.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=typeof a==="string"?a.split(""):a,e=0;e<c;e++)e in d&&b.call(void 0,d[e],e,a)};
ec=Array.prototype.reduce?function(a,b,c){Array.prototype.reduce.call(a,b,c)}:function(a,b,c){var d=c;(0,_.dc)(a,function(e,f){d=b.call(void 0,d,e,f,a)})};_.fc=Array.prototype.some?function(a,b){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=typeof a==="string"?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};_.hc=function(a,b){this.width=a;this.height=b};_.ic=function(a,b){return a==b?!0:a&&b?a.width==b.width&&a.height==b.height:!1};_.hc.prototype.aspectRatio=function(){return this.width/this.height};_.hc.prototype.ceil=function(){this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};_.hc.prototype.floor=function(){this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};
_.hc.prototype.round=function(){this.width=Math.round(this.width);this.height=Math.round(this.height);return this};var Ea;Ea="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");_.jc=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)};_.kc=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};var lc=globalThis.trustedTypes,Ia=lc,Ka;_.Ma=function(a){this.g=a};_.Ma.prototype.toString=function(){return this.g+""};_.mc=Ha(function(){return typeof URL==="function"});_.nc=function(a){this.g=a};_.nc.prototype.toString=function(){return this.g+""};_.oc=Ha(function(){return new _.nc(lc?lc.emptyHTML:"")});_.Qa=function(a){this.g=a};_.Qa.prototype.toString=function(){return this.g+""};_.pc=function(a){return encodeURIComponent(String(a))};_.qc=function(a){return decodeURIComponent(a.replace(/\+/g," "))};_.rc=function(){return Math.floor(Math.random()*2147483648).toString(36)+Math.abs(Math.floor(Math.random()*2147483648)^_.Zb()).toString(36)};var sc=!!(Rb[0]>>15&1),tc=!!(Rb[0]&1024),uc=!!(Rb[0]>>16&1),vc=!!(Rb[0]&128);var wc;wc=Qb(1,!0);_.Va=sc?uc:Qb(610401301,!1);_.xc=sc?tc||!vc:Qb(748402147,wc);var yc;yc=_.t.navigator;_.Wa=yc?yc.userAgentData||null:null;_.zc=function(a){_.zc[" "](a);return a};_.zc[" "]=function(){};var Nc;_.Ac=_.Ya();_.Bc=_.Xa()?!1:_.v("Trident")||_.v("MSIE");_.Cc=_.v("Edge");_.Dc=_.v("Gecko")&&!(_.Ua().toLowerCase().indexOf("webkit")!=-1&&!_.v("Edge"))&&!(_.v("Trident")||_.v("MSIE"))&&!_.v("Edge");_.Ec=_.Ua().toLowerCase().indexOf("webkit")!=-1&&!_.v("Edge");_.Fc=_.Ec&&_.v("Mobile");_.Gc=_.bb();_.Hc=Za()?_.Wa.platform==="Windows":_.v("Windows");_.Ic=Za()?_.Wa.platform==="Android":_.v("Android");_.Jc=_.$a();_.Kc=_.v("iPad");_.Lc=_.v("iPod");_.Mc=_.ab();
a:{var Oc="",Pc=function(){var a=_.Ua();if(_.Dc)return/rv:([^\);]+)(\)|;)/.exec(a);if(_.Cc)return/Edge\/([\d\.]+)/.exec(a);if(_.Bc)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(_.Ec)return/WebKit\/(\S+)/.exec(a);if(_.Ac)return/(?:Version)[ \/]?(\S+)/.exec(a)}();Pc&&(Oc=Pc?Pc[1]:"");if(_.Bc){var Qc,Rc=_.t.document;Qc=Rc?Rc.documentMode:void 0;if(Qc!=null&&Qc>parseFloat(Oc)){Nc=String(Qc);break a}}Nc=Oc}_.Sc=Nc;var Tc="ARTICLE SECTION NAV ASIDE H1 H2 H3 H4 H5 H6 HEADER FOOTER ADDRESS P HR PRE BLOCKQUOTE OL UL LH LI DL DT DD FIGURE FIGCAPTION MAIN DIV EM STRONG SMALL S CITE Q DFN ABBR RUBY RB RT RTC RP DATA TIME CODE VAR SAMP KBD SUB SUP I B U MARK BDI BDO SPAN BR WBR NOBR INS DEL PICTURE PARAM TRACK MAP TABLE CAPTION COLGROUP COL TBODY THEAD TFOOT TR TD TH SELECT DATALIST OPTGROUP OPTION OUTPUT PROGRESS METER FIELDSET LEGEND DETAILS SUMMARY MENU DIALOG SLOT CANVAS FONT CENTER ACRONYM BASEFONT BIG DIR HGROUP STRIKE TT".split(" "),
Uc=[["A",new Map([["href",{Aa:7}]])],["AREA",new Map([["href",{Aa:7}]])],["LINK",new Map([["href",{Aa:5,conditions:new Map([["rel",new Set("alternate author bookmark canonical cite help icon license next prefetch dns-prefetch prerender preconnect preload prev search subresource".split(" "))]])}]])],["SOURCE",new Map([["src",{Aa:5}],["srcset",{Aa:6}]])],["IMG",new Map([["src",{Aa:5}],["srcset",{Aa:6}]])],["VIDEO",new Map([["src",{Aa:5}]])],["AUDIO",new Map([["src",{Aa:5}]])]],Vc="title aria-atomic aria-autocomplete aria-busy aria-checked aria-current aria-disabled aria-dropeffect aria-expanded aria-haspopup aria-hidden aria-invalid aria-label aria-level aria-live aria-multiline aria-multiselectable aria-orientation aria-posinset aria-pressed aria-readonly aria-relevant aria-required aria-selected aria-setsize aria-sort aria-valuemax aria-valuemin aria-valuenow aria-valuetext alt align autocapitalize autocomplete autocorrect autofocus autoplay bgcolor border cellpadding cellspacing checked cite color cols colspan controls controlslist coords crossorigin datetime disabled download draggable enctype face formenctype frameborder height hreflang hidden inert ismap label lang loop max maxlength media minlength min multiple muted nonce open playsinline placeholder poster preload rel required reversed role rows rowspan selected shape size sizes slot span spellcheck start step summary translate type usemap valign value width wrap itemscope itemtype itemid itemprop itemref".split(" "),
Wc=[["dir",{Aa:3,conditions:Ha(function(){return new Map([["dir",new Set(["auto","ltr","rtl"])]])})}],["async",{Aa:3,conditions:Ha(function(){return new Map([["async",new Set(["async"])]])})}],["loading",{Aa:3,conditions:Ha(function(){return new Map([["loading",new Set(["eager","lazy"])]])})}],["target",{Aa:3,conditions:Ha(function(){return new Map([["target",new Set(["_self","_blank"])]])})}]],Xc=new function(a,b,c){var d=new Set(["data-","aria-"]),e=new Map(Uc);this.j=a;this.g=e;this.l=b;this.o=
c;this.h=d}(new Set(Ha(function(){return Tc.concat("STYLE TITLE INPUT TEXTAREA BUTTON LABEL".split(" "))})),new Set(Ha(function(){return Vc.concat(["class","id","tabindex","contenteditable","name"])})),new Map(Ha(function(){return Wc.concat([["style",{Aa:1}]])})));var Yc;Yc=function(){this.g=Xc};_.Zc=Ha(function(){return new Yc});var dd,cd,gd;_.db=function(a){return a?new _.$c(_.ad(a)):ac||(ac=new _.$c)};_.bd=function(a,b){return typeof b==="string"?a.getElementById(b):b};dd=function(a,b){_.jc(b,function(c,d){d=="style"?a.style.cssText=c:d=="class"?a.className=c:d=="for"?a.htmlFor=c:cd.hasOwnProperty(d)?a.setAttribute(cd[d],c):d.lastIndexOf("aria-",0)==0||d.lastIndexOf("data-",0)==0?a.setAttribute(d,c):a[d]=c})};
cd={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};_.ed=function(a){a=a.document;a=a.compatMode=="CSS1Compat"?a.documentElement:a.body;return new _.hc(a.clientWidth,a.clientHeight)};_.fb=function(a){return a?a.defaultView:window};
_.hd=function(a,b){var c=b[1],d=_.fd(a,String(b[0]));c&&(typeof c==="string"?d.className=c:Array.isArray(c)?d.className=c.join(" "):dd(d,c));b.length>2&&gd(a,d,b,2);return d};
gd=function(a,b,c,d){function e(h){h&&b.appendChild(typeof h==="string"?a.createTextNode(h):h)}for(;d<c.length;d++){var f=c[d];if(!_.ra(f)||_.za(f)&&f.nodeType>0)e(f);else{a:{if(f&&typeof f.length=="number"){if(_.za(f)){var g=typeof f.item=="function"||typeof f.item=="string";break a}if(typeof f==="function"){g=typeof f.item=="function";break a}}g=!1}_.dc(g?_.xa(f):f,e)}}};_.fd=function(a,b){b=String(b);a.contentType==="application/xhtml+xml"&&(b=b.toLowerCase());return a.createElement(b)};
_.id=function(a,b){gd(_.ad(a),a,arguments,1)};_.jd=function(a){for(var b;b=a.firstChild;)a.removeChild(b)};_.kd=function(a){return a&&a.parentNode?a.parentNode.removeChild(a):null};_.ld=function(a,b){if(!a||!b)return!1;if(a.contains&&b.nodeType==1)return a==b||a.contains(b);if(typeof a.compareDocumentPosition!="undefined")return a==b||!!(a.compareDocumentPosition(b)&16);for(;b&&a!=b;)b=b.parentNode;return b==a};_.ad=function(a){return a.nodeType==9?a:a.ownerDocument||a.document};
_.md=function(a,b){if("textContent"in a)a.textContent=b;else if(a.nodeType==3)a.data=String(b);else if(a.firstChild&&a.firstChild.nodeType==3){for(;a.lastChild!=a.firstChild;)a.removeChild(a.lastChild);a.firstChild.data=String(b)}else _.jd(a),a.appendChild(_.ad(a).createTextNode(String(b)))};_.$c=function(a){this.g=a||_.t.document||document};_.l=_.$c.prototype;_.l.C=function(a){return _.bd(this.g,a)};_.l.Hk=_.$c.prototype.C;_.l.getElementsByTagName=function(a,b){return(b||this.g).getElementsByTagName(String(a))};
_.l.R=function(a,b,c){return _.hd(this.g,arguments)};_.l.createElement=function(a){return _.fd(this.g,a)};_.l.appendChild=function(a,b){a.appendChild(b)};_.l.append=_.id;_.l.canHaveChildren=function(a){if(a.nodeType!=1)return!1;switch(a.tagName){case "APPLET":case "AREA":case "BASE":case "BR":case "COL":case "COMMAND":case "EMBED":case "FRAME":case "HR":case "IMG":case "INPUT":case "IFRAME":case "ISINDEX":case "KEYGEN":case "LINK":case "NOFRAMES":case "NOSCRIPT":case "META":case "OBJECT":case "PARAM":case "SCRIPT":case "SOURCE":case "STYLE":case "TRACK":case "WBR":return!1}return!0};
_.l.rf=_.jd;_.l.removeNode=_.kd;_.l.contains=_.ld;_.l.zc=_.md;var nd=function(){this.id="b"};nd.prototype.toString=function(){return this.id};_.od=function(a,b){this.type=a instanceof nd?String(a):a;this.currentTarget=this.target=b;this.defaultPrevented=this.h=!1};_.od.prototype.stopPropagation=function(){this.h=!0};_.od.prototype.preventDefault=function(){this.defaultPrevented=!0};var pd=function(){if(!_.t.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});try{var c=function(){};_.t.addEventListener("test",c,b);_.t.removeEventListener("test",c,b)}catch(d){}return a}();_.qd=function(a,b){_.od.call(this,a?a.type:"");this.relatedTarget=this.currentTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=this.offsetY=this.offsetX=0;this.key="";this.charCode=this.keyCode=0;this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.j=!1;this.pointerId=0;this.pointerType="";this.timeStamp=0;this.g=null;a&&this.init(a,b)};_.D(_.qd,_.od);
_.qd.prototype.init=function(a,b){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.currentTarget=b;b=a.relatedTarget;b||(c=="mouseover"?b=a.fromElement:c=="mouseout"&&(b=a.toElement));this.relatedTarget=b;d?(this.clientX=d.clientX!==void 0?d.clientX:d.pageX,this.clientY=d.clientY!==void 0?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.offsetX=_.Ec||a.offsetX!==void 0?a.offsetX:a.layerX,
this.offsetY=_.Ec||a.offsetY!==void 0?a.offsetY:a.layerY,this.clientX=a.clientX!==void 0?a.clientX:a.pageX,this.clientY=a.clientY!==void 0?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.keyCode=a.keyCode||0;this.key=a.key||"";this.charCode=a.charCode||(c=="keypress"?a.keyCode:0);this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=a.metaKey;this.j=_.Gc?a.metaKey:a.ctrlKey;this.pointerId=a.pointerId||0;this.pointerType=
a.pointerType;this.state=a.state;this.timeStamp=a.timeStamp;this.g=a;a.defaultPrevented&&_.qd.P.preventDefault.call(this)};_.qd.prototype.stopPropagation=function(){_.qd.P.stopPropagation.call(this);this.g.stopPropagation?this.g.stopPropagation():this.g.cancelBubble=!0};_.qd.prototype.preventDefault=function(){_.qd.P.preventDefault.call(this);var a=this.g;a.preventDefault?a.preventDefault():a.returnValue=!1};var rd;rd="closure_listenable_"+(Math.random()*1E6|0);_.sd=function(a){return!(!a||!a[rd])};var td=0;var ud=function(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.Nd=e;this.key=++td;this.Wc=this.wd=!1},vd=function(a){a.Wc=!0;a.listener=null;a.proxy=null;a.src=null;a.Nd=null};var xd;cb.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.g[f];a||(a=this.g[f]=[],this.h++);var g=wd(a,b,d,e);g>-1?(b=a[g],c||(b.wd=!1)):(b=new ud(b,this.src,f,!!d,e),b.wd=c,a.push(b));return b};cb.prototype.remove=function(a,b,c,d){a=a.toString();if(!(a in this.g))return!1;var e=this.g[a];b=wd(e,b,c,d);return b>-1?(vd(e[b]),Array.prototype.splice.call(e,b,1),e.length==0&&(delete this.g[a],this.h--),!0):!1};
xd=function(a,b){var c=b.type;if(!(c in a.g))return!1;var d=_.wa(a.g[c],b);d&&(vd(b),a.g[c].length==0&&(delete a.g[c],a.h--));return d};_.yd=function(a){var b=0,c;for(c in a.g){for(var d=a.g[c],e=0;e<d.length;e++)++b,vd(d[e]);delete a.g[c];a.h--}};cb.prototype.Qc=function(a,b,c,d){a=this.g[a.toString()];var e=-1;a&&(e=wd(a,b,c,d));return e>-1?a[e]:null};
cb.prototype.hasListener=function(a,b){var c=a!==void 0,d=c?a.toString():"",e=b!==void 0;return Ca(this.g,function(f){for(var g=0;g<f.length;++g)if(!(c&&f[g].type!=d||e&&f[g].capture!=b))return!0;return!1})};var wd=function(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.Wc&&f.listener==b&&f.capture==!!c&&f.Nd==d)return e}return-1};var zd,Ad,Bd,Ed,Gd,Hd,Id,Ld,Dd;zd="closure_lm_"+(Math.random()*1E6|0);Ad={};Bd=0;_.E=function(a,b,c,d,e){if(d&&d.once)return _.Cd(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)_.E(a,b[f],c,d,e);return null}c=Dd(c);return _.sd(a)?a.K(b,c,_.za(d)?!!d.capture:!!d,e):Ed(a,b,c,!1,d,e)};
Ed=function(a,b,c,d,e,f){if(!b)throw Error("x");var g=_.za(e)?!!e.capture:!!e,h=_.Fd(a);h||(a[zd]=h=new cb(a));c=h.add(b,c,d,g,f);if(c.proxy)return c;d=Gd();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)pd||(e=g),e===void 0&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(Hd(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("y");Bd++;return c};Gd=function(){var a=Id,b=function(c){return a.call(b.src,b.listener,c)};return b};
_.Cd=function(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)_.Cd(a,b[f],c,d,e);return null}c=Dd(c);return _.sd(a)?a.Cb(b,c,_.za(d)?!!d.capture:!!d,e):Ed(a,b,c,!0,d,e)};_.Jd=function(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)_.Jd(a,b[f],c,d,e);else d=_.za(d)?!!d.capture:!!d,c=Dd(c),_.sd(a)?a.bb(b,c,d,e):a&&(a=_.Fd(a))&&(b=a.Qc(b,c,d,e))&&_.Kd(b)};
_.Kd=function(a){if(typeof a==="number"||!a||a.Wc)return!1;var b=a.src;if(_.sd(b))return xd(b.Va,a);var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(Hd(c),d):b.addListener&&b.removeListener&&b.removeListener(d);Bd--;(c=_.Fd(b))?(xd(c,a),c.h==0&&(c.src=null,b[zd]=null)):vd(a);return!0};Hd=function(a){return a in Ad?Ad[a]:Ad[a]="on"+a};
Id=function(a,b){if(a.Wc)a=!0;else{b=new _.qd(b,this);var c=a.listener,d=a.Nd||a.src;a.wd&&_.Kd(a);a=c.call(d,b)}return a};_.Fd=function(a){a=a[zd];return a instanceof cb?a:null};Ld="__closure_events_fn_"+(Math.random()*1E9>>>0);Dd=function(a){if(typeof a==="function")return a;a[Ld]||(a[Ld]=function(b){return a.handleEvent(b)});return a[Ld]};_.F=function(){_.w.call(this);this.Va=new cb(this);this.xi=this;this.ee=null};_.D(_.F,_.w);_.F.prototype[rd]=!0;_.l=_.F.prototype;_.l.le=function(a){this.ee=a};_.l.addEventListener=function(a,b,c,d){_.E(this,a,b,c,d)};_.l.removeEventListener=function(a,b,c,d){_.Jd(this,a,b,c,d)};
_.l.dispatchEvent=function(a){var b,c=this.ee;if(c)for(b=[];c;c=c.ee)b.push(c);c=this.xi;var d=a.type||a;if(typeof a==="string")a=new _.od(a,c);else if(a instanceof _.od)a.target=a.target||c;else{var e=a;a=new _.od(d,c);Fa(a,e)}e=!0;var f;if(b)for(f=b.length-1;!a.h&&f>=0;f--){var g=a.currentTarget=b[f];e=Md(g,d,!0,a)&&e}a.h||(g=a.currentTarget=c,e=Md(g,d,!0,a)&&e,a.h||(e=Md(g,d,!1,a)&&e));if(b)for(f=0;!a.h&&f<b.length;f++)g=a.currentTarget=b[f],e=Md(g,d,!1,a)&&e;return e};
_.l.M=function(){_.F.P.M.call(this);this.Va&&_.yd(this.Va);this.ee=null};_.l.K=function(a,b,c,d){return this.Va.add(String(a),b,!1,c,d)};_.l.Cb=function(a,b,c,d){return this.Va.add(String(a),b,!0,c,d)};_.l.bb=function(a,b,c,d){return this.Va.remove(String(a),b,c,d)};var Md=function(a,b,c,d){b=a.Va.g[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.Wc&&g.capture==c){var h=g.listener,k=g.Nd||g.src;g.wd&&xd(a.Va,g);e=h.call(k,d)!==!1&&e}}return e&&!d.defaultPrevented};
_.F.prototype.Qc=function(a,b,c,d){return this.Va.Qc(String(a),b,c,d)};_.F.prototype.hasListener=function(a,b){return this.Va.hasListener(a!==void 0?String(a):void 0,b)};var eb=function(a){_.F.call(this);this.g=a||window;this.h=_.E(this.g,"resize",this.l,!1,this);this.j=_.ed(this.g||window)};_.D(eb,_.F);eb.prototype.M=function(){eb.P.M.call(this);this.h&&(_.Kd(this.h),this.h=null);this.j=this.g=null};eb.prototype.l=function(){var a=_.ed(this.g||window);_.ic(a,this.j)||(this.j=a,this.dispatchEvent("resize"))};var gb=function(a){_.F.call(this);this.j=a?a.g.defaultView:window;this.o=this.j.devicePixelRatio>=1.5?2:1;this.h=(0,_.B)(this.A,this);this.l=null;(this.g=this.j.matchMedia?this.j.matchMedia("(min-resolution: 1.5dppx), (-webkit-min-device-pixel-ratio: 1.5)"):null)&&typeof this.g.addListener!=="function"&&typeof this.g.addEventListener!=="function"&&(this.g=null)};_.D(gb,_.F);
gb.prototype.start=function(){var a=this;this.g&&(typeof this.g.addEventListener==="function"?(this.g.addEventListener("change",this.h),this.l=function(){a.g.removeEventListener("change",a.h)}):(this.g.addListener(this.h),this.l=function(){a.g.removeListener(a.h)}))};gb.prototype.A=function(){var a=this.j.devicePixelRatio>=1.5?2:1;this.o!=a&&(this.o=a,this.dispatchEvent("a"))};gb.prototype.M=function(){this.l&&this.l();gb.P.M.call(this)};_.D(hb,_.w);hb.prototype.M=function(){this.h=this.l=null;this.g&&(this.g.dispose(),this.g=null);_.qa(this.j);this.j=null};_.pa(cc,hb);var ib=new Uint8Array(123);var Nd=[];Sb=Sb||{};var Od=function(){_.w.call(this)};_.D(Od,_.w);Od.prototype.initialize=function(){};var Pd=function(a,b){this.g=a;this.h=b};Pd.prototype.execute=function(a){this.g&&(this.g.call(this.h||null,a),this.g=this.h=null)};Pd.prototype.abort=function(){this.h=this.g=null};var Qd=function(a,b){_.w.call(this);this.h=a;this.A=b;this.l=[];this.j=[];this.o=[]};_.D(Qd,_.w);Qd.prototype.B=Od;Qd.prototype.g=null;Qd.prototype.Wa=function(){return this.A};var Rd=function(a,b){a.j.push(new Pd(b))};Qd.prototype.onLoad=function(a){var b=new this.B;b.initialize(a());this.g=b;b=(b=Sd(this.o,a()))||Sd(this.l,a());b||(this.j.length=0);return b};Qd.prototype.nf=function(a){(a=Sd(this.j,a))&&_.lb(Error("A`"+a));this.o.length=0;this.l.length=0};
var Sd=function(a,b){for(var c=[],d=0;d<a.length;d++)try{a[d].execute(b)}catch(e){_.lb(e),c.push(e)}a.length=0;return c.length?c:null};Qd.prototype.M=function(){Qd.P.M.call(this);_.qa(this.g)};var Td=function(){this.S=this.Da=null};_.l=Td.prototype;_.l.rh=function(){};_.l.Af=function(){};_.l.nh=function(){throw Error("C");};_.l.ug=function(){return this.Da};_.l.Bf=function(a){this.Da=a};_.l.isActive=function(){return!1};_.l.Qg=function(){return!1};var Ud=typeof AsyncContext!=="undefined"&&typeof AsyncContext.Snapshot==="function"?function(a){return a&&AsyncContext.Snapshot.wrap(a)}:function(a){return a};var Vd=function(a,b){this.l=a;this.j=b;this.h=0;this.g=null};Vd.prototype.get=function(){if(this.h>0){this.h--;var a=this.g;this.g=a.next;a.next=null}else a=this.l();return a};var nb=function(a,b){a.j(b);a.h<100&&(a.h++,b.next=a.g,a.g=b)};var Wd=function(){this.h=this.g=null};Wd.prototype.add=function(a,b){var c=ob.get();c.set(a,b);this.h?this.h.next=c:this.g=c;this.h=c};Wd.prototype.remove=function(){var a=null;this.g&&(a=this.g,this.g=this.g.next,this.g||(this.h=null),a.next=null);return a};var ob=new Vd(function(){return new Xd},function(a){return a.reset()}),Xd=function(){this.next=this.scope=this.g=null};Xd.prototype.set=function(a,b){this.g=a;this.scope=b;this.next=null};
Xd.prototype.reset=function(){this.next=this.scope=this.g=null};var Yd,pb=!1,mb=new Wd,$d=function(a,b){Yd||Zd();pb||(Yd(),pb=!0);mb.add(a,b)},Zd=function(){var a=Promise.resolve(void 0);Yd=function(){a.then(qb)}};_.ae=function(){};var be=function(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};var ee,oe,me,ke;_.de=function(a){this.g=0;this.B=void 0;this.l=this.h=this.j=null;this.o=this.A=!1;if(a!=_.ae)try{var b=this;a.call(void 0,function(c){_.ce(b,2,c)},function(c){_.ce(b,3,c)})}catch(c){_.ce(this,3,c)}};ee=function(){this.next=this.j=this.h=this.l=this.g=null;this.o=!1};ee.prototype.reset=function(){this.j=this.h=this.l=this.g=null;this.o=!1};var fe=new Vd(function(){return new ee},function(a){a.reset()}),ge=function(a,b,c){var d=fe.get();d.l=a;d.h=b;d.j=c;return d};
_.de.prototype.then=function(a,b,c){return he(this,Ud(typeof a==="function"?a:null),Ud(typeof b==="function"?b:null),c)};_.de.prototype.$goog_Thenable=!0;_.de.prototype.D=function(a,b){return he(this,null,Ud(a),b)};_.de.prototype.catch=_.de.prototype.D;_.de.prototype.cancel=function(a){if(this.g==0){var b=new ie(a);$d(function(){je(this,b)},this)}};
var je=function(a,b){if(a.g==0)if(a.j){var c=a.j;if(c.h){for(var d=0,e=null,f=null,g=c.h;g&&(g.o||(d++,g.g==a&&(e=g),!(e&&d>1)));g=g.next)e||(f=g);e&&(c.g==0&&d==1?je(c,b):(f?(d=f,d.next==c.l&&(c.l=d),d.next=d.next.next):ke(c),le(c,e,3,b)))}a.j=null}else _.ce(a,3,b)},ne=function(a,b){a.h||a.g!=2&&a.g!=3||me(a);a.l?a.l.next=b:a.h=b;a.l=b},he=function(a,b,c,d){var e=ge(null,null,null);e.g=new _.de(function(f,g){e.l=b?function(h){try{var k=b.call(d,h);f(k)}catch(m){g(m)}}:f;e.h=c?function(h){try{var k=
c.call(d,h);k===void 0&&h instanceof ie?g(h):f(k)}catch(m){g(m)}}:g});e.g.j=a;ne(a,e);return e.g};_.de.prototype.F=function(a){this.g=0;_.ce(this,2,a)};_.de.prototype.I=function(a){this.g=0;_.ce(this,3,a)};
_.ce=function(a,b,c){if(a.g==0){a===c&&(b=3,c=new TypeError("D"));a.g=1;a:{var d=c,e=a.F,f=a.I;if(d instanceof _.de){ne(d,ge(e||_.ae,f||null,a));var g=!0}else if(be(d))d.then(e,f,a),g=!0;else{if(_.za(d))try{var h=d.then;if(typeof h==="function"){oe(d,h,e,f,a);g=!0;break a}}catch(k){f.call(a,k);g=!0;break a}g=!1}}g||(a.B=c,a.g=b,a.j=null,me(a),b!=3||c instanceof ie||pe(a,c))}};oe=function(a,b,c,d,e){var f=!1,g=function(k){f||(f=!0,c.call(e,k))},h=function(k){f||(f=!0,d.call(e,k))};try{b.call(a,g,h)}catch(k){h(k)}};
me=function(a){a.A||(a.A=!0,$d(a.G,a))};ke=function(a){var b=null;a.h&&(b=a.h,a.h=b.next,b.next=null);a.h||(a.l=null);return b};_.de.prototype.G=function(){for(var a;a=ke(this);)le(this,a,this.g,this.B);this.A=!1};
var le=function(a,b,c,d){if(c==3&&b.h&&!b.o)for(;a&&a.o;a=a.j)a.o=!1;if(b.g)b.g.j=null,qe(b,c,d);else try{b.o?b.l.call(b.j):qe(b,c,d)}catch(e){re.call(null,e)}nb(fe,b)},qe=function(a,b,c){b==2?a.l.call(a.j,c):a.h&&a.h.call(a.j,c)},pe=function(a,b){a.o=!0;$d(function(){a.o&&re.call(null,b)})},re=_.lb,ie=function(a){aa.call(this,a)};_.D(ie,aa);ie.prototype.name="cancel";/*

 Copyright 2005, 2007 Bob Ippolito. All Rights Reserved.
 Copyright The Closure Library Authors.
 SPDX-License-Identifier: MIT
*/
var se=function(){this.B=[];this.o=this.h=!1;this.l=void 0;this.I=this.J=this.G=!1;this.D=0;this.j=null;this.A=0};se.prototype.cancel=function(a){if(this.h)this.l instanceof se&&this.l.cancel();else{if(this.j){var b=this.j;delete this.j;a?b.cancel(a):(b.A--,b.A<=0&&b.cancel())}this.I=!0;this.h||this.F(new te(this))}};se.prototype.L=function(a,b){this.G=!1;ue(this,a,b)};var ue=function(a,b,c){a.h=!0;a.l=c;a.o=!b;ve(a)},xe=function(a){if(a.h){if(!a.I)throw new we(a);a.I=!1}};
se.prototype.g=function(a){xe(this);ue(this,!0,a)};se.prototype.F=function(a){xe(this);ue(this,!1,a)};var ze=function(a,b,c){ye(a,b,null,c)},Ae=function(a,b,c){ye(a,null,b,c)},ye=function(a,b,c,d){var e=a.h;e||(b===c?b=c=Ud(b):(b=Ud(b),c=Ud(c)));a.B.push([b,c,d]);e&&ve(a)};se.prototype.then=function(a,b,c){var d,e,f=new _.de(function(g,h){e=g;d=h});ye(this,e,function(g){g instanceof te?f.cancel():d(g);return Be},this);return f.then(a,b,c)};se.prototype.$goog_Thenable=!0;
var Ce=function(a,b){b instanceof se?ze(a,(0,_.B)(b.O,b)):ze(a,function(){return b})};se.prototype.O=function(a){var b=new se;ye(this,b.g,b.F,b);a&&(b.j=this,this.A++);return b};
var De=function(a){return _.fc(a.B,function(b){return typeof b[1]==="function"})},Be={},ve=function(a){if(a.D&&a.h&&De(a)){var b=a.D,c=Ee[b];c&&(_.t.clearTimeout(c.g),delete Ee[b]);a.D=0}a.j&&(a.j.A--,delete a.j);b=a.l;for(var d=c=!1;a.B.length&&!a.G;){var e=a.B.shift(),f=e[0],g=e[1];e=e[2];if(f=a.o?g:f)try{var h=f.call(e||null,b);h===Be&&(h=void 0);h!==void 0&&(a.o=a.o&&(h==b||h instanceof Error),a.l=b=h);if(be(b)||typeof _.t.Promise==="function"&&b instanceof _.t.Promise)d=!0,a.G=!0}catch(k){b=
k,a.o=!0,De(a)||(c=!0)}}a.l=b;d&&(h=(0,_.B)(a.L,a,!0),d=(0,_.B)(a.L,a,!1),b instanceof se?(ye(b,h,d),b.J=!0):b.then(h,d));c&&(b=new Fe(b),Ee[b.g]=b,a.D=b.g)},we=function(){aa.call(this)};_.D(we,aa);we.prototype.message="Deferred has already fired";we.prototype.name="AlreadyCalledError";var te=function(){aa.call(this)};_.D(te,aa);te.prototype.message="Deferred was canceled";te.prototype.name="CanceledError";var Fe=function(a){this.g=_.t.setTimeout((0,_.B)(this.throwError,this),0);this.h=a};
Fe.prototype.throwError=function(){delete Ee[this.g];throw this.h;};var Ee={};var Ge=function(a,b,c,d,e){c=Error.call(this);this.message=c.message;"stack"in c&&(this.stack=c.stack);this.name="ModuleLoadFailure";this.type=a;this.status=b;this.url=d;this.cause=e;this.message=this.toString()};_.y(Ge,Error);Ge.prototype.toString=function(){return He(this)+" ("+(this.status!=void 0?this.status:"?")+")"};
var He=function(a){switch(a.type){case Ge.g.Wf:return"Unauthorized";case Ge.g.Lf:return"Consecutive load failures";case Ge.g.TIMEOUT:return"Timed out";case Ge.g.Uf:return"Out of date module id";case Ge.g.re:return"Init error";default:return"Unknown failure type "+a.type}};Sb.Pa=Ge;Sb.Pa.g={Wf:0,Lf:1,TIMEOUT:2,Uf:3,re:4};var Ie=function(){Td.call(this);this.I=null;this.g={};this.j=[];this.l=[];this.L=[];this.h=[];this.B=[];this.A={};this.O={};this.o=this.D=new Qd([],"");this.qa=null;this.F=new se;this.J=!1;this.G=0;this.X=this.Y=this.T=!1};_.D(Ie,Td);var Je=function(a,b){aa.call(this,"Error loading "+a+": "+b)};_.D(Je,aa);Ie.prototype.rh=function(a){this.J=a};
Ie.prototype.Af=function(a,b){if(!(this instanceof Ie))this.Af(a,b);else if(typeof a==="string"){if(a.startsWith("d$")){a=a.substring(2);for(var c=[],d=0,e=a.indexOf("/"),f=0,g=!1,h=0;;){var k=g?a.substring(f):a.substring(f,e);if(k.length===0)d++,f="sy"+d.toString(36),k=[];else{var m=k.indexOf(":");if(m<0)f=k,k=[];else if(m===k.length-1)f=k.substring(0,m),k=Array(c[h-1]);else{f=k.substring(0,m);k=k.substring(m+1).split(",");m=h;for(var n=0;n<k.length;n++)m-=k[n].length===0?1:Number(k[n]),k[n]=c[m]}m=
0;if(f.length===0)m=1;else if(f.charAt(0)==="+"||f.charAt(0)==="-")m=Number(f);m!==0&&(d+=m,f="sy"+d.toString(36))}c.push(f);Ke(this,f,k);if(g)break;f=e+1;e=a.indexOf("/",f);e===-1&&(g=!0);h++}this.I=c}else if(a.startsWith("p$"))Le(this,a);else{a=a.split("/");c=[];for(d=0;d<a.length;d++){h=a[d].split(":");e=h[0];g=[];if(h[1])for(g=h[1].split(","),h=0;h<g.length;h++)g[h]=c[parseInt(g[h],36)];c.push(e);Ke(this,e,g)}this.I=c}b&&b.length?(ya(this.j,b),this.qa=b[b.length-1]):this.F.h||this.F.g();Object.freeze(this.I);
Me(this)}};
var Le=function(a,b){var c=b.substring(2);for(b=0;b<64;b++)ib["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_".charCodeAt(b)]=b;var d={fg:c,Yb:0};kb(d);var e=kb(d),f=kb(d)+1;b=Array(e);var g=Array(e),h=Array(e);f=Array(f);var k=0,m=0,n=d.Yb;d.Yb=d.fg.indexOf("|",d.Yb)+1;for(var p=0;p<e;p++){var q=kb(d),r=q&2,u=q&1;q>>>=2;u?(k+=q>>>1^-(q&1),q="sy"+k.toString(36)):(u=n,n+=q,q=c.substring(u,n));b[p]=q;r&&(f[m++]=q)}f[m]="";d.Yb++;m=e&-2;c=e&1;for(k=0;k<m;k+=2)n=jb(d),h[k]=n&7,h[k+1]=
n>>>3&7;c&&(c=jb(d),h[m]=c&7);d.Yb++;for(m=0;m<e;m++)h[m]===7&&(h[m]=kb(d));d.Yb++;for(c=m=0;c<e;c++){k=h[c];n=k===0?Nd:Array(k);g[c]=n;p=m;for(r=0;r<k;r++)p-=kb(d),n[r]=f[p];f[m]===b[c]&&m++}for(d=0;d<b.length;d++)Ke(a,b[d],g[d]);a.I=b};Ie.prototype.nh=function(a,b){if(this.A[a]){delete this.A[a][b];for(var c in this.A[a])return;delete this.A[a]}};Ie.prototype.Bf=function(a){Ie.P.Bf.call(this,a);Me(this)};Ie.prototype.isActive=function(){return this.j.length>0};
Ie.prototype.Qg=function(){return this.B.length>0};
var Oe=function(a){var b=a.T,c=a.isActive();c!=b&&(Ne(a,c?"active":"idle"),a.T=c);b=a.Qg();b!=a.Y&&(Ne(a,b?"userActive":"userIdle"),a.Y=b)},Ke=function(a,b,c){a.g[b]?(a=a.g[b].h,a!=c&&a.splice.apply(a,[0,a.length].concat(_.Hb(c)))):a.g[b]=new Qd(c,b)},Re=function(a,b,c){var d=[];Ba(b,d);b=[];for(var e={},f=0;f<d.length;f++){var g=d[f],h=a.g[g];if(!h)throw Error("E`"+g);var k=new se;e[g]=k;h.g?k.g(a.Da):(Pe(a,g,h,!!c,k),Qe(a,g)||b.push(g))}b.length>0&&(a.j.length===0?a.N(b):(a.h.push(b),Oe(a)));return e},
Pe=function(a,b,c,d,e){c.l.push(new Pd(e.g,e));Rd(c,function(f){e.F(new Je(b,f))});Qe(a,b)?d&&(_.ua(a.B,b)||a.B.push(b),Oe(a)):d&&(_.ua(a.B,b)||a.B.push(b))};
Ie.prototype.N=function(a,b,c){var d=this;b||(this.G=0);var e=Se(this,a);this.j=e;this.l=this.J?a:_.xa(e);Oe(this);if(e.length!==0){this.L.push.apply(this.L,e);a=this.S;if(!a)throw Error("F");if(Object.keys(this.A).length>0&&!a.J)throw Error("G");c=(0,_.B)(a.I,a,_.xa(e),this.g,{Ji:this.A,Mi:!!c,nf:function(f,g){var h=d.l;f=f!=null?f:void 0;d.G++;var k=_.xa(e);d.l=h;e.forEach(_.Yb(_.wa,d.L),d);f==401?(Te(d,new Sb.Pa(Sb.Pa.g.Wf,f)),d.h.length=0):f==410?(Ue(d,new Sb.Pa(Sb.Pa.g.Uf,f)),Ve(d)):d.G>=3?(Ue(d,
new Sb.Pa(Sb.Pa.g.Lf,f,k,g)),Ve(d)):d.N(d.l,!0,f==8001||!1)},gk:(0,_.B)(this.la,this)});(a=Math.pow(this.G,2)*5E3)?_.t.setTimeout(c,a):c()}};
var Se=function(a,b){b=b.filter(function(e){return a.g[e].g?(_.t.setTimeout(function(){return Error("H`"+e)},0),!1):!0});for(var c=[],d=0;d<b.length;d++)c=c.concat(We(a,b[d]));Ba(c);return!a.J&&c.length>1?(b=c.shift(),a.h=c.map(function(e){return[e]}).concat(a.h),[b]):c},We=function(a,b){var c=Ga(a.L),d=[];c[b]||d.push(b);b=[b];for(var e=0;e<b.length;e++)for(var f=a.g[b[e]].h,g=f.length-1;g>=0;g--){var h=f[g];a.g[h].g||c[h]||(d.push(h),b.push(h))}d.reverse();Ba(d);return d},Me=function(a){if(a.o==
a.D){a.o=null;var b=a.D.onLoad((0,_.B)(a.ug,a));b&&b.length&&Te(a,new Sb.Pa(Sb.Pa.g.re,void 0,void 0,void 0,b[0]));Oe(a)}},ma=function(a){if(a.o){var b=a.o.Wa(),c=[];if(a.A[b]){for(var d=_.z(Object.keys(a.A[b])),e=d.next();!e.done;e=d.next()){e=e.value;var f=a.g[e];f&&!f.g&&(a.nh(b,e),c.push(e))}Re(a,c)}a.Za()||((c=a.g[b].onLoad((0,_.B)(a.ug,a)))&&c.length&&Te(a,new Sb.Pa(Sb.Pa.g.re,void 0,void 0,void 0,c[0])),_.wa(a.B,b),_.wa(a.j,b),a.j.length===0&&Ve(a),a.qa&&b==a.qa&&(a.F.h||a.F.g()),Oe(a),a.o=
null)}},Qe=function(a,b){if(_.ua(a.j,b))return!0;for(var c=0;c<a.h.length;c++)if(_.ua(a.h[c],b))return!0;return!1};Ie.prototype.load=function(a,b){return Re(this,[a],b)[a]};var ka=function(a){var b=_.ca;b.o&&b.o.Wa()==="synthetic_module_overhead"&&(ma(b),delete b.g.synthetic_module_overhead);b.g[a]&&Xe(b,b.g[a].h||[],function(c){c.g=new Od;_.wa(b.j,c.Wa())},function(c){return!c.g});b.o=b.g[a]};Ie.prototype.la=function(){Ue(this,new Sb.Pa(Sb.Pa.g.TIMEOUT));Ve(this)};
var Ue=function(a,b){a.l.length>1?a.h=a.l.map(function(c){return[c]}).concat(a.h):Te(a,b)},Te=function(a,b){var c=a.l;a.j.length=0;for(var d=[],e=0;e<a.h.length;e++){var f=a.h[e].filter(function(k){var m=We(this,k);return _.fc(c,function(n){return _.ua(m,n)})},a);ya(d,f)}for(e=0;e<c.length;e++)_.va(d,c[e]);for(e=0;e<d.length;e++){for(f=0;f<a.h.length;f++)_.wa(a.h[f],d[e]);_.wa(a.B,d[e])}if(e=a.O.error)for(f=0;f<e.length;f++)for(var g=e[f],h=0;h<d.length;h++)g("error",d[h],b);for(d=0;d<c.length;d++)a.g[c[d]]&&
a.g[c[d]].nf(b);a.l.length=0;Oe(a)},Ve=function(a){for(;a.h.length;){var b=a.h.shift().filter(function(c){return!this.g[c].g},a);if(b.length>0){a.N(b);return}}Oe(a)},Ne=function(a,b){a=a.O[b];for(var c=0;a&&c<a.length;c++)a[c](b)},Xe=function(a,b,c,d,e){d=d===void 0?function(){return!0}:d;e=e===void 0?{}:e;b=_.z(b);for(var f=b.next();!f.done;f=b.next()){f=f.value;var g=a.g[f];!e[f]&&d(g)&&(e[f]=!0,Xe(a,g.h||[],c,d,e),c(g))}};
Ie.prototype.dispose=function(){sa(_.Da(this.g),this.D);this.g={};this.j=[];this.l=[];this.B=[];this.h=[];this.O={};this.X=!0};Ie.prototype.Za=function(){return this.X};_.ha=function(){return new Ie};var Ye=[],Ze=function(a){function b(d){d&&ec(d,function(e,f){e[f.id]=!0;return e},c.mk)}var c={mk:{},index:Ye.length,An:a};b(a.ke);b(a.Pn);Ye.push(c);a.ke&&_.dc(a.ke,function(d){var e=d.id;e instanceof bc&&d.module&&(e.g=d.module)})};Ze({ke:[{id:cc,jc:hb,multiple:!0}]});var df;_.$e=RegExp("^(?:([^:/?#.]+):)?(?://(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$");_.af=function(a){return a?decodeURI(a):a};_.bf=function(a,b){if(a){a=a.split("&");for(var c=0;c<a.length;c++){var d=a[c].indexOf("="),e=null;if(d>=0){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?_.qc(e):"")}}};
df=function(a,b,c){if(Array.isArray(b))for(var d=0;d<b.length;d++)df(a,String(b[d]),c);else b!=null&&c.push(a+(b===""?"":"="+_.pc(b)))};var ef={};var ff=new bc("MpJwZc","MpJwZc");_.gf=new bc("UUJqVe","UUJqVe");var hf=new nd,jf=function(a,b,c){_.od.call(this,a,b);this.node=b;this.kind=c};_.y(jf,_.od);_.kf=RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)","i");_.lf=function(a,b){b||_.db();this.j=a||null};_.lf.prototype.ha=function(a,b){a=a(b||{},this.j?this.j.g():{});this.h(null,"function"==typeof _.mf&&a instanceof _.mf?a.Nb:null);return String(a)};_.lf.prototype.h=function(){};var nf=function(a){this.h=a;this.j=this.h.g(_.gf)};nf.prototype.g=function(){this.h.Za()||(this.j=this.h.g(_.gf));return this.j?this.j.j():{}};var of=function(a){var b=new nf(a);_.lf.call(this,b,a.get(cc).h);this.l=new _.F;this.o=b};_.y(of,_.lf);of.prototype.g=function(){return this.o.g()};of.prototype.h=function(a,b){_.lf.prototype.h.call(this,a,b);this.l.dispatchEvent(new jf(hf,a,b))};_.pa(ff,of);Ze({ke:[{id:ff,jc:of,multiple:!0}]});var pf=function(a,b){this.defaultValue=a;this.type=b;this.value=a};pf.prototype.get=function(){return this.value};pf.prototype.set=function(a){this.value=a};var qf=function(a){pf.call(this,a,"b")};_.y(qf,pf);qf.prototype.get=function(){return this.value};var rf=function(){this.g={};this.j="";this.h={}};rf.prototype.toString=function(){var a=this.j+sf(this);var b=this.h;var c=[],d;for(d in b)df(d,b[d],c);b=c.join("&");c="";b!=""&&(c="?"+b);return a+c};
var uf=function(a){a=tf(a,"md");return!!a&&a!=="0"},sf=function(a){var b=[],c=(0,_.B)(function(d){this.g[d]!==void 0&&b.push(d+"="+this.g[d])},a);uf(a)?(c("md"),c("k"),c("ck"),c("am"),c("rs"),c("gssmodulesetproto"),c("slk"),c("dti")):(c("sdch"),c("k"),c("ck"),c("am"),c("rt"),"d"in a.g||vf(a,"d","0"),c("d"),c("exm"),c("excm"),(a.g.excm||a.g.exm)&&b.push("ed=1"),c("im"),c("dg"),c("sm"),tf(a,"br")!="1"&&tf(a,"br")!="0"||c("br"),c("br-d"),tf(a,"rb")=="1"&&c("rb"),tf(a,"zs")!=="0"&&c("zs"),wf(a)!==""&&
c("wt"),c("gssmodulesetproto"),c("ujg"),c("sp"),c("rs"),c("cb"),c("ee"),c("slk"),c("dti"),c("m"));return b.join("/")},tf=function(a,b){return a.g[b]?a.g[b]:null},vf=function(a,b,c){c?a.g[b]=c:delete a.g[b]},wf=function(a){switch(tf(a,"wt")){case "0":return"0";case "1":return"1";case "2":return"2";default:return""}},zf=function(a){var b=b===void 0?!0:b;var c=xf(a),d=new rf,e=c.match(_.$e)[5];_.jc(yf,function(g){var h=e.match("/"+g+"=([^/]+)");h&&vf(d,g,h[1])});var f="";f=a.indexOf("_/ss/")!=-1?"_/ss/":
"_/js/";d.j=a.substr(0,a.indexOf(f)+f.length);if(!b)return d;(a=c.match(_.$e)[6]||null)&&_.bf(a,function(g,h){d.h[g]=h});return d},xf=function(a){return a.startsWith("https://uberproxy-pen-redirect.corp.google.com/uberproxy/pen?url=")?a.substr(65):a},yf={Fl:"k",Rk:"ck",rl:"m",cl:"exm",al:"excm",Ik:"am",pl:"mm",El:"rt",ll:"d",bl:"ed",Pl:"sv",Sk:"deob",Pk:"cb",Ml:"rs",Gl:"sdch",nl:"im",Tk:"dg",Yk:"br",Xk:"br-d",Zk:"rb",jm:"zs",im:"wt",dl:"ee",Ol:"sm",ql:"md",jl:"gssmodulesetproto",gm:"ujg",fm:"sp",
Ll:"slk",Uk:"dti"};_.Af=function(a){_.w.call(this);this.h=a;this.g={}};_.D(_.Af,_.w);var Bf=[];_.Af.prototype.K=function(a,b,c,d){return Cf(this,a,b,c,d)};var Cf=function(a,b,c,d,e,f){Array.isArray(c)||(c&&(Bf[0]=c.toString()),c=Bf);for(var g=0;g<c.length;g++){var h=_.E(b,c[g],d||a.handleEvent,e||!1,f||a.h||a);if(!h)break;a.g[h.key]=h}return a};_.Af.prototype.Cb=function(a,b,c,d){return Df(this,a,b,c,d)};
var Df=function(a,b,c,d,e,f){if(Array.isArray(c))for(var g=0;g<c.length;g++)Df(a,b,c[g],d,e,f);else{b=_.Cd(b,c,d||a.handleEvent,e,f||a.h||a);if(!b)return a;a.g[b.key]=b}return a};_.Af.prototype.bb=function(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)this.bb(a,b[f],c,d,e);else c=c||this.handleEvent,d=_.za(d)?!!d.capture:!!d,e=e||this.h||this,c=Dd(c),d=!!d,b=_.sd(a)?a.Qc(b,c,d,e):a?(a=_.Fd(a))?a.Qc(b,c,d,e):null:null,b&&(_.Kd(b),delete this.g[b.key]);return this};
_.Ef=function(a){_.jc(a.g,function(b,c){this.g.hasOwnProperty(c)&&_.Kd(b)},a);a.g={}};_.Af.prototype.M=function(){_.Af.P.M.call(this);_.Ef(this)};_.Af.prototype.handleEvent=function(){throw Error("N");};var Ff,Gf=function(){};_.D(Gf,rb);Gf.prototype.g=function(){return new XMLHttpRequest};Ff=new Gf;_.D(sb,rb);sb.prototype.g=function(){var a=new XMLHttpRequest;if("withCredentials"in a)return a;if(typeof XDomainRequest!="undefined")return new Hf;throw Error("O");};var Hf=function(){this.g=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseType=this.responseText="";this.status=-1;this.statusText="";this.g.onload=(0,_.B)(this.Jh,this);this.g.onerror=(0,_.B)(this.Nf,this);this.g.onprogress=(0,_.B)(this.xj,this);this.g.ontimeout=(0,_.B)(this.Bj,this)};_.l=Hf.prototype;
_.l.open=function(a,b,c){if(c!=null&&!c)throw Error("P");this.g.open(a,b)};_.l.send=function(a){if(a)if(typeof a=="string")this.g.send(a);else throw Error("Q");else this.g.send()};_.l.abort=function(){this.g.abort()};_.l.setRequestHeader=function(){};_.l.getResponseHeader=function(a){return a.toLowerCase()=="content-type"?this.g.contentType:""};_.l.Jh=function(){this.status=200;this.responseText=this.g.responseText;If(this,4)};_.l.Nf=function(){this.status=500;this.responseText="";If(this,4)};
_.l.Bj=function(){this.Nf()};_.l.xj=function(){this.status=200;If(this,1)};var If=function(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()};Hf.prototype.getAllResponseHeaders=function(){return"content-type: "+this.g.contentType};var Kf,Lf;_.Jf=function(a){_.F.call(this);this.headers=new Map;this.J=a||null;this.h=!1;this.g=null;this.o="";this.j=this.F=this.A=this.G=!1;this.B=0;this.l=null;this.L="";this.D=!1};_.D(_.Jf,_.F);Kf=/^https?$/i;Lf=["POST","PUT"];_.Mf=[];_.Jf.prototype.O=function(){this.dispose();_.wa(_.Mf,this)};
_.Jf.prototype.send=function(a,b,c,d){if(this.g)throw Error("S`"+this.o+"`"+a);b=b?b.toUpperCase():"GET";this.o=a;this.G=!1;this.h=!0;this.g=this.J?this.J.g():Ff.g();this.g.onreadystatechange=Ud((0,_.B)(this.I,this));try{this.F=!0,this.g.open(b,String(a),!0),this.F=!1}catch(g){Nf(this);return}a=c||"";c=new Map(this.headers);if(d)if(Object.getPrototypeOf(d)===Object.prototype)for(var e in d)c.set(e,d[e]);else if(typeof d.keys==="function"&&typeof d.get==="function"){e=_.z(d.keys());for(var f=e.next();!f.done;f=
e.next())f=f.value,c.set(f,d.get(f))}else throw Error("T`"+String(d));d=Array.from(c.keys()).find(function(g){return"content-type"==g.toLowerCase()});e=_.t.FormData&&a instanceof _.t.FormData;!_.ua(Lf,b)||d||e||c.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8");b=_.z(c);for(d=b.next();!d.done;d=b.next())c=_.z(d.value),d=c.next().value,c=c.next().value,this.g.setRequestHeader(d,c);this.L&&(this.g.responseType=this.L);"withCredentials"in this.g&&this.g.withCredentials!==this.D&&
(this.g.withCredentials=this.D);try{this.l&&(clearTimeout(this.l),this.l=null),this.B>0&&(this.l=setTimeout(this.S.bind(this),this.B)),this.A=!0,this.g.send(a),this.A=!1}catch(g){Nf(this)}};_.Jf.prototype.S=function(){typeof Ob!="undefined"&&this.g&&(this.dispatchEvent("timeout"),this.abort(8))};var Nf=function(a){a.h=!1;a.g&&(a.j=!0,a.g.abort(),a.j=!1);Of(a);Pf(a)},Of=function(a){a.G||(a.G=!0,a.dispatchEvent("complete"),a.dispatchEvent("error"))};
_.Jf.prototype.abort=function(){this.g&&this.h&&(this.h=!1,this.j=!0,this.g.abort(),this.j=!1,this.dispatchEvent("complete"),this.dispatchEvent("abort"),Pf(this))};_.Jf.prototype.M=function(){this.g&&(this.h&&(this.h=!1,this.j=!0,this.g.abort(),this.j=!1),Pf(this,!0));_.Jf.P.M.call(this)};_.Jf.prototype.I=function(){this.Za()||(this.F||this.A||this.j?Qf(this):this.N())};_.Jf.prototype.N=function(){Qf(this)};
var Qf=function(a){if(a.h&&typeof Ob!="undefined")if(a.A&&(a.g?a.g.readyState:0)==4)setTimeout(a.I.bind(a),0);else if(a.dispatchEvent("readystatechange"),(a.g?a.g.readyState:0)==4){a.h=!1;try{_.Rf(a)?(a.dispatchEvent("complete"),a.dispatchEvent("success")):Of(a)}finally{Pf(a)}}},Pf=function(a,b){if(a.g){a.l&&(clearTimeout(a.l),a.l=null);var c=a.g;a.g=null;b||a.dispatchEvent("ready");try{c.onreadystatechange=null}catch(d){}}};_.Jf.prototype.isActive=function(){return!!this.g};
_.Rf=function(a){var b=_.Sf(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}if(!c){if(b=b===0)a=String(a.o).match(_.$e)[1]||null,!a&&_.t.self&&_.t.self.location&&(a=_.t.self.location.protocol.slice(0,-1)),b=!Kf.test(a?a.toLowerCase():"");c=b}return c};_.Sf=function(a){try{return(a.g?a.g.readyState:0)>2?a.g.status:-1}catch(b){return-1}};_.Tf=function(a){try{return a.g?a.g.responseText:""}catch(b){return""}};var Vf=function(a){_.w.call(this);this.F=a;this.B=zf(a);this.l=this.o=null;this.J=!0;this.h=new _.Af(this);this.L=[];this.A=new Set;this.g=[];this.O=new Uf;this.j=[];this.D=!1;a=(0,_.B)(this.G,this);ef.version=a};_.y(Vf,_.w);var Wf=function(a,b){a.g.length&&Ce(b,a.g[a.g.length-1]);a.g.push(b);ze(b,function(){_.wa(this.g,b)},a)};Vf.prototype.I=function(a,b,c){var d=c===void 0?{}:c;var e=d.Ji;c=d.Mi;var f=d.nf;d=d.gk;a=Xf(this,a,b,e,c);Yf(this,a,f,d,c)};
var Xf=function(a,b,c,d,e){d=d===void 0?{}:d;var f=[];Zf(a,b,c,d,e===void 0?!1:e,function(g){f.push(g.Wa())});return f},Zf=function(a,b,c,d,e,f,g){g=g===void 0?{}:g;b=_.z(b);for(var h=b.next();!h.done;h=b.next()){var k=h.value;h=c[k];!e&&(a.A.has(k)||h.g)||g[k]||(g[k]=!0,k=d[k]?Object.keys(d[k]):[],Zf(a,h.h.concat(k),c,d,e,f,g),f(h))}},Yf=function(a,b,c,d,e){e=e===void 0?!1:e;var f=[],g=new se;b=[b];for(var h=function(p,q){for(var r=[],u=0,A=Math.floor(p.length/q)+1,C=0;C<q;C++){var K=(C+1)*A;r.push(p.slice(u,
K));u=K}return r},k=b.shift();k;){var m=$f(a,k,!!e,!0);if(m.length<=2E3){if(k=ag(a,k,e))f.push(k),Ce(g,k.g)}else b=h(k,Math.ceil(m.length/2E3)).concat(b);k=b.shift()}var n=new se;Wf(a,n);ze(n,function(){return bg(a,f,c,d)});Ae(n,function(){var p=new cg;p.j=!0;p.h=-1;bg(this,[p],c,d)},a);ze(g,function(){return n.g()});g.g()},ag=function(a,b,c){var d=$f(a,b,!(c===void 0||!c));a.L.push(d);b=_.z(b);for(c=b.next();!c.done;c=b.next())a.A.add(c.value);if(a.D)a=_.fd(document,"SCRIPT"),_.Ta(a,_.ub(d)),a.type=
"text/javascript",a.async=!1,document.body.appendChild(a);else{var e=new cg,f=new _.Jf(a.j.length>0?new sb:void 0);a.h.K(f,"success",(0,_.B)(e.B,e,f));a.h.K(f,"error",(0,_.B)(e.A,e,f));a.h.K(f,"timeout",(0,_.B)(e.D,e));Cf(a.h,f,"ready",f.dispose,!1,f);f.B=3E4;dg(a.O,function(){f.send(d);return e.g});return e}return null},bg=function(a,b,c,d){for(var e=!1,f,g=!1,h=0;h<b.length;h++){var k=b[h];if(!f&&k.j){e=!0;f=k.h;break}else k.l&&(g=!0)}h=_.xa(a.g);(e||g)&&f!=-1&&(a.g.length=0);if(e)c&&c(f);else if(g)d&&
d();else for(a=0;a<b.length;a++)d=b[a],eg(d.o,d.Ma)||c&&c(8001);(e||g)&&f!=-1&&_.dc(h,function(m){m.cancel()})};Vf.prototype.M=function(){this.h.dispose();delete ef.version;_.w.prototype.M.call(this)};Vf.prototype.G=function(){return tf(this.B,"k")};
var $f=function(a,b,c,d){d=d===void 0?!1:d;var e=_.af(a.F.match(_.$e)[3]||null);if(a.j.length>0&&!_.ua(a.j,e)&&e!=null&&window.location.hostname!=e)throw Error("W`"+e);var f=a.B;e=new rf;e.g=Object.assign({},f.g);e.j=f.j;e.h=Object.assign({},f.h);delete e.g.m;delete e.g.exm;delete e.g.ed;vf(e,"m",b.join(","));a.o&&(vf(e,"ck",a.o),a.l&&vf(e,"rs",a.l));vf(e,"d","0");c&&(a=_.rc(),e.h.zx=a);a=e.toString();d&&a.lastIndexOf("/",0)==0&&(e=document.location.href.match(_.$e),d=e[1],b=e[2],c=e[3],e=e[4],f=
"",d&&(f+=d+":"),c&&(f+="//",b&&(f+=b+"@"),f+=c,e&&(f+=":"+e)),a=f+a);return a},eg=function(a,b){var c="";if(a.length>1&&a.charAt(a.length-1)==="\n"){var d=a.lastIndexOf("\n",a.length-2);d>=0&&(c=a.substring(d+1,a.length-1))}d=c.length-11;if(d>=0&&c.indexOf("Google Inc.",d)==d||c.lastIndexOf("//# sourceMappingURL=",0)==0)try{c=window;a=a+"\r\n//# sourceURL="+b;a=_.tb(a);var e=_.Ra(a);var f=_.Sa(e);c.eval(f)===f&&c.eval(f.toString())}catch(g){return!1}else return!1;return!0},fg=function(a){var b=_.af(a.match(_.$e)[5]||
null)||"";b=_.af(xf(b).match(_.$e)[5]||null);return(b===null?0:RegExp("(/_/js/)|(/_/ss/)","g").test(b)&&/\/k=/.test(b))?a:null},cg=function(){this.g=new se;this.Ma=this.o="";this.j=!1;this.h=0;this.l=!1};cg.prototype.B=function(a){this.o=_.Tf(a);this.Ma=String(a.o);this.g.g()};cg.prototype.A=function(a){this.j=!0;this.h=_.Sf(a);this.g.g()};cg.prototype.D=function(){this.l=!0;this.g.g()};
var Uf=function(){this.g=0;this.h=[]},dg=function(a,b){a.h.push(b);gg(a)},gg=function(a){for(;a.g<5&&a.h.length;)hg(a,a.h.shift())},hg=function(a,b){a.g++;ze(b(),function(){this.g--;gg(this)},a)};var ig=new qf(!1),jg=document.location.href;
Ze({flags:{dml:ig},initialize:function(a){var b=ig.get(),c="",d="";window&&window._F_cssRowKey&&(c=window._F_cssRowKey,window._F_combinedSignature&&(d=window._F_combinedSignature));if(c&&typeof window._F_installCss!=="function")throw Error("U");var e,f=_.t._F_jsUrl;f&&(e=fg(f));!e&&(f=document.getElementById("base-js"))&&(e=f.src?f.src:f.getAttribute("href"),e=fg(e));e||(e=fg(jg));e||(e=document.getElementsByTagName("script"),e=fg(e[e.length-1].src));if(!e)throw Error("V");e=new Vf(e);c&&(e.o=c);
d&&(e.l=d);e.D=b;b=ja();b.S=e;b.rh(!0);b=ja();b.Bf(a);a.j(b)}});
_._ModuleManager_initialize=function(a,b){if(!_.ca){if(!_.ha)return;_.ia()}_.ca.Af(a,b)};
_._ModuleManager_initialize('b/n73qwf/UUJqVe/MpJwZc/sy0/el_conf:4/el_main_css/sy2/sy3:7/sy4:8/sy5:7/el_main:4,6,9,a/corsproxy/website_error/navigationui:8/phishing_protection:9/_stam:a',['sy0','el_conf']);
}catch(e){_._DumpException(e)}
try{
_.G={};MSG_TRANSLATE="\u0e41\u0e1b\u0e25";_.G[0]=MSG_TRANSLATE;MSG_CANCEL="\u0e22\u0e01\u0e40\u0e25\u0e34\u0e01";_.G[1]=MSG_CANCEL;MSG_CLOSE="\u0e1b\u0e34\u0e14";_.G[2]=MSG_CLOSE;MSGFUNC_PAGE_TRANSLATED_TO=function(a){return"Google \u0e44\u0e14\u0e49\u0e41\u0e1b\u0e25\u0e2b\u0e19\u0e49\u0e32\u0e40\u0e27\u0e47\u0e1a\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32: "+a+" \u0e42\u0e14\u0e22\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34"};_.G[3]=MSGFUNC_PAGE_TRANSLATED_TO;
MSGFUNC_TRANSLATED_TO=function(a){return"\u0e41\u0e1b\u0e25\u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32: "+a};_.G[4]=MSGFUNC_TRANSLATED_TO;MSG_GENERAL_ERROR="\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14: \u0e40\u0e0b\u0e34\u0e23\u0e4c\u0e1f\u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e15\u0e32\u0e21\u0e04\u0e33\u0e02\u0e2d\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13 \u0e42\u0e1b\u0e23\u0e14\u0e25\u0e2d\u0e07\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07\u0e43\u0e19\u0e20\u0e32\u0e22\u0e2b\u0e25\u0e31\u0e07";
_.G[5]=MSG_GENERAL_ERROR;MSG_LEARN_MORE="\u0e14\u0e39\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21";_.G[6]=MSG_LEARN_MORE;MSGFUNC_POWERED_BY=function(a){return"\u0e02\u0e31\u0e1a\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e42\u0e14\u0e22 "+a};_.G[7]=MSGFUNC_POWERED_BY;MSG_TRANSLATE_PRODUCT_NAME="\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";_.G[8]=MSG_TRANSLATE_PRODUCT_NAME;MSG_TRANSLATION_IN_PROGRESS="\u0e01\u0e33\u0e25\u0e31\u0e07\u0e41\u0e1b\u0e25";
_.G[9]=MSG_TRANSLATION_IN_PROGRESS;MSGFUNC_TRANSLATE_PAGE_TO=function(a){return"\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e41\u0e1b\u0e25\u0e2b\u0e19\u0e49\u0e32\u0e40\u0e27\u0e47\u0e1a\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32: "+a+" \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 Google \u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32\u0e43\u0e0a\u0e48\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48"};_.G[10]=MSGFUNC_TRANSLATE_PAGE_TO;
MSGFUNC_VIEW_PAGE_IN=function(a){return"\u0e14\u0e39\u0e2b\u0e19\u0e49\u0e32\u0e40\u0e27\u0e47\u0e1a\u0e19\u0e35\u0e49\u0e43\u0e19\u0e20\u0e32\u0e29\u0e32: "+a};_.G[11]=MSGFUNC_VIEW_PAGE_IN;MSG_RESTORE="\u0e41\u0e2a\u0e14\u0e07\u0e15\u0e49\u0e19\u0e09\u0e1a\u0e31\u0e1a";_.G[12]=MSG_RESTORE;MSG_SSL_INFO_LOCAL_FILE="\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e02\u0e2d\u0e07\u0e44\u0e1f\u0e25\u0e4c\u0e43\u0e19\u0e15\u0e31\u0e27\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e19\u0e35\u0e49\u0e08\u0e30\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e1c\u0e48\u0e32\u0e19\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e17\u0e35\u0e48\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e44\u0e1b\u0e22\u0e31\u0e07 Google \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";
_.G[13]=MSG_SSL_INFO_LOCAL_FILE;MSG_SSL_INFO_SECURE_PAGE="\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e02\u0e2d\u0e07\u0e2b\u0e19\u0e49\u0e32\u0e40\u0e27\u0e47\u0e1a\u0e17\u0e35\u0e48\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e19\u0e35\u0e49\u0e08\u0e30\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e1c\u0e48\u0e32\u0e19\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e17\u0e35\u0e48\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e44\u0e1b\u0e22\u0e31\u0e07 Google \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";
_.G[14]=MSG_SSL_INFO_SECURE_PAGE;MSG_SSL_INFO_INTRANET_PAGE="\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e02\u0e2d\u0e07\u0e2b\u0e19\u0e49\u0e32\u0e40\u0e27\u0e47\u0e1a\u0e2d\u0e34\u0e19\u0e17\u0e23\u0e32\u0e40\u0e19\u0e47\u0e15\u0e19\u0e35\u0e49\u0e08\u0e30\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e1c\u0e48\u0e32\u0e19\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e17\u0e35\u0e48\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e44\u0e1b\u0e22\u0e31\u0e07 Google \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";
_.G[15]=MSG_SSL_INFO_INTRANET_PAGE;MSG_SELECT_LANGUAGE="\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e20\u0e32\u0e29\u0e32";_.G[16]=MSG_SELECT_LANGUAGE;MSGFUNC_TURN_OFF_TRANSLATION=function(a){return"\u0e1b\u0e34\u0e14\u0e01\u0e32\u0e23\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32"+a};_.G[17]=MSGFUNC_TURN_OFF_TRANSLATION;MSGFUNC_TURN_OFF_FOR=function(a){return"\u0e1b\u0e34\u0e14\u0e20\u0e32\u0e29\u0e32: "+a};_.G[18]=MSGFUNC_TURN_OFF_FOR;MSG_ALWAYS_HIDE_AUTO_POPUP_BANNER="\u0e0b\u0e48\u0e2d\u0e19\u0e15\u0e25\u0e2d\u0e14\u0e40\u0e27\u0e25\u0e32";
_.G[19]=MSG_ALWAYS_HIDE_AUTO_POPUP_BANNER;MSG_ORIGINAL_TEXT="\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e15\u0e49\u0e19\u0e09\u0e1a\u0e31\u0e1a:";_.G[20]=MSG_ORIGINAL_TEXT;MSG_FILL_SUGGESTION="\u0e23\u0e48\u0e27\u0e21\u0e43\u0e2b\u0e49\u0e04\u0e33\u0e41\u0e1b\u0e25\u0e17\u0e35\u0e48\u0e14\u0e35\u0e01\u0e27\u0e48\u0e32";_.G[21]=MSG_FILL_SUGGESTION;MSG_SUBMIT_SUGGESTION="\u0e23\u0e48\u0e27\u0e21\u0e43\u0e2b\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25";_.G[22]=MSG_SUBMIT_SUGGESTION;
MSG_SHOW_TRANSLATE_ALL="\u0e41\u0e1b\u0e25\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14";_.G[23]=MSG_SHOW_TRANSLATE_ALL;MSG_SHOW_RESTORE_ALL="\u0e04\u0e37\u0e19\u0e04\u0e48\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14";_.G[24]=MSG_SHOW_RESTORE_ALL;MSG_SHOW_CANCEL_ALL="\u0e22\u0e01\u0e40\u0e25\u0e34\u0e01\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14";_.G[25]=MSG_SHOW_CANCEL_ALL;MSG_TRANSLATE_TO_MY_LANGUAGE="\u0e41\u0e1b\u0e25\u0e2a\u0e48\u0e27\u0e19\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32\u0e02\u0e2d\u0e07\u0e09\u0e31\u0e19";
_.G[26]=MSG_TRANSLATE_TO_MY_LANGUAGE;MSGFUNC_TRANSLATE_EVERYTHING_TO=function(a){return"\u0e41\u0e1b\u0e25\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32"+a};_.G[27]=MSGFUNC_TRANSLATE_EVERYTHING_TO;MSG_SHOW_ORIGINAL_LANGUAGES="\u0e41\u0e2a\u0e14\u0e07\u0e20\u0e32\u0e29\u0e32\u0e15\u0e49\u0e19\u0e09\u0e1a\u0e31\u0e1a";_.G[28]=MSG_SHOW_ORIGINAL_LANGUAGES;MSG_OPTIONS="\u0e15\u0e31\u0e27\u0e40\u0e25\u0e37\u0e2d\u0e01";_.G[29]=MSG_OPTIONS;
MSG_TURN_OFF_TRANSLATION_FOR_THIS_SITE="\u0e1b\u0e34\u0e14\u0e01\u0e32\u0e23\u0e41\u0e1b\u0e25\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e44\u0e0b\u0e15\u0e4c\u0e19\u0e35\u0e49";_.G[30]=MSG_TURN_OFF_TRANSLATION_FOR_THIS_SITE;_.G[31]=null;MSG_ALT_SUGGESTION="\u0e41\u0e2a\u0e14\u0e07\u0e04\u0e33\u0e41\u0e1b\u0e25\u0e2d\u0e37\u0e48\u0e19";_.G[32]=MSG_ALT_SUGGESTION;MSG_ALT_ACTIVITY_HELPER_TEXT="\u0e04\u0e25\u0e34\u0e01\u0e17\u0e35\u0e48\u0e04\u0e33\u0e14\u0e49\u0e32\u0e19\u0e1a\u0e19\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e23\u0e31\u0e1a\u0e04\u0e33\u0e41\u0e1b\u0e25\u0e2d\u0e37\u0e48\u0e19";
_.G[33]=MSG_ALT_ACTIVITY_HELPER_TEXT;MSG_USE_ALTERNATIVES="\u0e43\u0e0a\u0e49";_.G[34]=MSG_USE_ALTERNATIVES;MSG_DRAG_TIP="\u0e25\u0e32\u0e01\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e14\u0e41\u0e1b\u0e49\u0e19 Shift \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e07\u0e43\u0e2b\u0e21\u0e48";_.G[35]=MSG_DRAG_TIP;MSG_CLICK_FOR_ALT="\u0e04\u0e25\u0e34\u0e01\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e14\u0e39\u0e04\u0e33\u0e41\u0e1b\u0e25\u0e2d\u0e37\u0e48\u0e19";_.G[36]=MSG_CLICK_FOR_ALT;
MSG_DRAG_INSTUCTIONS="\u0e01\u0e14\u0e41\u0e1b\u0e49\u0e19 Shift \u0e04\u0e49\u0e32\u0e07\u0e44\u0e27\u0e49 \u0e04\u0e25\u0e34\u0e01\u0e41\u0e25\u0e30\u0e25\u0e32\u0e01\u0e04\u0e33\u0e02\u0e36\u0e49\u0e19\u0e02\u0e49\u0e32\u0e07\u0e1a\u0e19\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e07\u0e43\u0e2b\u0e21\u0e48";_.G[37]=MSG_DRAG_INSTUCTIONS;MSG_SUGGESTION_SUBMITTED="\u0e02\u0e2d\u0e1a\u0e04\u0e38\u0e13\u0e17\u0e35\u0e48\u0e0a\u0e48\u0e27\u0e22\u0e2a\u0e48\u0e07\u0e04\u0e33\u0e41\u0e19\u0e30\u0e19\u0e33\u0e43\u0e19\u0e01\u0e32\u0e23\u0e41\u0e1b\u0e25\u0e43\u0e2b\u0e49\u0e41\u0e01\u0e48 Google \u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";
_.G[38]=MSG_SUGGESTION_SUBMITTED;MSG_MANAGE_TRANSLATION_FOR_THIS_SITE="\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e04\u0e33\u0e41\u0e1b\u0e25\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e44\u0e0b\u0e15\u0e4c\u0e19\u0e35\u0e49";_.G[39]=MSG_MANAGE_TRANSLATION_FOR_THIS_SITE;MSG_ALT_AND_CONTRIBUTE_ACTIVITY_HELPER_TEXT="\u0e04\u0e25\u0e34\u0e01\u0e17\u0e35\u0e48\u0e04\u0e33\u0e43\u0e14\u0e04\u0e33\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e14\u0e39\u0e04\u0e33\u0e41\u0e1b\u0e25\u0e2d\u0e37\u0e48\u0e19 \u0e2b\u0e23\u0e37\u0e2d\u0e14\u0e31\u0e1a\u0e40\u0e1a\u0e34\u0e25\u0e04\u0e25\u0e34\u0e01\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e01\u0e49\u0e44\u0e02\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07";
_.G[40]=MSG_ALT_AND_CONTRIBUTE_ACTIVITY_HELPER_TEXT;MSG_ORIGINAL_TEXT_NO_COLON="\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e15\u0e49\u0e19\u0e09\u0e1a\u0e31\u0e1a";_.G[41]=MSG_ORIGINAL_TEXT_NO_COLON;_.G[42]="\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";_.G[43]="\u0e41\u0e1b\u0e25";_.G[44]="\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e04\u0e38\u0e13\u0e41\u0e01\u0e49\u0e44\u0e02\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27";MSG_LANGUAGE_UNSUPPORTED="\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14: \u0e44\u0e21\u0e48\u0e2a\u0e19\u0e31\u0e1a\u0e2a\u0e19\u0e38\u0e19\u0e20\u0e32\u0e29\u0e32\u0e02\u0e2d\u0e07\u0e2b\u0e19\u0e49\u0e32\u0e40\u0e27\u0e47\u0e1a\u0e19\u0e35\u0e49";
_.G[45]=MSG_LANGUAGE_UNSUPPORTED;MSG_LANGUAGE_TRANSLATE_WIDGET="\u0e27\u0e34\u0e14\u0e40\u0e08\u0e47\u0e15\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";_.G[46]=MSG_LANGUAGE_TRANSLATE_WIDGET;MSG_RATE_THIS_TRANSLATION="\u0e43\u0e2b\u0e49\u0e04\u0e30\u0e41\u0e19\u0e19\u0e04\u0e33\u0e41\u0e1b\u0e25\u0e19\u0e35\u0e49";_.G[47]=MSG_RATE_THIS_TRANSLATION;MSG_FEEDBACK_USAGE_FOR_IMPROVEMENT="\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e04\u0e27\u0e32\u0e21\u0e04\u0e34\u0e14\u0e40\u0e2b\u0e47\u0e19\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e31\u0e1a\u0e1b\u0e23\u0e38\u0e07 Google \u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32";
_.G[48]=MSG_FEEDBACK_USAGE_FOR_IMPROVEMENT;MSG_FEEDBACK_SATISFIED_LABEL="\u0e41\u0e1b\u0e25\u0e44\u0e14\u0e49\u0e14\u0e35";_.G[49]=MSG_FEEDBACK_SATISFIED_LABEL;MSG_FEEDBACK_DISSATISFIED_LABEL="\u0e41\u0e1b\u0e25\u0e44\u0e21\u0e48\u0e14\u0e35";_.G[50]=MSG_FEEDBACK_DISSATISFIED_LABEL;MSG_TRANSLATION_NO_COLON="\u0e04\u0e33\u0e41\u0e1b\u0e25";_.G[51]=MSG_TRANSLATION_NO_COLON;
}catch(e){_._DumpException(e)}
try{
_.la("el_conf");
var lg;_._exportVersion=function(a){_.$b("google.translate.v",a)};_._getCallbackFunction=function(a){return _.Pb(a)};_._exportMessages=function(){_.$b("google.translate.m",_.G)};lg=function(a){var b=document.getElementsByTagName("head")[0];b||(b=document.body.parentNode.appendChild(document.createElement("head")));b.appendChild(a)};_._loadJs=function(a){var b=_.fd(document,"SCRIPT");b.type="text/javascript";b.charset="UTF-8";_.Ta(b,_.ub(a));lg(b)};
_._loadCss=function(a){var b=document.createElement("link");b.type="text/css";b.rel="stylesheet";b.charset="UTF-8";b.href=a;lg(b)};_._isNS=function(a){a=a.split(".");for(var b=window,c=0;c<a.length;++c)if(!(b=b[a[c]]))return!1;return!0};_._setupNS=function(a){a=a.split(".");for(var b=window,c=0;c<a.length;++c)b.hasOwnProperty?b.hasOwnProperty(a[c])?b=b[a[c]]:b=b[a[c]]={}:b=b[a[c]]||(b[a[c]]={});return b};_.$b("_exportVersion",_._exportVersion);_.$b("_getCallbackFunction",_._getCallbackFunction);
_.$b("_exportMessages",_._exportMessages);_.$b("_loadJs",_._loadJs);_.$b("_loadCss",_._loadCss);_.$b("_isNS",_._isNS);_.$b("_setupNS",_._setupNS);window.addEventListener&&typeof document.readyState=="undefined"&&window.addEventListener("DOMContentLoaded",function(){document.readyState="complete"},!1);
_.na();
}catch(e){_._DumpException(e)}
}).call(this,this.default_tr);
// Google Inc.

//# sourceURL=/_/translate_http/_/js/k=translate_http.tr.th.d8Aip2TmILY.O/am=gMA/d=1/rs=AN8SPfpVzlb_86P8VBMU5syF4ogbz8LkSg/m=el_conf
    // Configure Constants
    (function(){
      let gtConstEvalStartTime = new Date();
      if (_isNS('google.translate.Element')){return}

      (function(){
        const c=_setupNS('google.translate._const');

        c._cest = gtConstEvalStartTime;
        gtConstEvalStartTime = undefined; // hide this eval start time constant
  c._cl='th'; c._cuc='gtElInit'; c._cef='\x5b0,1,0\x5d'; c._cac='wt_srp'; c._cam='lib'; c._cenv='prod'; c._cll='INFO'; c._ctkk='488227.1916821227'; const h='translate.googleapis.com'; const oph='translate-pa.googleapis.com'; const s='https'+'://'; c._pah=h; c._pas=s; const b=s+'translate.googleapis.com'; const staticPath = '/translate_static/'; c._pci=b+staticPath+'img/te_ctrl3.gif'; c._pmi=b+staticPath+'img/mini_google.png'; c._pbi=b+staticPath+'img/te_bk.gif'; c._pli=b+staticPath+'img/loading.gif'; c._ps='https:\/\/www.gstatic.com\/_\/translate_http\/_\/ss\/k\x3dtranslate_http.tr.-q5RMtA6wjE.L.X.O\/am\x3dgMA\/d\x3d0\/rs\x3dAN8SPfqtQ_D_EH9SdWnMTx6DoLO-0hN4Hw\/m\x3del_main_css'; c._plla=oph+'\/v1\/supportedLanguages'; c._puh='translate.google.com';c._cnal={};_loadCss(c._ps); _loadJs('https:\/\/translate.googleapis.com\/_\/translate_http\/_\/js\/k\x3dtranslate_http.tr.th.d8Aip2TmILY.O\/am\x3dAAAE\/d\x3d1\/exm\x3del_conf\/ed\x3d1\/rs\x3dAN8SPfpPD8Yea5-7PrqcHhw1TyX1zJo7Iw\/m\x3del_main');_exportMessages(); _exportVersion('TE_20250910');
        })();
      })();
  </script>
 </body>
</html>