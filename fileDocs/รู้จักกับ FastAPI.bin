<!DOCTYPE html><html lang="th"> <head><script data-cfasync="false">
			const theme =
				localStorage.getItem("theme") ??
				(window.matchMedia("(prefers-color-scheme: light)").matches ? "light" : "dark");
			document.documentElement.classList.toggle("dark", theme === "dark");
			document.documentElement.setAttribute("data-theme", theme);
		</script><!-- Google tag (gtag.js) --><script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-FWSW6MT40S"></script><script type="text/partytown" async>
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				window.dataLayer.push(arguments);
			}
			gtag("js", new Date());
			gtag("config", "G-FWSW6MT40S");
		</script><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no"><meta http-equiv="X-UA-Compatible" content="IE=edge"><title>รู้จักกับ FastAPI • Mikelopster</title><link rel="icon" href="/favicon.ico" sizes="any"><link rel="apple-touch-icon" href="/apple-touch-icon.png"><link rel="manifest" href="/manifest.webmanifest"><link rel="canonical" href="https://mikelopster.dev/posts/fastapi-basic/"><meta name="title" content="รู้จักกับ FastAPI • Mikelopster"><meta name="description" content="มาทำความรู้จักกับ FastAPI Framework สำหรับการทำ API ด้วยภาษา Python กัน"><meta name="author" content="mikelopster"><meta name="theme-color" content=""><meta property="og:type" content="article"><meta property="og:title" content="รู้จักกับ FastAPI"><meta property="og:description" content="มาทำความรู้จักกับ FastAPI Framework สำหรับการทำ API ด้วยภาษา Python กัน"><meta property="og:url" content="https://mikelopster.dev/posts/fastapi-basic/"><meta property="og:site_name" content="Mikelopster"><meta property="og:locale" content="th_TH"><meta property="og:image" content="/img/thumbnail-blogs/fastapi-basic.webp"><meta property="og:image:width" content="1200"><meta property="og:image:height" content="630"><meta property="article:author" content="mikelopster"><meta property="article:published_time" content="2024-09-04T00:00:00.000Z"><meta property="twitter:card" content="summary_large_image"><meta property="twitter:url" content="https://mikelopster.dev/posts/fastapi-basic/"><meta property="twitter:title" content="รู้จักกับ FastAPI"><meta property="twitter:description" content="มาทำความรู้จักกับ FastAPI Framework สำหรับการทำ API ด้วยภาษา Python กัน"><meta property="twitter:image" content="/img/thumbnail-blogs/fastapi-basic.webp"><link rel="sitemap" href="/sitemap-index.xml"><link rel="alternate" type="application/rss+xml" title="Mikelopster" href="/rss.xml"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.15.1/dist/katex.css" integrity="sha384-WsHMgfkABRyG494OmuiNmkAOk8nhO1qE+Y6wns6v+EoNoTNxrWxYpl5ZYWFOLPCM" crossorigin="anonymous"><meta name="generator" content="Astro v5.7.13"><link rel="stylesheet" href="/_astro/_slug_.BbRHCShr.css">
<style>svg[data-astro-cid-6mwf65d6]:hover{fill:#ea4335}a[data-astro-cid-6mwf65d6]{margin-right:10px}svg[data-astro-cid-nksckkzh]:hover{fill:#1877f2}a[data-astro-cid-nksckkzh]{margin-right:10px}svg[data-astro-cid-upxiorz7]:hover{fill:#f0652f}a[data-astro-cid-upxiorz7]{margin-right:10px}svg[data-astro-cid-lja7htzy]:hover{fill:#0a66c2}a[data-astro-cid-lja7htzy]{margin-right:10px}svg[data-astro-cid-qrrmiaqu]:hover{fill:#ff4500}a[data-astro-cid-qrrmiaqu]{margin-right:10px}svg[data-astro-cid-a232q27d]:hover{fill:#000}a[data-astro-cid-a232q27d]{margin-right:10px}
</style><script type="cf1e3cc9d8860513cd1ab917-module" src="/_astro/page.V2R8AmkL.js"></script>
<script type="cf1e3cc9d8860513cd1ab917-text/javascript">!(function(w,p,f,c){if(!window.crossOriginIsolated && !navigator.serviceWorker) return;c=w[p]=Object.assign(w[p]||{},{"lib":"/~partytown/","debug":false});c[f]=(c[f]||[]).concat(["dataLayer.push"])})(window,'partytown','forward');/* Partytown 0.11.0 - MIT QwikDev */
const t={preserveBehavior:!1},e=e=>{if("string"==typeof e)return[e,t];const[n,r=t]=e;return[n,{...t,...r}]},n=Object.freeze((t=>{const e=new Set;let n=[];do{Object.getOwnPropertyNames(n).forEach((t=>{"function"==typeof n[t]&&e.add(t)}))}while((n=Object.getPrototypeOf(n))!==Object.prototype);return Array.from(e)})());!function(t,r,o,i,a,s,c,l,d,p,u=t,f){function h(){f||(f=1,"/"==(c=(s.lib||"/~partytown/")+(s.debug?"debug/":""))[0]&&(d=r.querySelectorAll('script[type="text/partytown"]'),i!=t?i.dispatchEvent(new CustomEvent("pt1",{detail:t})):(l=setTimeout(v,(null==s?void 0:s.fallbackTimeout)||1e4),r.addEventListener("pt0",w),a?y(1):o.serviceWorker?o.serviceWorker.register(c+(s.swPath||"partytown-sw.js"),{scope:c}).then((function(t){t.active?y():t.installing&&t.installing.addEventListener("statechange",(function(t){"activated"==t.target.state&&y()}))}),console.error):v())))}function y(e){p=r.createElement(e?"script":"iframe"),t._pttab=Date.now(),e||(p.style.display="block",p.style.width="0",p.style.height="0",p.style.border="0",p.style.visibility="hidden",p.setAttribute("aria-hidden",!0)),p.src=c+"partytown-"+(e?"atomics.js?v=0.11.0":"sandbox-sw.html?"+t._pttab),r.querySelector(s.sandboxParent||"body").appendChild(p)}function v(n,o){for(w(),i==t&&(s.forward||[]).map((function(n){const[r]=e(n);delete t[r.split(".")[0]]})),n=0;n<d.length;n++)(o=r.createElement("script")).innerHTML=d[n].innerHTML,o.nonce=s.nonce,r.head.appendChild(o);p&&p.parentNode.removeChild(p)}function w(){clearTimeout(l)}s=t.partytown||{},i==t&&(s.forward||[]).map((function(r){const[o,{preserveBehavior:i}]=e(r);u=t,o.split(".").map((function(e,r,o){var a;u=u[o[r]]=r+1<o.length?u[o[r]]||(a=o[r+1],n.includes(a)?[]:{}):(()=>{let e=null;if(i){const{methodOrProperty:n,thisObject:r}=((t,e)=>{let n=t;for(let t=0;t<e.length-1;t+=1)n=n[e[t]];return{thisObject:n,methodOrProperty:e.length>0?n[e[e.length-1]]:void 0}})(t,o);"function"==typeof n&&(e=(...t)=>n.apply(r,...t))}return function(){let n;return e&&(n=e(arguments)),(t._ptf=t._ptf||[]).push(o,arguments),n}})()}))})),"complete"==r.readyState?h():(t.addEventListener("DOMContentLoaded",h),t.addEventListener("load",h))}(window,document,navigator,top,window.crossOriginIsolated);;(e=>{e.addEventListener("astro:before-swap",e=>{let r=document.body.querySelector("iframe[src*='/~partytown/']");if(r)e.newDocument.body.append(r)})})(document);</script></head> <body> <script data-cfasync="false">
	function setGiscusTheme(newTheme) {
		const iframe = document.querySelector("iframe.giscus-frame");
		if (!iframe) return;
		iframe.contentWindow.postMessage(
			{
				giscus: {
					setConfig: {
						theme: newTheme,
					},
				},
			},
			"https://giscus.app"
		);
	}

	function getGithubWidgetbox(newTheme) {
		const widgetbox = document.getElementById("github-widgetbox");
		if (!widgetbox) return;
		widgetbox.src = `https://github-widgetbox.vercel.app/api/profile?username=mikelopster&data=followers,repositories,stars,commits&theme=${newTheme}`;
	}

	function getUserPref() {
		const storedTheme = typeof localStorage !== "undefined" && localStorage.getItem("theme");
		return (
			storedTheme || (window.matchMedia("(prefers-color-scheme: light)").matches ? "light" : "dark")
		);
	}

	function setTheme(newTheme) {
		if (!newTheme || (newTheme !== "light" && newTheme !== "dark")) {
			return console.warn(
				`Incorrect theme value received. Expected 'light' or 'dark', received ${newTheme}`
			);
		}

		const root = document.documentElement;

		// class already set to newTheme, exit early
		if (
			(newTheme === "dark" && root.classList.contains("dark")) ||
			(newTheme === "light" && !root.classList.contains("dark"))
		) {
			return;
		}

		root.setAttribute("data-theme", newTheme);
		root.classList.toggle("dark", newTheme === "dark");

		const colorThemeMetaTag = document.querySelector("meta[name='theme-color']");
		const bgColour = getComputedStyle(document.body).getPropertyValue("--theme-bg");

		colorThemeMetaTag.setAttribute("content", `hsl(${bgColour})`);
		if (typeof localStorage !== "undefined") {
			localStorage.setItem("theme", newTheme);
		}
		setGiscusTheme(newTheme);
		getGithubWidgetbox(newTheme);
	}

	setTheme(getUserPref());

	// listen for theme-change custom event, fired in src/components/ThemeToggle.astro
	document.addEventListener("theme-change", (e) => {
		setTheme(e.detail.theme);
	});
</script> <header id="main-header" class="group relative mb-4 flex items-center"> <div class="flex sm:flex-col"> <div class="flex items-center"> <a href="/"> <img src="/mikelopster.webp" class="m-2 h-8 w-8 rounded-full sm:h-20 sm:w-20" alt="mikelopster" decoding="async" loading="lazy"> </a> <div> <div class="flex items-center gap-2"> <span class="hidden text-base font-bold sm:block sm:text-xl md:text-2xl">
mikelopster</span> <a href="https://webring.wonderful.software#mikelopster.dev" title="วงแหวนเว็บ"> <img class="w-8" alt="วงแหวนเว็บ" src="https://webring.wonderful.software/webring.svg" decoding="async" loading="lazy"> </a> </div> <nav id="navigation-menu" class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-dashed sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none" aria-label="Main menu"> <a href="/" class="px-4 py-4 sm:py-0 sm:hover:underline" aria-current="false" data-astro-prefetch> Home </a><a href="/posts/" class="px-4 py-4 sm:py-0 sm:hover:underline" aria-current="false" data-astro-prefetch> Posts </a><a href="https://docs.mikelopster.dev" class="px-4 py-4 sm:py-0 sm:hover:underline" aria-current="false" data-astro-prefetch> Docs </a><a href="/resources/" class="px-4 py-4 sm:py-0 sm:hover:underline" aria-current="false" data-astro-prefetch> Resources </a> </nav> </div> </div> </div> <site-search id="search" class="ms-auto" data-astro-cid-otpdt6jm="true"> <button data-open-modal disabled class="flex h-9 w-9 items-center justify-center rounded-md ring-zinc-400 transition-all hover:ring-2" data-astro-cid-otpdt6jm> <svg aria-label="search" class="h-7 w-7" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" data-astro-cid-otpdt6jm> <path stroke="none" d="M0 0h24v24H0z" data-astro-cid-otpdt6jm></path> <path d="M3 10a7 7 0 1 0 14 0 7 7 0 1 0-14 0M21 21l-6-6" data-astro-cid-otpdt6jm></path> </svg> </button> <dialog aria-label="search" class="h-full max-h-full w-full max-w-full border border-zinc-400 bg-bgColor shadow backdrop:backdrop-blur sm:mx-auto sm:mb-auto sm:mt-16 sm:h-max sm:max-h-[calc(100%-8rem)] sm:min-h-[15rem] sm:w-5/6 sm:max-w-[48rem] sm:rounded-md" data-astro-cid-otpdt6jm> <div class="dialog-frame flex flex-col gap-4 p-6 pt-12 sm:pt-6" data-astro-cid-otpdt6jm> <button data-close-modal class="ms-auto cursor-pointer rounded-md bg-zinc-200 p-2 font-semibold dark:bg-zinc-700" data-astro-cid-otpdt6jm>Close</button> <div class="search-container" data-astro-cid-otpdt6jm> <div id="cactus__search" data-astro-cid-otpdt6jm></div> </div> </div> </dialog> </site-search> <script type="cf1e3cc9d8860513cd1ab917-module" src="/_astro/Search.astro_astro_type_script_index_0_lang.7HjqBCD7.js"></script>   <theme-toggle class="ms-2 sm:ms-4"> <button class="relative h-9 w-9 rounded-md p-2 ring-zinc-400 transition-all hover:ring-2" type="button"> <span class="sr-only">Dark Theme</span> <svg aria-hidden="true" class="absolute start-1/2 top-1/2 h-7 w-7 -translate-x-1/2 -translate-y-1/2 scale-100 opacity-100 transition-all dark:scale-0 dark:opacity-0" fill="none" focusable="false" id="sun-svg" stroke-width="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path d="M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M22 12L23 12" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M12 2V1" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M12 23V22" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M20 20L19 19" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M20 4L19 5" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M4 20L5 19" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M4 4L5 5" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M1 12L2 12" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path> </svg> <svg aria-hidden="true" class="absolute start-1/2 top-1/2 h-7 w-7 -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all dark:scale-100 dark:opacity-100" fill="none" focusable="false" id="moon-svg" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path d="M0 0h24v24H0z" fill="none" stroke="none"></path> <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"></path> <path d="M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2"></path> <path d="M19 11h2m-1 -1v2"></path> </svg> </button> </theme-toggle> <script type="cf1e3cc9d8860513cd1ab917-module" src="/_astro/ThemeToggle.astro_astro_type_script_index_0_lang.DRNQMyF3.js"></script> <mobile-button> <button id="toggle-navigation-menu" class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden" type="button" aria-label="Open main menu" aria-expanded="false" aria-haspopup="menu"> <svg id="line-svg" class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9h16.5m-16.5 6.75h16.5"></path> </svg> <svg id="cross-svg" class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100" class="text-accent" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> </mobile-button> </header> <script type="cf1e3cc9d8860513cd1ab917-module" src="/_astro/Header.astro_astro_type_script_index_0_lang.DcNQI66r.js"></script> <main id="main">  <div class="gap-x-10 lg:flex lg:items-start"> <aside class="sticky top-20 order-2 -me-32 hidden basis-64 lg:block lg:h-[calc(100vh-5rem)] lg:overflow-y-auto"> <h2 class="font-semibold">Table of Contents</h2> <ul class="mt-4 text-xs"> <li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#fastapi-คืออะไร" data-heading-link aria-label="Scroll to section: FastAPI คืออะไร"><span class="me-0.5">#</span>FastAPI คืออะไร</a> <ul> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#จุดเด่นของ-fastapi" data-heading-link aria-label="Scroll to section: จุดเด่นของ FastAPI"><span class="me-0.5">#</span>จุดเด่นของ FastAPI</a>  </li>  </ul> </li> <script type="cf1e3cc9d8860513cd1ab917-module">document.addEventListener("DOMContentLoaded",()=>{const u={root:null,rootMargin:"-20% 0px -35% 0px",threshold:0},c=document.querySelectorAll("h1[id], h2[id], h3[id], h4[id], h5[id], h6[id]"),a=document.querySelectorAll("[data-heading-link]"),r=Array.from(c);let i=null,d=window.scrollY;const f=new IntersectionObserver(t=>{const o=window.scrollY,n=o>d;d=o,t.forEach(e=>{const h=r.indexOf(e.target);e.isIntersecting&&e.intersectionRatio>0?i=e.target:i===e.target&&(n?i=e.target:h>0?i=r[h-1]:i=null),a.forEach(s=>{i&&s.getAttribute("href")===`#${i.id}`?s.setAttribute("data-active",""):s.removeAttribute("data-active")})})},u);c.forEach(t=>f.observe(t));const l=()=>{const t=window.innerHeight,o=r.find(n=>{const e=n.getBoundingClientRect();return e.top>=-t*.2&&e.bottom<=t*.65});o&&a.forEach(n=>{n.getAttribute("href")===`#${o.id}`?n.setAttribute("data-active",""):n.removeAttribute("data-active")})};if(window.location.hash){const t=decodeURIComponent(window.location.hash),o=document.querySelector(t);o&&(o.scrollIntoView({behavior:"smooth"}),setTimeout(l,100))}else l()});</script><li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#มาเริ่มต้นกับ-fastapi-กัน" data-heading-link aria-label="Scroll to section: มาเริ่มต้นกับ FastAPI กัน"><span class="me-0.5">#</span>มาเริ่มต้นกับ FastAPI กัน</a>  </li> <li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#ตัวอย่าง-crud" data-heading-link aria-label="Scroll to section: ตัวอย่าง CRUD"><span class="me-0.5">#</span>ตัวอย่าง CRUD</a> <ul> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#1-get" data-heading-link aria-label="Scroll to section: 1. GET"><span class="me-0.5">#</span>1. GET</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#2-post" data-heading-link aria-label="Scroll to section: 2. POST"><span class="me-0.5">#</span>2. POST</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#3-put" data-heading-link aria-label="Scroll to section: 3. PUT"><span class="me-0.5">#</span>3. PUT</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#4-delete" data-heading-link aria-label="Scroll to section: 4. DELETE"><span class="me-0.5">#</span>4. DELETE</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#5-patch" data-heading-link aria-label="Scroll to section: 5. PATCH"><span class="me-0.5">#</span>5. PATCH</a>  </li>  </ul> </li> <li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#เพิ่ม-database-เข้าไป" data-heading-link aria-label="Scroll to section: เพิ่ม Database เข้าไป"><span class="me-0.5">#</span>เพิ่ม Database เข้าไป</a> <ul> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#step-1--database-orm-config" data-heading-link aria-label="Scroll to section: Step 1 = Database ORM Config"><span class="me-0.5">#</span>Step 1 = Database ORM Config</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#step-2-สร้าง-database-model-sqlalchemy-model" data-heading-link aria-label="Scroll to section: Step 2: สร้าง Database model (SQLAlchemy Model)"><span class="me-0.5">#</span>Step 2: สร้าง Database model (SQLAlchemy Model)</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#step-3-สร้าง-pydantic-model" data-heading-link aria-label="Scroll to section: Step 3: สร้าง Pydantic model"><span class="me-0.5">#</span>Step 3: สร้าง Pydantic model</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#step-4-ประยุกต์ใช้กับ-crud-service" data-heading-link aria-label="Scroll to section: Step 4: ประยุกต์ใช้กับ CRUD Service"><span class="me-0.5">#</span>Step 4: ประยุกต์ใช้กับ CRUD Service</a>  </li>  </ul> </li> <li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#การจัดการ-install-package-วิธีอื่นๆ" data-heading-link aria-label="Scroll to section: การจัดการ install package วิธีอื่นๆ"><span class="me-0.5">#</span>การจัดการ install package วิธีอื่นๆ</a>  </li> <li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#อ่าน-env" data-heading-link aria-label="Scroll to section: อ่าน .ENV"><span class="me-0.5">#</span>อ่าน .ENV</a>  </li> <li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#deploy-ที่ไหนได้บ้าง" data-heading-link aria-label="Scroll to section: Deploy ที่ไหนได้บ้าง"><span class="me-0.5">#</span>Deploy ที่ไหนได้บ้าง</a> <ul> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#1-การ-deploy-แบบ-manual" data-heading-link aria-label="Scroll to section: 1. การ Deploy แบบ Manual"><span class="me-0.5">#</span>1. การ Deploy แบบ Manual</a>  </li> <li class="ms-2"> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-2 text-[0.6875rem]" href="#2-การ-deploy-ด้วย-docker" data-heading-link aria-label="Scroll to section: 2. การ Deploy ด้วย Docker"><span class="me-0.5">#</span>2. การ Deploy ด้วย Docker</a>  </li>  </ul> </li> <li class> <a class="block line-clamp-2 hover:text-accent data-[active]:text-accent data-[active]:font-medium mt-3" href="#สรุป" data-heading-link aria-label="Scroll to section: สรุป"><span class="me-0.5">#</span>สรุป</a>  </li>  </ul> </aside> <article class="flex-grow break-words" data-pagefind-body> <div id="blog-hero"><h1 class="title mb-3 sm:mb-1"> รู้จักกับ FastAPI </h1> <div class="flex flex-wrap items-center gap-x-3 gap-y-2"> <p class="font-semibold"> <time datetime="2024-09-04T00:00:00.000Z"> 4 กันยายน 2567 </time> /  15 min read </p>  </div> <div class="mt-2"> <div class="flex gap-2"> <a href="https://youtu.be/hYwjGLVGc3w" target="_blank" rel="noopener noreferrer"> <span class="inline-flex w-fit items-center gap-1.5 rounded-md bg-red-100 px-2 py-1 text-sm text-red-700 dark:bg-red-900/30 dark:text-red-500"> <svg width="1em" height="1em" viewBox="0 0 24 24" class="text-base" data-icon="mdi:youtube">  <use  xlink:href="#ai:mdi:youtube"></use>  </svg> <span class="items-center leading-none">มี Video</span> </span> </a>   </div> </div> <div class="prose-tag mt-3"> <svg aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" class="me-1 inline-block h-6 w-6" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"> <path stroke="none" d="M0 0h24v24H0z" fill="none"></path> <path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z"></path> <path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116"></path> <path d="M6 9h-.01"></path> </svg>  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag python" href="/tags/python/" data-pagefind-filter="tag"> python </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag api" href="/tags/api/" data-pagefind-filter="tag"> api </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag fastapi" href="/tags/fastapi/" data-pagefind-filter="tag"> fastapi </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag starlette" href="/tags/starlette/" data-pagefind-filter="tag"> starlette </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag pydantic" href="/tags/pydantic/" data-pagefind-filter="tag"> pydantic </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag rest api" href="/tags/rest api/" data-pagefind-filter="tag"> rest api </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag crud" href="/tags/crud/" data-pagefind-filter="tag"> crud </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag sqlalchemy" href="/tags/sqlalchemy/" data-pagefind-filter="tag"> sqlalchemy </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag orm" href="/tags/orm/" data-pagefind-filter="tag"> orm </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag database" href="/tags/database/" data-pagefind-filter="tag"> database </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag deployment" href="/tags/deployment/" data-pagefind-filter="tag"> deployment </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag docker" href="/tags/docker/" data-pagefind-filter="tag"> docker </a> ,  <a class="cactus-link inline-block before:-mr-1 before:content-['#']" aria-label="View more blogs with the tag python-kit" href="/tags/python-kit/" data-pagefind-filter="tag"> python-kit </a>  </div></div> <div class="my-7 flex flex-wrap items-center gap-x-4 border px-4 py-2"> <p>Share on social media</p><div class="flex flex-1 items-center gap-x-2"><a class="social-share-btn" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https://mikelopster.dev/posts/fastapi-basic/" rel="noopener noreferrer" data-astro-cid-nksckkzh> <svg width="1em" height="1em" viewBox="0 0 24 24" class="h-9 w-9 p-1 text-black" aria-hidden="true" focusable="false" data-icon="mdi:facebook">  <symbol id="ai:mdi:facebook"><path fill="currentColor" d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02"/></symbol><use  xlink:href="#ai:mdi:facebook"></use>  </svg> </a><a class="social-share-btn" target="_blank" href="https://twitter.com/intent/tweet?url=https://mikelopster.dev/posts/fastapi-basic/&text=มาทำความรู้จักกับ FastAPI Framework สำหรับการทำ API ด้วยภาษา Python กัน" rel="noopener noreferrer" data-astro-cid-a232q27d> <svg width="1em" height="1em" viewBox="0 0 24 24" class="h-9 w-9 p-1 text-black" aria-hidden="true" focusable="false" data-icon="mdi:twitter">  <symbol id="ai:mdi:twitter"><path fill="currentColor" d="M22.46 6c-.77.35-1.6.58-2.46.69c.88-.53 1.56-1.37 1.88-2.38c-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29c0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15c0 1.49.75 2.81 1.91 3.56c-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07a4.28 4.28 0 0 0 4 2.98a8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21C16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56c.84-.6 1.56-1.36 2.14-2.23"/></symbol><use  xlink:href="#ai:mdi:twitter"></use>  </svg> </a></div> </div> <div class="prose prose-sm prose-cactus mt-12 prose-headings:font-semibold prose-headings:text-accent-2 prose-headings:before:absolute prose-headings:before:-ms-4 prose-headings:before:text-accent prose-headings:before:content-['#'] prose-th:before:content-none">  <div> <aside class="block rounded-md bg-white lg:hidden"> <div id="toc-menu-button" class="flex cursor-pointer items-center justify-between p-4"> <div class="text-xl font-semibold">Table of Contents</div> <svg width="1em" height="1em" viewBox="0 0 24 24" class="h-6 w-6" aria-hidden="true" focusable="false" data-icon="mdi:chevron-down">  <symbol id="ai:mdi:chevron-down"><path fill="currentColor" d="M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6l-6-6z"/></symbol><use  xlink:href="#ai:mdi:chevron-down"></use>  </svg> </div> <ul id="toc-menu-mobile" class="m-0 hidden list-none border-t px-0 pb-2"> <li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#fastapi-คืออะไร" aria-label="Scroll to section: FastAPI คืออะไร"><span class="me-0.5">#</span>FastAPI คืออะไร</a> <ul class="list-none px-0"> <li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#จุดเด่นของ-fastapi" aria-label="Scroll to section: จุดเด่นของ FastAPI"><span class="me-0.5">#</span>จุดเด่นของ FastAPI</a>  </li> </ul> </li><li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#มาเริ่มต้นกับ-fastapi-กัน" aria-label="Scroll to section: มาเริ่มต้นกับ FastAPI กัน"><span class="me-0.5">#</span>มาเริ่มต้นกับ FastAPI กัน</a>  </li><li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#ตัวอย่าง-crud" aria-label="Scroll to section: ตัวอย่าง CRUD"><span class="me-0.5">#</span>ตัวอย่าง CRUD</a> <ul class="list-none px-0"> <li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#1-get" aria-label="Scroll to section: 1. GET"><span class="me-0.5">#</span>1. GET</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#2-post" aria-label="Scroll to section: 2. POST"><span class="me-0.5">#</span>2. POST</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#3-put" aria-label="Scroll to section: 3. PUT"><span class="me-0.5">#</span>3. PUT</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#4-delete" aria-label="Scroll to section: 4. DELETE"><span class="me-0.5">#</span>4. DELETE</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#5-patch" aria-label="Scroll to section: 5. PATCH"><span class="me-0.5">#</span>5. PATCH</a>  </li> </ul> </li><li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#เพิ่ม-database-เข้าไป" aria-label="Scroll to section: เพิ่ม Database เข้าไป"><span class="me-0.5">#</span>เพิ่ม Database เข้าไป</a> <ul class="list-none px-0"> <li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#step-1--database-orm-config" aria-label="Scroll to section: Step 1 = Database ORM Config"><span class="me-0.5">#</span>Step 1 = Database ORM Config</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#step-2-สร้าง-database-model-sqlalchemy-model" aria-label="Scroll to section: Step 2: สร้าง Database model (SQLAlchemy Model)"><span class="me-0.5">#</span>Step 2: สร้าง Database model (SQLAlchemy Model)</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#step-3-สร้าง-pydantic-model" aria-label="Scroll to section: Step 3: สร้าง Pydantic model"><span class="me-0.5">#</span>Step 3: สร้าง Pydantic model</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#step-4-ประยุกต์ใช้กับ-crud-service" aria-label="Scroll to section: Step 4: ประยุกต์ใช้กับ CRUD Service"><span class="me-0.5">#</span>Step 4: ประยุกต์ใช้กับ CRUD Service</a>  </li> </ul> </li><li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#การจัดการ-install-package-วิธีอื่นๆ" aria-label="Scroll to section: การจัดการ install package วิธีอื่นๆ"><span class="me-0.5">#</span>การจัดการ install package วิธีอื่นๆ</a>  </li><li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#อ่าน-env" aria-label="Scroll to section: อ่าน .ENV"><span class="me-0.5">#</span>อ่าน .ENV</a>  </li><li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#deploy-ที่ไหนได้บ้าง" aria-label="Scroll to section: Deploy ที่ไหนได้บ้าง"><span class="me-0.5">#</span>Deploy ที่ไหนได้บ้าง</a> <ul class="list-none px-0"> <li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#1-การ-deploy-แบบ-manual" aria-label="Scroll to section: 1. การ Deploy แบบ Manual"><span class="me-0.5">#</span>1. การ Deploy แบบ Manual</a>  </li><li class="ms-2 ml-2"> <a class="block bg-none text-black hover:text-accent mt-2" href="#2-การ-deploy-ด้วย-docker" aria-label="Scroll to section: 2. การ Deploy ด้วย Docker"><span class="me-0.5">#</span>2. การ Deploy ด้วย Docker</a>  </li> </ul> </li><li class=" ml-2"> <a class="block bg-none text-black hover:text-accent mt-3" href="#สรุป" aria-label="Scroll to section: สรุป"><span class="me-0.5">#</span>สรุป</a>  </li> </ul> </aside> <script type="cf1e3cc9d8860513cd1ab917-module">const t=document.getElementById("toc-menu-button"),e=document.getElementById("toc-menu-mobile");t.addEventListener("click",()=>{e.classList.toggle("hidden")});</script> </div> <p><a href="https://youtu.be/hYwjGLVGc3w" rel="nofollow, noopener, noreferrer" target="_blank"><img src="https://img.youtube.com/vi/hYwjGLVGc3w/maxresdefault.jpg" alt="fastapi-python"></a>
สามารถดู video ของหัวข้อนี้ก่อนได้ <a href="https://youtu.be/hYwjGLVGc3w" rel="nofollow, noopener, noreferrer" target="_blank">ดู video</a></p>
<h2 id="fastapi-คืออะไร">FastAPI คืออะไร</h2>
<p><a href="https://fastapi.tiangolo.com/" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/</a></p>
<p><strong>FastAPI</strong> เป็น Framework ที่ใช้สำหรับการพัฒนา web application ด้วย Python โดยเน้นไปที่การสร้าง API ที่ “รวดเร็ว” ปลอดภัย และมีประสิทธิภาพสูง โดย FastAPI ถูกออกแบบมาให้ใช้ “งานง่าย” มีความยืดหยุ่นสูง และสามารถประยุกต์ใช้กับ project ขนาดใหญ่ได้</p>
<h3 id="จุดเด่นของ-fastapi">จุดเด่นของ FastAPI</h3>
<ol>
<li><strong>ประสิทธิภาพสูง</strong>: FastAPI มีประสิทธิภาพสูงและเร็วมากเนื่องจากถูกพัฒนาขึ้นโดยใช้ Starlette และ Pydantic ซึ่งทำให้สามารถจัดการกับการร้องขอหลาย ๆ คำขอพร้อมกันได้อย่างมีประสิทธิภาพ</li>
<li><strong>รองรับ Asynchronous</strong>: FastAPI รองรับการเขียนโค้ดแบบ asynchronous ซึ่งทำให้สามารถจัดการกับ I/O-bound tasks ได้ดีกว่า และเพิ่มประสิทธิภาพของระบบในการประมวลผลงานที่ใช้เวลาในการรอการตอบสนอง</li>
<li><strong>ตรวจสอบข้อมูลอัตโนมัติ</strong>: FastAPI มีระบบตรวจสอบข้อมูลอัตโนมัติจากโครงสร้างข้อมูลที่กำหนดใน Pydantic ซึ่งทำให้การตรวจสอบความถูกต้องของข้อมูลเป็นเรื่องง่ายและปลอดภัย</li>
<li><strong>เอกสาร API อัตโนมัติ</strong>: เมื่อสร้าง API ด้วย FastAPI จะมีการสร้างเอกสาร API (Swagger UI และ Redoc) อัตโนมัติ โดยไม่ต้องทำอะไรเพิ่มเติม ซึ่งช่วยให้การทดสอบและการพัฒนา API ง่ายขึ้นมาก</li>
<li><strong>รองรับ OpenAPI และ JSON Schema</strong>: FastAPI สร้างและตรวจสอบข้อมูลตามมาตรฐาน OpenAPI และ JSON Schema ซึ่งช่วยให้ API ของคุณสามารถทำงานร่วมกับเครื่องมือและบริการอื่น ๆ ที่รองรับมาตรฐานนี้ได้อย่างราบรื่น</li>
<li><strong>พัฒนารวดเร็ว</strong>: FastAPI ออกแบบมาให้ใช้เวลาในการพัฒนาน้อยลง มีการใช้ Type Hints ของ Python เพื่อเพิ่มความชัดเจนของโค้ด และลดข้อผิดพลาดที่อาจเกิดขึ้นในระหว่างการพัฒนา</li>
</ol>
<p>เพิ่มเติม library ที่ FastAPI ใช้ Starlette และ Pydantic</p>
<ul>
<li>Starlette (<a href="https://www.starlette.io/" rel="nofollow, noopener, noreferrer" target="_blank">https://www.starlette.io/</a>) เป็น library ที่เน้นการสร้าง web application ที่มีประสิทธิภาพสูงและสามารถจัดการกับงานที่ต้องใช้การประมวลผลแบบ asynchronous ได้ดี เป็น ASGI (Asynchronous Server Gateway Interface) framework ที่ใช้ในการสร้าง backend services ขนาดเล็กหรือ microservices รวมถึง API ที่มีการทำงานที่เร็วและเบา โดยคุณสมบัติเด่นของ Starlette คือ:
<ul>
<li><strong>การจัดการกับ asynchronous tasks</strong>: Starlette ถูกออกแบบมาให้รองรับ asynchronous I/O โดยใช้ asyncio ของ Python ทำให้สามารถจัดการกับคำขอที่เข้ามาพร้อมกันหลาย ๆ คำขอได้อย่างมีประสิทธิภาพ</li>
<li><strong>Routing</strong>: Starlette มีระบบการกำหนดเส้นทาง (routing) ที่ยืดหยุ่นและง่ายต่อการใช้งาน</li>
<li><strong>Middleware</strong>: รองรับการเพิ่ม middleware ซึ่งช่วยให้สามารถปรับแต่งการทำงานของแอปพลิเคชันได้ง่าย</li>
<li><strong>Session และ Cookie</strong>: มีระบบจัดการ session และ cookie ในตัวที่สามารถใช้งานได้ทันที</li>
</ul>
</li>
<li><strong>Pydantic (<a href="https://docs.pydantic.dev/latest/" rel="nofollow, noopener, noreferrer" target="_blank">https://docs.pydantic.dev/latest/</a>)</strong> เป็น library สำหรับการตรวจสอบและจัดการข้อมูลใน Python โดยเน้นไปที่การทำงานกับโครงสร้างข้อมูลที่มีความซับซ้อน และมีคุณสมบัติที่สำคัญดังนี้:
<ul>
<li><strong>การตรวจสอบข้อมูลอัตโนมัติ</strong>: Pydantic ใช้ type hints ของ Python ในการตรวจสอบความถูกต้องของข้อมูล (data validation) โดยอัตโนมัติ เช่น การตรวจสอบชนิดของข้อมูล ความยาวของข้อมูล เป็นต้น</li>
<li><strong>การแปลงข้อมูลอัตโนมัติ</strong>: Pydantic สามารถแปลงข้อมูลจากชนิดหนึ่งไปยังอีกชนิดหนึ่งได้อย่างอัตโนมัติ เช่น การแปลง string เป็น integer ถ้าเป็นไปได้</li>
<li><strong>การสร้าง schema จากโครงสร้างข้อมูล</strong>: Pydantic สามารถสร้าง JSON Schema จากโมเดลที่กำหนด ซึ่งช่วยให้การทำงานกับ API หรือการตรวจสอบความถูกต้องของข้อมูลในระบบที่ใหญ่ขึ้นง่ายดายขึ้น</li>
<li><strong>การจัดการค่าดีฟอลต์และค่าเพิ่มเติม</strong>: Pydantic รองรับการกำหนดค่าเริ่มต้นและการจัดการค่าที่ไม่ตรงกับโครงสร้างข้อมูลที่กำหนด</li>
</ul>
</li>
</ul>
<p>ถ้าเล่ากันแบบง่ายๆ FastAPI ยืนอยู่บนบ่าของยักษ์ใหญ่ โดย</p>
<ul>
<li><a href="https://www.starlette.io/" rel="nofollow, noopener, noreferrer" target="_blank">Starlette</a> สำหรับส่วนที่เกี่ยวกับเว็บ</li>
<li><a href="https://docs.pydantic.dev/" rel="nofollow, noopener, noreferrer" target="_blank">Pydantic</a> สำหรับส่วนที่เกี่ยวกับข้อมูล</li>
</ul>
<p>มาลองเล่น FastAPI กัน</p>
<h2 id="มาเริ่มต้นกับ-fastapi-กัน">มาเริ่มต้นกับ FastAPI กัน</h2>
<p>คำแนะนำของ FastAPI นั้นจริงๆ สามารถสร้าง virtual environment ของ python ก่อน เพื่อเป็นการแยก environment ในแต่ละ project ออกจากกันตามคำแนะนำในนี้ได้<br>
<a href="https://fastapi.tiangolo.com/virtual-environments/" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/virtual-environments/</a><br>
(สำหรับใครที่เป็นสาย python จริงจัง หรือ พัฒนา project จริงจังแนะนำให้ทำ เพื่อกัน library / package ชนกันใน python แต่ละ version)</p>
<p>แต่ทีนี้เพื่อให้เกิดความรวดเร็วในการเล่า จะขออนุญาต skip ขั้นตอนนี้ไป และใช้ python ที่อยู่บนเครื่องแทน โดย fastapi สามารถลงโดยใช้คำสั่ง pip ในการลงได้เลย ด้วยคำสั่งนี้</p>
<div class="expressive-code"><link rel="stylesheet" href="/_astro/ec.x0vho.css"><script type="cf1e3cc9d8860513cd1ab917-module" src="/_astro/ec.8zarh.js"></script><figure class="frame is-terminal"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">pip</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">install</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">fastapi[standard]</span><span style="--0:#E9F284">"</span></span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="pip install &#x22;fastapi[standard]&#x22;"><div></div></button></div></figure></div>
<p><strong>pip</strong> (<a href="https://pypi.org/project/pip/" rel="nofollow, noopener, noreferrer" target="_blank">https://pypi.org/project/pip/</a>) เป็นเครื่องมือจัดการ package สำหรับ Python ที่ใช้ในการติดตั้ง upgrade และจัดการ library หรือ package ต่าง ๆ ที่พัฒนาโดยชุมชน Python (ถ้าใครที่เป็นสาย javascript มา ให้อารมณ์เหมือนกับ npm นั่นแหละ)<br>
pip ช่วยให้ผู้ใช้สามารถติดตั้ง package จาก Python Package Index (PyPI) ซึ่งเป็นที่เก็บแพ็กเกจหลักของ Python ได้อย่างง่ายดาย โดยเพียงแค่ใช้คำสั่ง <code>pip install</code> ตามด้วยชื่อ package ที่ต้องการ นอกจากนี้ pip ยังสามารถใช้ในการจัดการเวอร์ชันของ pacakge ตรวจสอบความเข้ากันได้ของ library และถอนการติดตั้ง package ที่ไม่ต้องการได้เช่นกัน</p>
<p>หลังจากลงเสร็จ ให้เราสร้าง folder สักอันขึ้นมา และสร้างไฟล์ <code>main.py</code> เพื่อลองสร้าง Example API สำหรับลอง run FastAPI ขึ้นมา เราจะลองลอกตัวอย่างจาก Fast API มาเลย</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> typing </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> Union</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.get</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">read_root</span><span style="--0:#F8F8F2;--1:#24292E">():</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Hello</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">World</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.get</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">read_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">q</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Union[</span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">] </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_id</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item_id, </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">q</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: q}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from typing import Unionfrom fastapi import FastAPIapp = FastAPI()@app.get(&#x22;/&#x22;)def read_root():    return {&#x22;Hello&#x22;: &#x22;World&#x22;}@app.get(&#x22;/items/{item_id}&#x22;)def read_item(item_id: int, q: Union[str, None] = None):    return {&#x22;item_id&#x22;: item_id, &#x22;q&#x22;: q}"><div></div></button></div></figure></div>
<p>ลองสร้างไฟล์ตาม code นี้ (ในทีนี้เราจะใช้ vscode ในการ run) และทำการ run fastapi ด้วยคำสั่งนี้บน terminal ของ vscode</p>
<div class="expressive-code"><figure class="frame is-terminal"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">fastapi</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">dev</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">main.py</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="fastapi dev main.py"><div></div></button></div></figure></div>
<img src="/img/blogs/fastapi-basic/fast-python-01.webp" alt="fast-python-01.webp">
<p>ผลลัพธ์สุดท้าย ถ้าทุกอย่างทุกต้อง จะ run อยู่ที่ <code>http://127.0.0.1:8000</code> ออกมา</p>
<img src="/img/blogs/fastapi-basic/fast-python-02.webp" alt="fast-python-02.webp">
<p>เมื่อลองยิง API (ในทีนี้ เราจะใช้ Postman) ดูที่ root path ก็จะเจอว่าสามารถยิง API และได้ผลลัพธ์ออกมาเป็น Hello World ตาม code ออกมาได้</p>
<img src="/img/blogs/fastapi-basic/fast-python-03.webp" alt="fast-python-03.webp">
<p>ความว้าวซ่าของ FastAPI คือ FastAPI ได้เตรียม Interactive API docs เอาไว้ให้แล้ว 2 เจ้า และ built in มาแล้วเรียบร้อย !</p>
<p>เจ้าแรกคือ Swagger (<a href="https://swagger.io/" rel="nofollow, noopener, noreferrer" target="_blank">https://swagger.io/</a>) เราสามารถเปิด docs swagger ดูได้ทันทีผ่าน <code>http://127.0.0.1:8000/docs</code> ใช่ครับ ไม่ต้องลงอะไรเพิ่มเลย มี built in มาแล้วเรียบร้อย หมดปัญหาทำงานแล้วไม่มี document ไปได้เลย 😂<br>
<img src="/img/blogs/fastapi-basic/fast-python-04.webp" alt="fast-python-04.webp"></p>
<p>หรืออีกเจ้า (บางคนอาจจะไม่ถนัด Swagger) FastAPI ก็ได้ support ReDoc (<a href="https://github.com/Redocly/redoc" rel="nofollow, noopener, noreferrer" target="_blank">https://github.com/Redocly/redoc</a>) API Docs จาก OpenAPI เอาไว้ด้วยเช่นกัน  มี built in มาแล้วเรียบร้อย สามารถเปิดได้ผ่าน path <a href="http://127.0.0.1:8000/redoc" rel="nofollow, noopener, noreferrer" target="_blank">http://127.0.0.1:8000/redoc</a> ได้เลยเช่นกัน</p>
<img src="/img/blogs/fastapi-basic/fast-python-05.webp" alt="fast-python-05.webp">
<p>ซึ่งเดี๋ยวระหว่างตัวอย่าง เราจะมีการเพิ่มการใช้ Type เข้าไป จะเห็นเลยว่า document พวกนี้จะล้อตาม code ของ FastAPI ไปเช่นกัน ซึ่งถือว่าอำนวยความสะดวกในการทำ document ให้อย่างมากด้วยเช่นกัน</p>
<p>รวมถึง ทุกครั้งที่แก้ code เราจะสังเกตุว่า เราไม่จำเป็นต้อง run คำสั่ง fastapi run dev ใหม่ทุกรอบ เนื่องจาก FastAPI ได้เตรียม <strong>auto-reload</strong> ซึ่งถูกจัดการโดย <strong>Uvicorn (<a href="https://www.uvicorn.org/" rel="nofollow, noopener, noreferrer" target="_blank">https://www.uvicorn.org/</a>)</strong> เมื่อ run FastAPI ใน development mode จะทำการเปิดใช้ feature นี้อัตโนมัติ ทำให้เราสามารถพัฒนา application ได้ โดยไม่จำเป็นต้องคอยมา run ซ้ำๆทุกครั้งที่แก้ไขไฟล์ได้</p>
<p>ทีนี้ เรามาเรียนรู้พื้นฐานการทำ RestAPI ผ่าน FastAPI กัน</p>
<h2 id="ตัวอย่าง-crud">ตัวอย่าง CRUD</h2>
<p><strong>REST API</strong> คือ interface ที่ใช้ในการสื่อสารระหว่างระบบต่าง ๆ ผ่าน protocal HTTP โดยอิงตามหลักการของสถาปัตยกรรม REST (Representational State Transfer) REST API ใช้ในการสร้างบริการเว็บที่สามารถให้ข้อมูลหรือดำเนินการต่าง ๆ ตามคำขอจาก client (เช่น เว็บ browsser หรือ application) ไปยัง server โดยข้อมูลหรือ resource จะถูกระบุด้วย URL และสามารถดำเนินการผ่าน HTTP methods เช่น</p>
<ul>
<li>GET (ดึงข้อมูล)</li>
<li>POST (สร้างข้อมูล)</li>
<li>PUT (อัปเดตข้อมูล)</li>
<li>DELETE (ลบข้อมูล)</li>
</ul>
<p>ใน FastAPI การใช้งาน HTTP methods พื้นฐาน  สามารถทำได้โดยใช้ decorators ที่มีให้ภายใน framework นี้ โดย decorators เหล่านี้จะช่วยกำหนดว่าฟังก์ชันใน Python ใดจะตอบสนองต่อ HTTP method ใดบ้าง โดยทั่วไปแล้ว FastAPI มีการสนับสนุน HTTP methods หลักๆดังนี้</p>
<h3 id="1-get">1. GET</h3>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.get</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/hello</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">read_root</span><span style="--0:#F8F8F2;--1:#24292E">():</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">message</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Hello, World!</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPIapp = FastAPI()@app.get(&#x22;/hello&#x22;)def read_root():    return {&#x22;message&#x22;: &#x22;Hello, World!&#x22;}"><div></div></button></div></figure></div>
<ul>
<li>
<p>ใน FastAPI จะใช้ decorators <code>@app.&#x3C;method></code> ในการควบคุม HTTP Method ของ FastAPI เช่น <code>@app.get</code> สำหรับ method GET</p>
</li>
<li>
<p>จากตัวอย่างนี้ function <code>read_root</code> จะถูกเรียกใช้เมื่อผู้ใช้ทำการส่งคำขอ GET ไปยัง endpoint <code>/hello</code> ออกมาได้<br>
<img src="/img/blogs/fastapi-basic/fast-python-06.webp" alt="fast-python-06.webp"></p>
</li>
</ul>
<h3 id="2-post">2. POST</h3>
<p>ตัวอย่างแบบไม่ใช้ Pydantic</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI, Request</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> json</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.post</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/submit/</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">submit_data</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">request</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Request):</span></span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">body </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">await</span><span style="--0:#F8F8F2;--1:#24292E"> request.json()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#96A1C2;--1:#616972"># Now you can access the data in `body` dictionary</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">received_data</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: body}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPI, Requestimport jsonapp = FastAPI()@app.post(&#x22;/submit/&#x22;)async def submit_data(request: Request):    body = await request.json()    # Now you can access the data in &#x60;body&#x60; dictionary    return {&#x22;received_data&#x22;: body}"><div></div></button></div></figure></div>
<p>แบบใช้ Pydantic</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> pydantic </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> BaseModel</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">BaseModel</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.post</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">create_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Item):</span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_name</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item.name, </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_description</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item.description}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPIfrom pydantic import BaseModelapp = FastAPI()class Item(BaseModel):    name: str    description: str@app.post(&#x22;/items/&#x22;)def create_item(item: Item):    return {&#x22;item_name&#x22;: item.name, &#x22;item_description&#x22;: item.description}"><div></div></button></div></figure></div>
<ul>
<li>ใช้ผ่าน decorator <code>@app.post</code> ในการควบคุม method POST</li>
<li>function <code>create_item</code> จะถูกเรียกใช้เมื่อผู้ใช้ทำการส่งคำขอ POST ไปยัง endpoint <code>/items/</code> พร้อมกับข้อมูลของ <code>Item</code></li>
<li>สังเกตุว่าในเคสนี้เรามีการเรียกใช้ pydantic สำหรับจัดการ type เพิ่ม</li>
</ul>
<p>Pydantic เป็น library ใน Python ที่ช่วยในการจัดการข้อมูลและการตรวจสอบความถูกต้องของข้อมูล (data validation) โดยใช้ type annotations ของ Python ในการกำหนดโครงสร้างของข้อมูลที่ expected ว่าจะเข้ามา เช่น การกำหนดชนิดข้อมูลและการตรวจสอบข้อกำหนดต่าง ๆ ข้อมูลต้องไม่ว่างเปล่า ต้องเป็นตัวเลขอยู่ในช่วงที่กำหนด เป็นต้น</p>
<p>Pydantic มีบทบาทสำคัญในหลายๆ ด้าน ตั้งแต่</p>
<ul>
<li><strong>Data Models</strong>: Pydantic ช่วยให้เราสร้าง model ข้อมูลที่ใช้ในการรับส่งข้อมูลระหว่าง client และ server โดยการกำหนด Pydantic models เพื่อจัดการข้อมูลที่รับจาก request body, query parameters, headers หรือ cookies และตรวจสอบความถูกต้องของข้อมูลได้อย่างอัตโนมัติ</li>
<li><strong>Validation and Serialization</strong>: เมื่อรับข้อมูลที่ถูกส่งมาจาก client, FastAPI จะใช้ Pydantic ในการตรวจสอบความถูกต้องของข้อมูลเหล่านั้น เช่น ตรวจสอบว่าข้อมูลที่รับมาตรงกับชนิดข้อมูลที่กำหนดไว้หรือไม่ หรือมีค่าที่จำเป็นครบถ้วนหรือไม่ และเมื่อส่งข้อมูลกลับไปยัง client, Pydantic จะช่วยในการทำ serialization (แปลงข้อมูลให้อยู่ในรูปแบบที่สามารถส่งกลับไปได้)</li>
<li><strong>Automatic Documentation</strong>: เมื่อใช้ Pydantic models ใน FastAPI, การสร้างเอกสาร API (เช่น Swagger UI) จะเกิดขึ้นอัตโนมัติ ซึ่งช่วยให้ผู้พัฒนาหรือผู้ใช้ API เข้าใจโครงสร้างข้อมูลที่ API คาดหวังได้ง่ายขึ้น</li>
<li><strong>Custom Validators</strong>: Pydantic ยังรองรับการสร้างตัวตรวจสอบความถูกต้องของข้อมูลที่ซับซ้อน (custom validators) ซึ่งเราสามารถใช้ในการปรับแต่งการตรวจสอบข้อมูลให้ตรงกับความต้องการของแอปพลิเคชันของเรา</li>
</ul>
<p>โดยทั่วไป การใช้ Pydantic มักใช้คู่กับการจัดการ Data เพื่อให้ Data ยังคงอยู่ในรูปแบบเดียวกัน รวมถึง ใช้ร่วมกันกับ ORM (ซึ่งเดี๋ยวเราจะพูดถึงอีกที) เพื่อให้มี data type ที่ถูกต้องก่อนเข้า database ด้วย</p>
<h3 id="3-put">3. PUT</h3>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> pydantic </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> BaseModel</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">BaseModel</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.put</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">update_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">item</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Item):</span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_id</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item_id, </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_name</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item.name, </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_description</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item.description}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPIfrom pydantic import BaseModelapp = FastAPI()class Item(BaseModel):    name: str    description: str@app.put(&#x22;/items/{item_id}&#x22;)def update_item(item_id: int, item: Item):    return {&#x22;item_id&#x22;: item_id, &#x22;item_name&#x22;: item.name, &#x22;item_description&#x22;: item.description}"><div></div></button></div></figure></div>
<ul>
<li>
<p>ใช้ผ่าน decorator <code>@app.put</code> ในการควบคุม method PUT</p>
</li>
<li>
<p>function <code>update_item</code> จะถูกเรียกใช้เมื่อผู้ใช้ทำการส่งคำขอ PUT ไปยัง endpoint <code>/items/{item_id}</code> พร้อมกับข้อมูลใหม่สำหรับ <code>Item</code></p>
</li>
</ul>
<h3 id="4-delete">4. DELETE</h3>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.delete</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">delete_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">message</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#FF79C6;--1:#BF3441">f</span><span style="--0:#F1FA8C;--1:#032F62">"Item </span><span style="--0:#BD93F9;--1:#005CC5">{</span><span style="--0:#F8F8F2;--1:#24292E">item_id</span><span style="--0:#BD93F9;--1:#005CC5">}</span><span style="--0:#F1FA8C;--1:#032F62"> deleted"</span><span style="--0:#F8F8F2;--1:#24292E">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPIapp = FastAPI()@app.delete(&#x22;/items/{item_id}&#x22;)def delete_item(item_id: int):    return {&#x22;message&#x22;: f&#x22;Item {item_id} deleted&#x22;}"><div></div></button></div></figure></div>
<ul>
<li>
<p>ใช้ผ่าน decorator <code>@app.delete</code> ในการควบคุม method DELETE</p>
</li>
<li>
<p>function <code>delete_item</code> จะถูกเรียกใช้เมื่อผู้ใช้ทำการส่งคำขอ DELETE ไปยัง endpoint <code>/items/{item_id}</code> เพื่อทำการลบข้อมูลตาม <code>item_id</code> ที่ระบุ</p>
</li>
</ul>
<h3 id="5-patch">5. PATCH</h3>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> pydantic </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> BaseModel</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">BaseModel</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.patch</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">partial_update_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">item</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Item):</span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_id</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item_id, </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_name</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item.name, </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">item_description</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: item.description}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPIfrom pydantic import BaseModelapp = FastAPI()class Item(BaseModel):    name: str    description: str = None@app.patch(&#x22;/items/{item_id}&#x22;)def partial_update_item(item_id: int, item: Item):    return {&#x22;item_id&#x22;: item_id, &#x22;item_name&#x22;: item.name, &#x22;item_description&#x22;: item.description}"><div></div></button></div></figure></div>
<ul>
<li>ใช้ผ่าน decorator <code>@app.patch</code> ในการควบคุม method PATCH</li>
<li>function <code>partial_update_item</code> จะถูกเรียกใช้เมื่อผู้ใช้ทำการส่งคำขอ PATCH ไปยัง endpoint <code>/items/{item_id}</code> เพื่อทำการอัปเดตข้อมูลบางส่วนของ <code>Item</code></li>
</ul>
<p>ทีนี้สังเกตุว่า ตัวอย่างที่เราโชว์ทั้งหมดนั้น เป็นตัวอย่างที่เราทำเป็น Mock data ไว้อย่างเดียว (จัดการข้อมูลผ่าน List, แสดงข้อมูลหยิบจาก List ออกไปแสดง) เราจะมาลองเปลี่ยน List เหล่านั้นให้ต่อ database จริงกันด้วย library ของ FastAPI กัน</p>
<h2 id="เพิ่ม-database-เข้าไป">เพิ่ม Database เข้าไป</h2>
<p><a href="https://fastapi.tiangolo.com/tutorial/sql-databases/" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/tutorial/sql-databases/</a><br>
มีประโยคหนึ่งจากเอกสารของ FastAPI</p>
<ul>
<li>FastAPI doesn’t require you to use a SQL (relational) database.</li>
<li>But you can use any relational database that you want</li>
</ul>
<p>นั่นคือ FastAPI สามารถใช้งาน Relational Database ได้ โดยไม่ใช้ภาษา SQL ซึ่งคำตอบสำหรับเรื่องราวนี้ที่จะเป็นไปได้ก็มีเพียงคำตอบเดียว นั่นคือการใช้ ORM (Object Relational Mapper) ของ <a href="https://www.sqlalchemy.org/" rel="nofollow, noopener, noreferrer" target="_blank">https://www.sqlalchemy.org/</a> ในการเป็นตัวแทนของการพูดคุยกับ Database นั่นเอง</p>
<p>FastAPI สามารถทำงานร่วมกับฐานข้อมูลใดก็ได้และใช้ library แบบใดก็ได้ในการเชื่อมต่อกับฐานข้อมูล รูปแบบที่พบบ่อยคือการใช้ “ORM” หรือ “object-relational mapping” library</p>
<p>ORM มีเครื่องมือในการแปลง (“map”) ระหว่าง objects ใน code และตารางฐานข้อมูล (“relations”) เมื่อใช้ ORM ปกติแล้วคุณจะสร้าง class ที่แทนตารางในฐานข้อมูล SQL โดยแต่ละ attribute ของ class จะแทน column ซึ่งมีชื่อและประเภทกำหนดไว้</p>
<p>ORMs ที่พบบ่อยใน python ก็จะมี เช่น Django-ORM (เป็นส่วนหนึ่งของ Django framework), SQLAlchemy ORM (เป็นส่วนหนึ่งของ SQLAlchemy, ไม่ขึ้นกับ framework ใด ๆ) และ Peewee (ไม่ขึ้นกับ framework ใด ๆ) เป็นต้น</p>
<p>SQLAlchemy เป็น library ในภาษา Python ที่ถูกออกแบบมาเพื่อจัดการกับ relational databases โดยทำหน้าที่เป็น ORM และยังมีความสามารถในการทำ SQL expression language ซึ่งช่วยให้เราสามารถทำงานกับฐานข้อมูลได้ทั้งในแบบ low-level (การเขียน SQL query โดยตรง) และ high-level (การใช้ ORM เพื่อ map ข้อมูลจากตารางในฐานข้อมูลมาเป็น objects ใน Python) ได้<br>
<strong>ความสามารถหลักของ SQLAlchemy</strong></p>
<ol>
<li><strong>ORM (Object-Relational Mapping)</strong>: SQLAlchemy ORM ช่วยให้ผู้พัฒนาสามารถทำงานกับฐานข้อมูลโดยใช้ class และ objects ใน Python แทนการเขียน SQL query โดยตรง ตัวอย่างเช่น ตารางในฐานข้อมูลจะถูกแทนที่ด้วย class และแต่ละ row ในตารางจะถูกแทนที่ด้วย instance ของ class นั้นๆ ซึ่งทำให้การทำงานกับข้อมูลในฐานข้อมูลเป็นไปอย่างธรรมชาติและเป็นไปตามแนวคิดของการเขียนโปรแกรม OOP ได้</li>
<li><strong>SQL Expression Language</strong>: SQLAlchemy ยังมีเครื่องมือที่ช่วยให้เราสามารถเขียน SQL query ได้ในรูปแบบที่เป็น programmatic (ไม่ใช่ SQL string โดยตรง) ทำให้การสร้างและจัดการ query เป็นไปอย่างยืดหยุ่น และยังสามารถใช้ฟีเจอร์นี้ร่วมกับ ORM ได้อีกด้วย</li>
<li><strong>Database Abstraction</strong>: SQLAlchemy สามารถทำงานกับหลายประเภทของฐานข้อมูลเชิงสัมพันธ์ได้ เช่น MySQL, PostgreSQL, SQLite, Oracle เป็นต้น โดยผู้พัฒนาไม่จำเป็นต้องกังวลเกี่ยวกับรายละเอียดเฉพาะของฐานข้อมูลแต่ละประเภท เพราะ SQLAlchemy จะทำหน้าที่เป็น layer ที่จัดการความซับซ้อนเหล่านี้</li>
<li><strong>Session Management</strong>: SQLAlchemy มีระบบจัดการ session ที่ช่วยในการทำงานกับ transactions ในฐานข้อมูล ซึ่ง session ช่วยในการควบคุมการเชื่อมต่อกับฐานข้อมูล และทำให้การ commit หรือ rollback ข้อมูลเป็นไปได้ง่ายขึ้น</li>
</ol>
<p>เราจะมาลองเล่น sqlalchemy กัน โดยการลงตาม command นี้</p>
<div class="expressive-code"><figure class="frame is-terminal"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">pip</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">install</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">sqlalchemy</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="pip install sqlalchemy"><div></div></button></div></figure></div>
<p>ลองปรับ code ให้ใช้ SQL Alchemy จาก CRUD ที่ทำมาโดย</p>
<ul>
<li>ตัวอย่างนี้ เราจะใช้ SQLite สำหรับเก็บข้อมูลภายใน database</li>
<li>เราจะใช้ pydantic + sqlalchemy ในการจัดการ database ผ่าน ORM กัน</li>
</ul>
<p>ทีนี้ เราจะเล่าจุดเริ่มต้นก่อน เราจะมีทั้งหมด 4 Step ที่เราต้องทำคือ</p>
<ul>
<li><strong>Step 1:</strong> Database SQLAlchemy Config</li>
<li><strong>Step 2:</strong> สร้าง Database model</li>
<li><strong>Step 3:</strong> สร้าง Pydantic model</li>
<li><strong>Step 4:</strong> ประยุกต์ใช้กับ CRUD Service</li>
</ul>
<h3 id="step-1--database-orm-config">Step 1 = Database ORM Config</h3>
<p>ใน SQLAlchemy เมื่อทำงานกับ ORM โดยเฉพาะเมื่อใช้ใน application ที่ใช้ web framework อย่าง FastAPI จะต้องมีองค์ประกอบ 3 อย่างนี้เป็นจุดเริ่มต้น เพื่อใช้เป็นจุดเริ่มต้นระหว่าง python และ database (ORM) นั่นคือ <code>engine</code>, <code>SessionLocal</code> และ <code>Base</code></p>
<ul>
<li><code>engine</code> คือการเชื่อมต่อกับฐานข้อมูล (database connection) ที่ SQLAlchemy ใช้ในการสื่อสารกับฐานข้อมูลจริงๆ โดยใช้ข้อมูลการเชื่อมต่อที่ระบุ เช่น ที่อยู่ของฐานข้อมูล, ชื่อผู้ใช้, รหัสผ่าน, และอื่น</li>
<li><code>SessionLocal</code> class คือ factory function ที่ใช้ในการสร้าง session object ซึ่ง session นี้จะเป็นตัวจัดการ transaction (การเพิ่ม, ลบ, แก้ไข) ระหว่าง Python object และฐานข้อมูล
<ul>
<li><code>SessionLocal</code> มักถูกสร้างขึ้นด้วย <code>sessionmaker()</code> โดยเชื่อมต่อกับ <code>engine</code> ที่สร้างไว้</li>
</ul>
</li>
<li><code>Base</code> class เป็น class หลักที่ใช้เป็น instance สำหรับการสร้าง class ที่แทนตารางใน database
<ul>
<li>class นี้จะถูกสร้างจาก <code>declarative_base()</code> ซึ่งจะทำให้ class อื่นๆ ที่สืบทอด (inheritance) สามารถแปลงเป็นตารางในฐานข้อมูลได้โดยอัตโนมัติได้</li>
</ul>
</li>
</ul>
<p>code สำหรับ config แรกสุดของ SQLAlchemy ก็จะมีหน้าตาประมาณนี้</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># เพิิ่ม sqlalchemy เข้าไป</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine, Column, Integer, String, Float, Text</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.ext.declarative </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.orm </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker, Session</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># ตั้งค่าและเชื่อมต่อกับฐานข้อมูล SQLite</span></div></div><div class="ec-line"><div class="code"><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">sqlite:///./test.db</span><span style="--0:#E9F284">"</span></span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># instance class เริ่มต้นสำหรับ engine, SessionLocal และ Base</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">engine </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine(</span><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">connect_args</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">{</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">check_same_thread</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">})</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">SessionLocal </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autocommit</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autoflush</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base()</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="# เพิิ่ม sqlalchemy เข้าไปfrom sqlalchemy import create_engine, Column, Integer, String, Float, Textfrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy.orm import sessionmaker, Session# ตั้งค่าและเชื่อมต่อกับฐานข้อมูล SQLiteDATABASE_URL = &#x22;sqlite:///./test.db&#x22;# instance class เริ่มต้นสำหรับ engine, SessionLocal และ Baseengine = create_engine(DATABASE_URL, connect_args={&#x22;check_same_thread&#x22;: False})SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)Base = declarative_base()"><div></div></button></div></figure></div>
<h3 id="step-2-สร้าง-database-model-sqlalchemy-model"><strong>Step 2:</strong> สร้าง Database model (SQLAlchemy Model)</h3>
<p>SQLAlchemy Models คือ class ใน Python ที่แทนตาราง (table) ในฐานข้อมูลโดยใช้ SQLAlchemy ORM Model เหล่านี้เป็นการเชื่อมต่อระหว่างโลกของ relational database และ OOP ใน Python<br>
<strong>คุณสมบัติของ SQLAlchemy Models</strong></p>
<ul>
<li><strong>Mapping ระหว่างตารางและ class</strong>: แต่ละ class ที่เป็น model ใน SQLAlchemy จะถูกแทนด้วยตารางในฐานข้อมูล และแต่ละ attribute ของคลาสจะถูกแทนด้วย column ในตารางนั้นๆ</li>
<li><strong>Primary Key</strong>: ใน model แต่ละตัวจะมีการกำหนด Primary Key เพื่อให้สามารถ reference ถึงแต่ละ row ในตารางได้อย่างถูกต้อง</li>
<li><strong>Data Types</strong>: SQLAlchemy จะกำหนดชนิดของข้อมูลสำหรับแต่ละ column ในตาราง เช่น Integer, String, DateTime เป็นต้น</li>
<li><strong>Relationships</strong>: คุณสามารถกำหนดความสัมพันธ์ (relationship) ระหว่างตารางในฐานข้อมูลผ่านโมเดล เช่น One-to-Many, Many-to-One หรือ Many-to-Many</li>
</ul>
<p>โดยการสร้าง SQLAlchemy models นั้น สามารถทำได้จากการใช้ <code>Base</code> class เป็นการกำหนดโครงสร้างของตารางในฐานข้อมูลโดยใช้ Python classes ที่สืบทอดมาจาก <code>Base</code> ซึ่งถูกสร้างขึ้นจาก <code>declarative_base()</code> (ใน Step ที่ 1 ก่อนหน้านี้)<br>
ขั้นตอนที่เราจะต้องทำคือ</p>
<ol>
<li>import library สำหรับจัดการ attribute ในแต่ละ column (เพื่อกำหนดว่า column แต่ละอันคือ field ประเภทอะไรบ้าง) อย่าง <code>Column</code>, <code>Integer</code>, <code>String</code>, <code>Boolean</code></li>
<li>ใช้ <code>declarative_base()</code> เพื่อสร้าง <code>Base</code> class ที่จะใช้ในการสร้าง models</li>
<li>สร้าง Model class โดยสืบทอดจาก <code>**Base**</code>:
<ul>
<li>กำหนดชื่อ class ตามชื่อที่ต้องการให้เป็นตารางในฐานข้อมูล</li>
<li>ระบุ <code>__tablename__</code> ในแต่ละ class ซึ่งจะกำหนดชื่อตารางในฐานข้อมูล</li>
<li>กำหนดคอลัมน์ต่าง ๆ ในตารางโดยใช้ <code>Column</code> และกำหนดประเภทข้อมูล ( <code>Integer</code>, <code>String</code>, ฯลฯ)</li>
</ul>
</li>
<li>กำหนด Primary Key โดย ต้องมี Column อย่างน้อยหนึ่ง Column ที่ถูกกำหนดเป็น Primary Key ( <code>primary_key=True</code>)</li>
<li>เมื่อ define ทุกอย่างเรียบร้อย run คำสั่ง <code>Base.metadata.create_all(bind=engine)</code> เพื่อทำการสร้าง table ทั้งหมดที่ define ขึ้นมา (โดยจะสร้างตารางในฐานข้อมูลจาก models ที่สืบทอดจาก <code>Base</code> class)<br>
ตัวอย่าง code  ก็จะมีหน้าตาประมาณนี้ในส่วนที่ 2 (code ถัดจาก Step 1 ลงมา)</li>
</ol>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> pydantic </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> BaseModel</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.ext.declarative </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># สร้างโมเดลสำหรับฐานข้อมูล</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemDB</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Base</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">__tablename__ </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">items</span><span style="--0:#E9F284">"</span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Integer, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">primary_key</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(String, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Text, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">price </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">tax </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># สร้างฐานข้อมูล</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base.metadata.create_all(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from pydantic import BaseModelfrom sqlalchemy.ext.declarative import declarative_baseBase = declarative_base()# สร้างโมเดลสำหรับฐานข้อมูลclass ItemDB(Base):    __tablename__ = &#x22;items&#x22;    id = Column(Integer, primary_key=True, index=True)    name = Column(String, index=True)    description = Column(Text, nullable=True)    price = Column(Float, nullable=False)    tax = Column(Float, nullable=True)# สร้างฐานข้อมูลBase.metadata.create_all(bind=engine)"><div></div></button></div></figure></div>
<p>เพิ่มเติม ตัว ORM เองนั้น support การทำ relationship ระหว่าง table ด้วย (เช่น One-to-Many, Many-to-Many) โดยสามารถทำได้ผ่านคำสั่ง relationship<br>
สามารถอ่านเพิ่มเติมในหัวข้อนี้ได้ <a href="https://fastapi.tiangolo.com/tutorial/sql-databases/#create-the-relationships" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/tutorial/sql-databases/#create-the-relationships</a><br>
(ขอไม่ลง detail ในหัวข้อนี้เพื่อไม่ให้ยาวจนเกินไป + ให้เกิดความเข้าใจในตัว SQLAlchemy ก่อน)</p>
<h3 id="step-3-สร้าง-pydantic-model"><strong>Step 3:</strong> สร้าง Pydantic model</h3>
<p>การสร้าง Pydantic Models เป็นกระบวนการในการสร้างตัวแบบข้อมูล (data model) โดยใช้ Pydantic ซึ่งเป็น library Python ที่ใช้สำหรับการตรวจสอบและแปลงข้อมูล (data validation and parsing) โดยเฉพาะอย่างยิ่งในบริบทของการทำงานร่วมกับ FastAPI และ SQLAlchemy การสร้าง Pydantic Models มีความสำคัญเนื่องจากช่วยในการจัดการข้อมูลขาเข้าและขาออกอย่างปลอดภัยและถูกต้อง<br>
เมื่อใช้ SQLAlchemy ในการจัดการฐานข้อมูล Pydantic Models จะทำหน้าที่เป็นตัวกลางระหว่างข้อมูลที่มาจากฐานข้อมูลและข้อมูลที่ส่งไปยัง API หรือได้รับจาก API โดยมีจุดประสงค์ดังนี้:</p>
<ol>
<li><strong>การตรวจสอบและแปลงข้อมูล</strong>: Pydantic ช่วยตรวจสอบความถูกต้องของข้อมูลที่ได้รับจากการร้องขอ (request) เช่น ข้อมูลจากผู้ใช้ หรือข้อมูลที่ส่งกลับไปยังผู้ใช้ (response) ซึ่งช่วยป้องกันข้อผิดพลาดที่อาจเกิดจากข้อมูลที่ไม่ถูกต้อง</li>
<li><strong>การแปลงระหว่าง SQLAlchemy Models และ Pydantic Models</strong>: ในการทำงานกับ API, ข้อมูลที่ถูกเก็บในฐานข้อมูล (ซึ่งใช้ SQLAlchemy Models) มักจะต้องถูกแปลงเป็น Pydantic Models เพื่อให้ส่งกลับไปยังผู้ใช้ในรูปแบบที่เหมาะสมและตรวจสอบแล้ว เช่น ข้อมูล JSON</li>
</ol>
<p>ในเอกสารของ FastAPI เองเพื่อกันสับสน ระหว่าง Pydantic (ที่เป็น model ถูกใช้เพื่อจัดการข้อมูลที่เกี่ยวข้องกับ API) และ SQLAlchemy (ที่เป็น model ถูกใช้เพื่อการทำงานกับฐานข้อมูล) document ก็จะแนะนำว่า ให้แยกไฟล์เป็น</p>
<ul>
<li><code>models.py</code> สำหรับ SQLAlchemy model</li>
<li><code>schemas.py</code> สำหรับ Pydantic models</li>
<li>การแยกสองส่วนนี้ออกจากกันช่วยให้โค้ดชัดเจนขึ้น และทำให้ง่ายต่อการเข้าใจว่าแต่ละโมเดลถูกใช้สำหรับงานอะไร</li>
</ul>
<p>โดยขั้นตอนหลักๆที่เราจะต้องทำ (ต่อจาก step 2) คือ</p>
<ol>
<li>สร้าง Base Models ของ Pydantic ที่จะประกอบด้วย attribute ที่ใช้งานทั้ง สร้าง (creating) และ อ่าน (reading) โดย import จาก BaseModel ของ Pydantic</li>
<li>สร้าง Pydantic Models สำหรับการตรวจสอบ “ข้อมูลขาเข้า” โดยจะถูกใช้เพื่อกำหนดโครงสร้างและประเภทของข้อมูลที่คาดว่าจะได้รับจากผู้ใช้ เช่น เมื่อผู้ใช้ต้องการสร้างหรือ update ข้อมูล (ส่วนใหญ่มักจะใช้ชื่อตามด้วย Create เช่น ItemCreate, UserCreate)</li>
<li>สร้าง Pydantic Models สำหรับการ “ส่งข้อมูลขาออก” โดยจะถูกใช้เพื่อกำหนดโครงสร้างและประเภทของข้อมูลที่ส่งกลับไปยังผู้ใช้ เช่น เมื่อส่งผลลัพธ์จากการสืบค้นฐานข้อมูลกลับไปในรูปแบบ JSON (ส่วนตัว ผมจะชอบใช้ชื่อตามด้วย Response เช่น ItemResponse, UserResponse แต่ตาม document จะแนะนำให้ใช้ชื่อ Class เฉยๆ เช่น Item, User แทนได้เช่นกัน)</li>
<li>สำหรับ “Model ขาออก” ให้เพิ่ม การตั้งค่า <code>from_attributes = True</code> ใน <code>Config</code> เพื่อช่วยให้ Pydantic สามารถแปลงข้อมูลจาก SQLAlchemy Models เป็น Pydantic Models ได้โดยอัตโนมัติ (ใน version เก่าและตาม document จะใช้ค่า <code>orm_mode = True</code>)</li>
</ol>
<p>โดยอ้างอิงจากข้อมูลใน Code Step 2 เราจะสามารถเพิ่ม Pydantic หน้าตาประมาณนี้ออกมาได้</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> pydantic </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> BaseModel</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Base Model</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">BaseModel</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description: Optional[</span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span><span style="--0:#F8F8F2;--1:#24292E">] </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">price: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">float</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">tax: Optional[</span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">float</span><span style="--0:#F8F8F2;--1:#24292E">] </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Model ขาเข้า (ขาสร้าง)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemCreate</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">pass</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Model ขาออก (ขาออก)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemResponse</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#96A1C2;--1:#616972"># ทำการเชื่อมเข้ากับ</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Config</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">        </span></span><span style="--0:#F8F8F2;--1:#24292E">from_attributes </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">True</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from pydantic import BaseModel# Base Modelclass Item(BaseModel):    name: str    description: Optional[str] = None    price: float    tax: Optional[float] = None# Model ขาเข้า (ขาสร้าง)class ItemCreate(Item):    pass# Model ขาออก (ขาออก)class ItemResponse(Item):    id: int    # ทำการเชื่อมเข้ากับ    class Config:        from_attributes = True"><div></div></button></div></figure></div>
<p>โดย การเพิ่ม <code>from_attributes</code> (<code>orm_mode</code>) เข้าไปใน Pydantic Models นั้น</p>
<ul>
<li>จะช่วยให้ Pydantic สามารถแปลงข้อมูลจาก SQLAlchemy Models โดยอัตโนมัติ แม้ว่า SQLAlchemy Models จะไม่ได้ส่งข้อมูลมาในรูปแบบ dictionary ซึ่งเป็นรูปแบบที่ Pydantic มักจะคาดหวัง</li>
<li>โดยปกติแล้ว Pydantic คาดหวังข้อมูลในรูปแบบของ dictionary แต่ SQLAlchemy Models มักจะส่งข้อมูลในรูปแบบของ Python objects เมื่อมี <code>orm_mode</code> Pydantic จะสามารถรับและแปลงข้อมูลจาก SQLAlchemy Models เป็น Pydantic Models ได้โดยไม่มีปัญหา</li>
</ul>
<p>เช่น หาก data เข้ามาเป็นแบบนี้</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> data[</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">id</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">]</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="id = data[&#x22;id&#x22;]"><div></div></button></div></figure></div>
<p>ก็จะสามารถ get จาก attribute โดยตรงเป็นแบบนี้ได้เลย</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> data.id</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="id = data.id"><div></div></button></div></figure></div>
<h3 id="step-4-ประยุกต์ใช้กับ-crud-service"><strong>Step 4:</strong> ประยุกต์ใช้กับ CRUD Service</h3>
<p>เมื่อเราประกาศทุกอย่างเรียบร้อย เราก็จะสามารถเรียกใช้งานการจัดการข้อมูลผ่าน Pydantic Model ได้เลย<br>
code จะมีหน้าตาประมาณนี้</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI, HTTPException, Depends</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> pydantic </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> BaseModel</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> typing </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> List, Optional</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># เพิิ่ม sqlalchemy เข้าไป</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine, Column, Integer, String, Float, Text</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.ext.declarative </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.orm </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker, Session</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># ตั้งค่าและเชื่อมต่อกับฐานข้อมูล SQLite</span></div></div><div class="ec-line"><div class="code"><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">sqlite:///./test.db</span><span style="--0:#E9F284">"</span></span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">engine </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine(</span><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">connect_args</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">{</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">check_same_thread</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">})</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">SessionLocal </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autocommit</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autoflush</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># สร้างโมเดลสำหรับฐานข้อมูล</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemDB</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Base</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">__tablename__ </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">items</span><span style="--0:#E9F284">"</span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Integer, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">primary_key</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(String, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Text, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">price </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">tax </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># สร้างฐานข้อมูล</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base.metadata.create_all(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># โมเดลข้อมูลสำหรับรับข้อมูลจาก API</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">BaseModel</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description: Optional[</span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span><span style="--0:#F8F8F2;--1:#24292E">] </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">price: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">float</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">tax: Optional[</span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">float</span><span style="--0:#F8F8F2;--1:#24292E">] </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemCreate</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">pass</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemResponse</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Config</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">        </span></span><span style="--0:#F8F8F2;--1:#24292E">from_attributes </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">True</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Dependency สำหรับสร้าง Session กับฐานข้อมูลในแต่ละคำร้องขอ</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">get_db</span><span style="--0:#F8F8F2;--1:#24292E">():</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> SessionLocal()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">try</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">yield</span><span style="--0:#F8F8F2;--1:#24292E"> db</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">finally</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">        </span></span><span style="--0:#F8F8F2;--1:#24292E">db.close()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Create: สร้างสินค้าใหม่</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.post</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">ItemResponse)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">create_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> ItemCreate, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> ItemDB(</span><span style="--0:#FF79C6;--1:#BF3441">**</span><span style="--0:#F8F8F2;--1:#24292E">item.model_dump())</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.add(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.commit()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.refresh(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db_item</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Read: อ่านสินค้าทั้งหมด</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.get</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">List[ItemResponse])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">read_items</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).all()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Read: อ่านสินค้าตาม ID</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.get</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">ItemResponse)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">read_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).filter(ItemDB.id </span><span style="--0:#FF79C6;--1:#BF3441">==</span><span style="--0:#F8F8F2;--1:#24292E"> item_id).first()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">if</span><span style="--0:#F8F8F2;--1:#24292E"> db_item </span><span style="--0:#FF79C6;--1:#BF3441">is</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">raise</span><span style="--0:#F8F8F2;--1:#24292E"> HTTPException(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">status_code</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">404</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">detail</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item not found</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db_item</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Update: อัปเดตสินค้าตาม ID</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.put</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">ItemResponse)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">update_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">item</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> ItemCreate, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).filter(ItemDB.id </span><span style="--0:#FF79C6;--1:#BF3441">==</span><span style="--0:#F8F8F2;--1:#24292E"> item_id).first()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">if</span><span style="--0:#F8F8F2;--1:#24292E"> db_item </span><span style="--0:#FF79C6;--1:#BF3441">is</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">raise</span><span style="--0:#F8F8F2;--1:#24292E"> HTTPException(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">status_code</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">404</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">detail</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item not found</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">for</span><span style="--0:#F8F8F2;--1:#24292E"> key, value </span><span style="--0:#FF79C6;--1:#BF3441">in</span><span style="--0:#F8F8F2;--1:#24292E"> item.model_dump().items():</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#8BE9FD;--1:#005CC5">setattr</span><span style="--0:#F8F8F2;--1:#24292E">(db_item, key, value)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.commit()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.refresh(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db_item</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Delete: ลบสินค้าตาม ID</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.delete</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">delete_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).filter(ItemDB.id </span><span style="--0:#FF79C6;--1:#BF3441">==</span><span style="--0:#F8F8F2;--1:#24292E"> item_id).first()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">if</span><span style="--0:#F8F8F2;--1:#24292E"> db_item </span><span style="--0:#FF79C6;--1:#BF3441">is</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">raise</span><span style="--0:#F8F8F2;--1:#24292E"> HTTPException(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">status_code</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">404</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">detail</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item not found</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.delete(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.commit()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">message</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item deleted</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPI, HTTPException, Dependsfrom pydantic import BaseModelfrom typing import List, Optional# เพิิ่ม sqlalchemy เข้าไปfrom sqlalchemy import create_engine, Column, Integer, String, Float, Textfrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy.orm import sessionmaker, Session# ตั้งค่าและเชื่อมต่อกับฐานข้อมูล SQLiteDATABASE_URL = &#x22;sqlite:///./test.db&#x22;engine = create_engine(DATABASE_URL, connect_args={&#x22;check_same_thread&#x22;: False})SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)Base = declarative_base()# สร้างโมเดลสำหรับฐานข้อมูลclass ItemDB(Base):    __tablename__ = &#x22;items&#x22;    id = Column(Integer, primary_key=True, index=True)    name = Column(String, index=True)    description = Column(Text, nullable=True)    price = Column(Float, nullable=False)    tax = Column(Float, nullable=True)# สร้างฐานข้อมูลBase.metadata.create_all(bind=engine)# โมเดลข้อมูลสำหรับรับข้อมูลจาก APIclass Item(BaseModel):    name: str    description: Optional[str] = None    price: float    tax: Optional[float] = Noneclass ItemCreate(Item):    passclass ItemResponse(Item):    id: int    class Config:        from_attributes = Trueapp = FastAPI()# Dependency สำหรับสร้าง Session กับฐานข้อมูลในแต่ละคำร้องขอdef get_db():    db = SessionLocal()    try:        yield db    finally:        db.close()# Create: สร้างสินค้าใหม่@app.post(&#x22;/items/&#x22;, response_model=ItemResponse)async def create_item(item: ItemCreate, db: Session = Depends(get_db)):    db_item = ItemDB(**item.model_dump())    db.add(db_item)    db.commit()    db.refresh(db_item)    return db_item# Read: อ่านสินค้าทั้งหมด@app.get(&#x22;/items/&#x22;, response_model=List[ItemResponse])async def read_items(db: Session = Depends(get_db)):    return db.query(ItemDB).all()# Read: อ่านสินค้าตาม ID@app.get(&#x22;/items/{item_id}&#x22;, response_model=ItemResponse)async def read_item(item_id: int, db: Session = Depends(get_db)):    db_item = db.query(ItemDB).filter(ItemDB.id == item_id).first()    if db_item is None:        raise HTTPException(status_code=404, detail=&#x22;Item not found&#x22;)    return db_item# Update: อัปเดตสินค้าตาม ID@app.put(&#x22;/items/{item_id}&#x22;, response_model=ItemResponse)async def update_item(item_id: int, item: ItemCreate, db: Session = Depends(get_db)):    db_item = db.query(ItemDB).filter(ItemDB.id == item_id).first()    if db_item is None:        raise HTTPException(status_code=404, detail=&#x22;Item not found&#x22;)    for key, value in item.model_dump().items():        setattr(db_item, key, value)    db.commit()    db.refresh(db_item)    return db_item# Delete: ลบสินค้าตาม ID@app.delete(&#x22;/items/{item_id}&#x22;)async def delete_item(item_id: int, db: Session = Depends(get_db)):    db_item = db.query(ItemDB).filter(ItemDB.id == item_id).first()    if db_item is None:        raise HTTPException(status_code=404, detail=&#x22;Item not found&#x22;)    db.delete(db_item)    db.commit()    return {&#x22;message&#x22;: &#x22;Item deleted&#x22;}"><div></div></button></div></figure></div>
<p>ในการใช้งานจริง เราจะต้องสร้าง API endpoints ที่รับและส่งข้อมูลโดยใช้ Pydantic Models ซึ่งจะช่วยให้คุณจัดการข้อมูลที่มาจาก SQLAlchemy Models ได้ เพื่อให้ข้อมูลนั้นปลอดภัยต่อการ input เข้าไป + ช่วยเพิ่มเรื่องของ validation ก่อนที่จะเข้า database เข้าไปด้วย<br>
เพิ่มเติมสำหรับ <code>get_db()</code> ที่เพิ่มมา เพื่อให้สามารถ access กับ database ได้</p>
<ul>
<li><code>get_db()</code> ทำหน้าที่สร้าง session ใหม่ (ผ่าน <code>SessionLocal()</code>) ในแต่ละคำร้องขอ และรับประกันว่าจะมีการปิด session นั้นเมื่อการทำงานเสร็จสิ้น ไม่ว่าจะสำเร็จหรือล้มเหลวก็ตาม ( <code>finally: db.close()</code>). สิ่งนี้สำคัญเพื่อป้องกันการรั่วไหลของทรัพยากร (resource leak) ซึ่งอาจเกิดขึ้นหาก session ไม่ถูกปิดหลังจากใช้งาน.</li>
<li>ใน FastAPI ฟังก์ชัน <code>get_db()</code> ถูกใช้เป็น dependency ซึ่งสามารถถูก inject เข้าไปในฟังก์ชันอื่น ๆ ผ่าน <code>Depends(get_db)</code> เพื่อให้ฟังก์ชันนั้นสามารถเข้าถึง session ของฐานข้อมูลได้โดยตรง สิ่งนี้ช่วยให้โค้ดมีความชัดเจนและง่ายต่อการทดสอบ เนื่องจาก FastAPI สามารถจัดการกับ dependency เหล่านี้ได้โดยอัตโนมัติ.</li>
</ul>
<p>ไอเดียของการใช้งานก็จะประมาณนี้ สังเกตุว่า การจัดการทุกอย่างก็จะตรงไปตรงมาผ่าน Object ได้เลย โดยไม่จำเป็นต้องจัดการผ่าน SQL ได้เลย<br>
และเพื่อให้เป็นระเบียบมากขึ้น เราสามารถจัดการ code structure ใหม่ให้เป็นแบบนี้ได้ (จากแต่เดิมทั้งหมดจัดการผ่าน <code>main.py</code>)</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="plaintext"><code><div class="ec-line"><div class="code"><span style="--0:#f8f8f2;--1:#24292e">.</span></div></div><div class="ec-line"><div class="code"><span style="--0:#f8f8f2;--1:#24292e">└── app</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">├── __init__.py</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">├── database.py</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">├── main.py</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">├── models.py</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">└── schemas.py</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code=".└── app    ├── __init__.py    ├── database.py    ├── main.py    ├── models.py    └── schemas.py"><div></div></button></div></figure></div>
<p>โดย ไฟล์ <code>__init__.py</code>* *เป็นเพียงไฟล์ว่าง ๆ แต่จะบอก Python ว่า app  folder นี้เป็น package ที่สามารถเรียกหากันได้ และทำการแยกไฟล์ออกเป็นตามนี้</p>
<ul>
<li><code>database.py</code> สำหรับ จัดการเชื่อมต่อกับ database</li>
</ul>
<div class="expressive-code"><figure class="frame has-title"><figcaption class="header"><span class="title">app/database.py</span></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.ext.declarative </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.orm </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">sqlite:///./test.db</span><span style="--0:#E9F284">"</span></span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">engine </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine(</span><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">connect_args</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">{</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">check_same_thread</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">})</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">SessionLocal </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autocommit</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autoflush</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">get_db</span><span style="--0:#F8F8F2;--1:#24292E">():</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> SessionLocal()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">try</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">yield</span><span style="--0:#F8F8F2;--1:#24292E"> db</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">finally</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">        </span></span><span style="--0:#F8F8F2;--1:#24292E">db.close()</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from sqlalchemy import create_enginefrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy.orm import sessionmakerDATABASE_URL = &#x22;sqlite:///./test.db&#x22;engine = create_engine(DATABASE_URL, connect_args={&#x22;check_same_thread&#x22;: False})SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)Base = declarative_base()def get_db():    db = SessionLocal()    try:        yield db    finally:        db.close()"><div></div></button></div></figure></div>
<ul>
<li><code>models.py</code> เพื่อเก็บโครงสร้างของตารางในฐานข้อมูล</li>
</ul>
<div class="expressive-code"><figure class="frame has-title"><figcaption class="header"><span class="title">app/models.py</span></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> Column, Integer, String, Float, Text</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> app.database </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> Base</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemDB</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Base</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">__tablename__ </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">items</span><span style="--0:#E9F284">"</span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Integer, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">primary_key</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(String, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Text, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">price </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">tax </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from sqlalchemy import Column, Integer, String, Float, Textfrom app.database import Baseclass ItemDB(Base):    __tablename__ = &#x22;items&#x22;    id = Column(Integer, primary_key=True, index=True)    name = Column(String, index=True)    description = Column(Text, nullable=True)    price = Column(Float, nullable=False)    tax = Column(Float, nullable=True)"><div></div></button></div></figure></div>
<ul>
<li><code>schemas.py</code> เพื่อเก็บโครงสร้างของข้อมูลที่ใช้รับส่งใน API</li>
</ul>
<div class="expressive-code"><figure class="frame has-title"><figcaption class="header"><span class="title">app/schemas.py</span></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> pydantic </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> BaseModel</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> typing </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> Optional</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">BaseModel</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description: Optional[</span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">str</span><span style="--0:#F8F8F2;--1:#24292E">] </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">price: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">float</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">tax: Optional[</span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">float</span><span style="--0:#F8F8F2;--1:#24292E">] </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemCreate</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">pass</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemResponse</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Item</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">Config</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">        </span></span><span style="--0:#F8F8F2;--1:#24292E">from_attributes </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">True</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from pydantic import BaseModelfrom typing import Optionalclass Item(BaseModel):    name: str    description: Optional[str] = None    price: float    tax: Optional[float] = Noneclass ItemCreate(Item):    passclass ItemResponse(Item):    id: int    class Config:        from_attributes = True"><div></div></button></div></figure></div>
<ul>
<li><code>main.py</code> สำหรับ code หลักของ application</li>
</ul>
<div class="expressive-code"><figure class="frame has-title"><figcaption class="header"><span class="title">app/main.py</span></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> fastapi </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI, HTTPException, Depends</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> typing </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> List</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.orm </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> Session</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> app.database </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> Base, engine, get_db</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> app.models </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> ItemDB</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> app.schemas </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> ItemCreate, ItemResponse</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># สร้างฐานข้อมูล</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base.metadata.create_all(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">app </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> FastAPI()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Create: สร้างสินค้าใหม่</span></div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.post</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">ItemResponse)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">create_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> ItemCreate, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> ItemDB(</span><span style="--0:#FF79C6;--1:#BF3441">**</span><span style="--0:#F8F8F2;--1:#24292E">item.model_dump())</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.add(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.commit()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.refresh(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db_item</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Read: อ่านสินค้าทั้งหมด</span></div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.get</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">List[ItemResponse])</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">read_items</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).all()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Read: อ่านสินค้าตาม ID</span></div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.get</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">ItemResponse)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">read_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).filter(ItemDB.id </span><span style="--0:#FF79C6;--1:#BF3441">==</span><span style="--0:#F8F8F2;--1:#24292E"> item_id).first()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">if</span><span style="--0:#F8F8F2;--1:#24292E"> db_item </span><span style="--0:#FF79C6;--1:#BF3441">is</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">raise</span><span style="--0:#F8F8F2;--1:#24292E"> HTTPException(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">status_code</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">404</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">detail</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item not found</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db_item</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Update: อัปเดตสินค้าตาม ID</span></div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.put</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">response_model</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">ItemResponse)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">update_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">item</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> ItemCreate, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).filter(ItemDB.id </span><span style="--0:#FF79C6;--1:#BF3441">==</span><span style="--0:#F8F8F2;--1:#24292E"> item_id).first()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">if</span><span style="--0:#F8F8F2;--1:#24292E"> db_item </span><span style="--0:#FF79C6;--1:#BF3441">is</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">raise</span><span style="--0:#F8F8F2;--1:#24292E"> HTTPException(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">status_code</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">404</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">detail</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item not found</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">for</span><span style="--0:#F8F8F2;--1:#24292E"> key, value </span><span style="--0:#FF79C6;--1:#BF3441">in</span><span style="--0:#F8F8F2;--1:#24292E"> item.model_dump().items():</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#8BE9FD;--1:#005CC5">setattr</span><span style="--0:#F8F8F2;--1:#24292E">(db_item, key, value)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.commit()</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.refresh(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> db_item</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Delete: ลบสินค้าตาม ID</span></div></div><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">@app.delete</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">/items/</span></span><span style="--0:#BD93F9;--1:#005CC5">{item_id}</span><span style="--0:#E9F284;--1:#032F62">"</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">async</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">delete_item</span><span style="--1:#24292E"><span style="--0:#F8F8F2">(</span><span style="--0:#FFB86C;--0fs:italic">item_id</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> </span></span><span style="--0:#8BE9FD;--0fs:italic;--1:#005CC5">int</span><span style="--1:#24292E"><span style="--0:#F8F8F2">, </span><span style="--0:#FFB86C;--0fs:italic">db</span><span style="--0:#FF79C6">:</span><span style="--0:#F8F8F2"> Session </span></span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Depends(get_db)):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db_item </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> db.query(ItemDB).filter(ItemDB.id </span><span style="--0:#FF79C6;--1:#BF3441">==</span><span style="--0:#F8F8F2;--1:#24292E"> item_id).first()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">if</span><span style="--0:#F8F8F2;--1:#24292E"> db_item </span><span style="--0:#FF79C6;--1:#BF3441">is</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#BD93F9;--1:#005CC5">None</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">raise</span><span style="--0:#F8F8F2;--1:#24292E"> HTTPException(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">status_code</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">404</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">detail</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item not found</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.delete(db_item)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db.commit()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">return</span><span style="--0:#F8F8F2;--1:#24292E"> {</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">message</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">Item deleted</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="from fastapi import FastAPI, HTTPException, Dependsfrom typing import Listfrom sqlalchemy.orm import Sessionfrom app.database import Base, engine, get_dbfrom app.models import ItemDBfrom app.schemas import ItemCreate, ItemResponse# สร้างฐานข้อมูลBase.metadata.create_all(bind=engine)app = FastAPI()# Create: สร้างสินค้าใหม่@app.post(&#x22;/items/&#x22;, response_model=ItemResponse)async def create_item(item: ItemCreate, db: Session = Depends(get_db)):    db_item = ItemDB(**item.model_dump())    db.add(db_item)    db.commit()    db.refresh(db_item)    return db_item# Read: อ่านสินค้าทั้งหมด@app.get(&#x22;/items/&#x22;, response_model=List[ItemResponse])async def read_items(db: Session = Depends(get_db)):    return db.query(ItemDB).all()# Read: อ่านสินค้าตาม ID@app.get(&#x22;/items/{item_id}&#x22;, response_model=ItemResponse)async def read_item(item_id: int, db: Session = Depends(get_db)):    db_item = db.query(ItemDB).filter(ItemDB.id == item_id).first()    if db_item is None:        raise HTTPException(status_code=404, detail=&#x22;Item not found&#x22;)    return db_item# Update: อัปเดตสินค้าตาม ID@app.put(&#x22;/items/{item_id}&#x22;, response_model=ItemResponse)async def update_item(item_id: int, item: ItemCreate, db: Session = Depends(get_db)):    db_item = db.query(ItemDB).filter(ItemDB.id == item_id).first()    if db_item is None:        raise HTTPException(status_code=404, detail=&#x22;Item not found&#x22;)    for key, value in item.model_dump().items():        setattr(db_item, key, value)    db.commit()    db.refresh(db_item)    return db_item# Delete: ลบสินค้าตาม ID@app.delete(&#x22;/items/{item_id}&#x22;)async def delete_item(item_id: int, db: Session = Depends(get_db)):    db_item = db.query(ItemDB).filter(ItemDB.id == item_id).first()    if db_item is None:        raise HTTPException(status_code=404, detail=&#x22;Item not found&#x22;)    db.delete(db_item)    db.commit()    return {&#x22;message&#x22;: &#x22;Item deleted&#x22;}"><div></div></button></div></figure></div>
<p>ก็จะช่วยทำให้ code แยกส่วนเป็นระเบียบมากขึ้นได้</p>
<h2 id="การจัดการ-install-package-วิธีอื่นๆ">การจัดการ install package วิธีอื่นๆ</h2>
<p><a href="https://fastapi.tiangolo.com/virtual-environments/?h=requirements#install-from-requirementstxt" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/virtual-environments/?h=requirements#install-from-requirementstxt</a><br>
<code>requirements.txt</code> ใน FastAPI (หรือในโปรเจค Python ทั่วไป) เป็นไฟล์ที่ใช้ระบุรายการของแพ็คเกจที่จำเป็นต้องติดตั้งเพื่อให้โปรเจคทำงานได้อย่างถูกต้อง โดยแต่ละบรรทัดในไฟล์จะระบุชื่อของแพ็คเกจและเวอร์ชันที่ต้องการ<br>
ตัวอย่าง <code>requirements.txt</code></p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="plaintext"><code><div class="ec-line"><div class="code"><span style="--0:#f8f8f2;--1:#24292e">fastapi[standard]==0.113.0</span></div></div><div class="ec-line"><div class="code"><span style="--0:#f8f8f2;--1:#24292e">pydantic==2.8.0</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="fastapi[standard]==0.113.0pydantic==2.8.0"><div></div></button></div></figure></div>
<p>โดยไฟล์ <code>requirements.txt</code> มีประโยชน์ดังนี้:</p>
<ol>
<li><strong>การจัดการแพ็คเกจที่จำเป็น</strong>: ทำให้คุณสามารถติดตั้ง package ทั้งหมดที่จำเป็นสำหรับโปรเจคได้ง่าย ๆ ด้วยคำสั่ง <code>pip install -r requirements.txt</code> ซึ่งจะช่วยให้มั่นใจว่าโปรเจคของคุณใช้เวอร์ชันของ package ที่ถูกต้อง</li>
<li><strong>ความสามารถในการ share project</strong>: เมื่อเรา share** **project กับคนอื่น การมี <code>requirements.txt</code> จะช่วยให้ผู้ใช้งานคนอื่นสามารถตั้งค่าและรันโปรเจคได้โดยง่าย โดยไม่ต้องคาดเดาเกี่ยวกับเวอร์ชันของแพ็คเกจที่ควรจะติดตั้ง (มันคือ การจัดการ dependency เหมือนกับ <code>package.json</code> ใน npm)</li>
</ol>
<p>ดังนั้น <code>requirements.txt</code> เป็นเครื่องมือสำคัญในการจัดการ dependencies และการทำให้โปรเจค Python ของเราสามารถ maintain ระยะยาวได้ดียิ่งขึ้นด้วยเช่นกัน</p>
<h2 id="อ่าน-env">อ่าน .ENV</h2>
<p><a href="https://fastapi.tiangolo.com/advanced/settings/#reading-a-env-file" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/advanced/settings/#reading-a-env-file</a><br>
ถ้าเรามีการตั้งค่ามากมายที่อาจเปลี่ยนแปลงได้บ่อยๆ (เช่น config database url ที่แต่ละเครื่อง หรือแต่ละ environment อาจจะแตกต่างกัน) การเก็บค่าพวกนี้ไว้ในไฟล์แล้วอ่านค่าจากไฟล์แยกออกไปเหมือนกับเป็น environment variables อาจจะเป็นประโยชน์กับเคสเหล่านี้ได้ (เป็นเหมือนกับไฟล์ที่รับค่าเข้ามา แทนที่จะ fix ค่าเหล่านี้ไว้ในส่วนของ source code)</p>
<p>โดยวิธีปฏิบัตินี้เป็นที่รู้จักกันดี โดย environment variables เหล่านี้มักจะถูกเก็บไว้ในไฟล์ที่ชื่อว่า <code>.env</code> และไฟล์นี้จะถูกเรียกว่า “dotenv”</p>
<p>โดยตัว Pydantic นั้น ได้ support การอ่านค่า .env นี้ไว้ใน external library ของ pydantic คือ <code>python-dotenv</code></p>
<p><a href="https://docs.pydantic.dev/latest/concepts/pydantic_settings/#dotenv-env-support" rel="nofollow, noopener, noreferrer" target="_blank">https://docs.pydantic.dev/latest/concepts/pydantic_settings/#dotenv-env-support</a></p>
<p>เราสามารถทำการลง package python-dotenv ด้วยคำสั่ง</p>
<div class="expressive-code"><figure class="frame is-terminal"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">pip</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">install</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">python-dotenv</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="pip install python-dotenv"><div></div></button></div></figure></div>
<p>สมมุติ เราจะลองเปลี่ยนให้การ fix url ของ sqlite url จากแต่เดิมอยู่ใน code ให้มาอ่านผ่าน .env แทน เราก็สามารถเพิ่ม .env เป็นค่าตามนี้ได้</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="plaintext"><code><div class="ec-line"><div class="code"><span style="--0:#f8f8f2;--1:#24292e">DATABASE_URL=sqlite:///./test.db</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="DATABASE_URL=sqlite:///./test.db"><div></div></button></div></figure></div>
<p>และในตัว code เราก็จะสามารถอ่านค่า <code>DATABASE_URL</code> ได้โดยใช้ library <code>python-dotenv</code> ด้วยวิธีตามนี้</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="python"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> os</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine, Column, Integer, String, Float, Text</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.ext.declarative </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> sqlalchemy.orm </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">from</span><span style="--0:#F8F8F2;--1:#24292E"> dotenv </span><span style="--0:#FF79C6;--1:#BF3441">import</span><span style="--0:#F8F8F2;--1:#24292E"> load_dotenv</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#96A1C2;--1:#616972"># Load environment variables from .env file</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">load_dotenv()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> os.getenv(</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">DATABASE_URL</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">engine </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> create_engine(</span><span style="--0:#BD93F9;--1:#005CC5">DATABASE_URL</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">connect_args</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">{</span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">check_same_thread</span><span style="--0:#E9F284">"</span></span><span style="--0:#F8F8F2;--1:#24292E">: </span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">})</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">SessionLocal </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> sessionmaker(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autocommit</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">autoflush</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> declarative_base()</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">class</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#8BE9FD;--1:#6F42C1">ItemDB</span><span style="--0:#F8F8F2;--1:#24292E">(</span><span style="--0:#8BE9FD;--0fs:italic;--1:#6F42C1">Base</span><span style="--0:#F8F8F2;--1:#24292E">):</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">__tablename__ </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--1:#032F62"><span style="--0:#E9F284">"</span><span style="--0:#F1FA8C">items</span><span style="--0:#E9F284">"</span></span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#8BE9FD;--1:#005CC5">id</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Integer, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">primary_key</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">name </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(String, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">index</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">description </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Text, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">price </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">False</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">tax </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> Column(Float, </span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">nullable</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#BD93F9;--1:#005CC5">True</span><span style="--0:#F8F8F2;--1:#24292E">)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#F8F8F2;--1:#24292E">Base.metadata.create_all(</span><span style="--0:#FFB86C;--0fs:italic;--1:#AE4B07">bind</span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E">engine)</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">def</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#50FA7B;--1:#6F42C1">get_db</span><span style="--0:#F8F8F2;--1:#24292E">():</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">    </span></span><span style="--0:#F8F8F2;--1:#24292E">db </span><span style="--0:#FF79C6;--1:#BF3441">=</span><span style="--0:#F8F8F2;--1:#24292E"> SessionLocal()</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">try</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent">        </span><span style="--0:#FF79C6;--1:#BF3441">yield</span><span style="--0:#F8F8F2;--1:#24292E"> db</span></div></div><div class="ec-line"><div class="code"><span class="indent">    </span><span style="--0:#FF79C6;--1:#BF3441">finally</span><span style="--0:#F8F8F2;--1:#24292E">:</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#F8F8F2;--1:#24292E">        </span></span><span style="--0:#F8F8F2;--1:#24292E">db.close()</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="import osfrom sqlalchemy import create_engine, Column, Integer, String, Float, Textfrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy.orm import sessionmakerfrom dotenv import load_dotenv# Load environment variables from .env fileload_dotenv()DATABASE_URL = os.getenv(&#x22;DATABASE_URL&#x22;)engine = create_engine(DATABASE_URL, connect_args={&#x22;check_same_thread&#x22;: False})SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)Base = declarative_base()class ItemDB(Base):    __tablename__ = &#x22;items&#x22;    id = Column(Integer, primary_key=True, index=True)    name = Column(String, index=True)    description = Column(Text, nullable=True)    price = Column(Float, nullable=False)    tax = Column(Float, nullable=True)Base.metadata.create_all(bind=engine)def get_db():    db = SessionLocal()    try:        yield db    finally:        db.close()"><div></div></button></div></figure></div>
<p>เพียงเท่านี้ เราก็จะไม่มีการ fix code ค่า config ที่อาจจะแตกต่างกันในแต่ละเครื่องเอาไว้ใน code ได้แล้ว</p>
<h2 id="deploy-ที่ไหนได้บ้าง">Deploy ที่ไหนได้บ้าง</h2>
<p>การ deploy FastAPI สามารถทำได้หลายวิธี รวมถึงแบบ manual และการใช้ Docker ทั้งสองวิธีนี้มีความแตกต่างกันทั้งในด้านการตั้งค่าและการจัดการ</p>
<h3 id="1-การ-deploy-แบบ-manual">1. การ Deploy แบบ Manual</h3>
<p><a href="https://fastapi.tiangolo.com/deployment/manually/" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/deployment/manually/</a><br>
การ deploy FastAPI แบบ manual หมายถึงการตั้งค่าและรัน application บน server โดยตรง<br>
โดย FastAPI นั้นได้เตรียมคำสั่งสำหรับการ run แบบ production ไว้นั่นคือ คำสั่ง</p>
<div class="expressive-code"><figure class="frame is-terminal"><figcaption class="header"><span class="title"></span><span class="sr-only">Terminal window</span></figcaption><pre data-language="shell"><code><div class="ec-line"><div class="code"><span style="--0:#50FA7B;--1:#6F42C1">fastapi</span><span style="--0:#F8F8F2;--1:#24292E"> </span><span style="--0:#F1FA8C;--1:#032F62">run</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="fastapi run"><div></div></button></div></figure></div>
<p>ผลลัพธ์ก็จะเป็นประมาณนี้<br>
<img src="/img/blogs/fastapi-basic/fast-python-07.webp" alt="fast-python-07.webp"><br>
หลังจากนั้น โดยทั่วไปจะมีการใช้ reverse proxy เช่น Nginx เพื่อรับคำขอ (requests) จากผู้ใช้งานและส่งต่อไปยัง Uvicorn (ตัวผลลัพธ์จาก fastapi run ที่กำลัง run อยู่) เช่น config nginx ประมาณนี้</p>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="plaintext"><code><div class="ec-line"><div class="code"><span style="--0:#f8f8f2;--1:#24292e">server {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">listen 80;</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">server_name your_domain_or_ip;</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">location / {</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">        </span></span><span style="--0:#f8f8f2;--1:#24292e">proxy_pass http://127.0.0.1:8000;</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">        </span></span><span style="--0:#f8f8f2;--1:#24292e">proxy_set_header Host $host;</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">        </span></span><span style="--0:#f8f8f2;--1:#24292e">proxy_set_header X-Real-IP $remote_addr;</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">        </span></span><span style="--0:#f8f8f2;--1:#24292e">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">        </span></span><span style="--0:#f8f8f2;--1:#24292e">proxy_set_header X-Forwarded-Proto $scheme;</span></div></div><div class="ec-line"><div class="code"><span class="indent"><span style="--0:#f8f8f2;--1:#24292e">    </span></span><span style="--0:#f8f8f2;--1:#24292e">}</span></div></div><div class="ec-line"><div class="code">
</div></div><div class="ec-line"><div class="code"><span style="--0:#f8f8f2;--1:#24292e">}</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="server {    listen 80;    server_name your_domain_or_ip;    location / {        proxy_pass http://127.0.0.1:8000;        proxy_set_header Host $host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_set_header X-Forwarded-Proto $scheme;    }}"><div></div></button></div></figure></div>
<ul>
<li>
<p>อาจจะใช้เครื่องมืออย่าง Supervisor หรือ Systemd เพื่อจัดการและทำให้ application ทำงานอยู่ตลอดเวลาได้</p>
</li>
<li>
<p>แนะนำให้ศึกษาเรื่องการ deploy web service เพิ่มเติมก่อนทำการ deploy ด้วยวิธีนี้</p>
</li>
</ul>
<h3 id="2-การ-deploy-ด้วย-docker">2. การ Deploy ด้วย Docker</h3>
<p><a href="https://fastapi.tiangolo.com/deployment/docker/" rel="nofollow, noopener, noreferrer" target="_blank">https://fastapi.tiangolo.com/deployment/docker/</a><br>
Docker เป็นเครื่องมือในการ containerization ที่ช่วยให้คุณสามารถแพ็คแอปพลิเคชันและ dependencies ทั้งหมดลงใน container ซึ่งทำให้การ deploy และการจัดการง่ายขึ้น<br>
หลักการในการ deploy ด้วย Docker คือ</p>
<ol>
<li>สร้าง Dockerfile ที่เป็น Container run application python ตัว FastAPI ขึ้นมา</li>
</ol>
<div class="expressive-code"><figure class="frame"><figcaption class="header"></figcaption><pre data-language="dockerfile"><code><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">FROM</span><span style="--0:#F8F8F2;--1:#24292E"> python:3.9</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">WORKDIR</span><span style="--0:#F8F8F2;--1:#24292E"> /code</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">COPY</span><span style="--0:#F8F8F2;--1:#24292E"> ./requirements.txt /code/requirements.txt</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">RUN</span><span style="--0:#F8F8F2;--1:#24292E"> pip install --no-cache-dir --upgrade -r /code/requirements.txt</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">COPY</span><span style="--0:#F8F8F2;--1:#24292E"> ./app /code/app</span></div></div><div class="ec-line"><div class="code"><span style="--0:#FF79C6;--1:#BF3441">CMD</span><span style="--0:#F8F8F2;--1:#24292E"> [</span><span style="--0:#F1FA8C;--1:#032F62">"fastapi"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#F1FA8C;--1:#032F62">"run"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#F1FA8C;--1:#032F62">"app/main.py"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#F1FA8C;--1:#032F62">"--port"</span><span style="--0:#F8F8F2;--1:#24292E">, </span><span style="--0:#F1FA8C;--1:#032F62">"80"</span><span style="--0:#F8F8F2;--1:#24292E">]</span></div></div></code></pre><div class="copy"><button title="Copy to clipboard" data-copied="Copied!" data-code="FROM python:3.9WORKDIR /codeCOPY ./requirements.txt /code/requirements.txtRUN pip install --no-cache-dir --upgrade -r /code/requirements.txtCOPY ./app /code/appCMD [&#x22;fastapi&#x22;, &#x22;run&#x22;, &#x22;app/main.py&#x22;, &#x22;--port&#x22;, &#x22;80&#x22;]"><div></div></button></div></figure></div>
<ul>
<li>อย่างในเคสนี้ เราจะใช้การจัดการ package manager อย่าง <code>requirements.txt</code> เพื่อให้การจัดการ dependency นั้นง่ายขึ้น</li>
</ul>
<ol start="2">
<li>สร้าง Docker Image โดยใช้คำสั่ง <code>docker build -t my-fastapi-app .</code> เพื่อสร้าง Docker image โดยใช้ Dockerfile ที่เตรียมไว้</li>
<li>run Docker Container ใช้คำสั่ง <code>docker run -d --name fastapi-container -p 8000:8000 my-fastapi-app</code> เพื่อ run  container ของ application</li>
<li>เมื่อสามารถ run image มาได้ ที่เหลือก็นำ image ตัวนี้ไป deploy กับ server ที่รองรับการ deploy แบบ Container ได้เช่น Google Cloud Run, Kubenetes, Docker compose บน machine เป็นต้น<br>
** สำหรับการ deploy หากใครสนใจเพิ่มเติม สามารถดูในหัวข้อ “Deployment Go” ของช่อง Mikelopster เพื่อปูพื้นฐานของการ deploy งาน 1 ชิ้นก่อนได้<br>
<a href="https://docs.mikelopster.dev/c/goapi-essential/chapter-9/intro" rel="nofollow, noopener, noreferrer" target="_blank">https://docs.mikelopster.dev/c/goapi-essential/chapter-9/intro</a></li>
</ol>
<h2 id="สรุป">สรุป</h2>
<p>ตามที่เราเล่ามาทั้งหมด เราได้ share concept พื้นฐานของ FastAPI ไปว่า</p>
<ul>
<li>เราสามารถสร้าง API ด้วย python ด้วย library FastAPI ได้อย่างไร</li>
<li>เราสามารถสร้าง CRUD API พื้นฐานของการทำ Backend API อย่างไรได้บ้าง</li>
<li>FastAPI จัดการ relational database อย่างไรผ่าน SQL Alchemy และ Pydantic</li>
<li>การจัดการ dependency ผ่าน <code>requirement.txt</code> และ config ผ่าน <code>.env</code></li>
<li>เล่าไอเดียการนำ FastAPI ไป deploy production ว่าสามารถทำอย่างไรได้บ้าง</li>
</ul>
<p>หวังว่า หัวข้อนี้จะเป็นไอเดียให้สำหรับคนที่ใช้ภาษา python เป็นหลักได้ทำความเข้าใจส่วนของ Backend Service มากขึ้นและได้นำ FastAPI ไปลองประยุกต์ใช้กันดูนะครับ</p> <div> <hr> <div class="my-4 text-3xl font-bold text-white">Related Post</div> <ul class="mx-0 p-0"> <li class="flex flex-col flex-wrap gap-2 px-0 sm:flex-row [&_q]:basis-full"> <div class="flex w-full flex-col border-b border-gray-200 dark:border-gray-700 pb-4 mb-4"> <div class="w-full"> <time datetime="2024-01-11T00:00:00.000Z" class="mb-1 block w-full text-gray-400 dark:text-gray-400"> 11 ม.ค. 2567 </time> </div> <div class="flex items-start"> <div class="flex min-h-[6rem] min-w-0 flex-grow flex-col">  <a href="/posts/supabase-next/" class="cactus-link line-clamp-1" data-astro-prefetch> ลองเล่น Supabase กับ Next.js กัน </a> <div class="mt-0.5"> <div class="flex gap-2"> <span class="inline-flex w-fit items-center gap-1.5 rounded-md bg-red-100 px-2 py-1 text-sm text-red-700 dark:bg-red-900/30 dark:text-red-500"> <svg width="1em" height="1em" viewBox="0 0 24 24" class="text-base" data-icon="mdi:youtube">  <symbol id="ai:mdi:youtube"><path fill="currentColor" d="m10 15l5.19-3L10 9zm11.56-7.83c.13.47.22 1.1.28 1.9c.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83c-.25.9-.83 1.48-1.73 1.73c-.47.13-1.33.22-2.65.28c-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44c-.9-.25-1.48-.83-1.73-1.73c-.13-.47-.22-1.1-.28-1.9c-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83c.25-.9.83-1.48 1.73-1.73c.47-.13 1.33-.22 2.65-.28c1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44c.9.25 1.48.83 1.73 1.73"/></symbol><use  xlink:href="#ai:mdi:youtube"></use>  </svg> <span class="items-center leading-none">มี Video</span> </span> <span class="inline-flex w-fit items-center gap-1.5 rounded-md bg-blue-100 px-2 py-1 text-sm text-blue-700 dark:bg-blue-900/30 dark:text-blue-500"> <svg width="1em" height="1em" viewBox="0 0 24 24" class="text-base" data-icon="mdi:github">  <symbol id="ai:mdi:github"><path fill="currentColor" d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33c.85 0 1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2"/></symbol><use  xlink:href="#ai:mdi:github"></use>  </svg> <span class="items-center leading-none">มี Github</span> </span>  </div> </div> <q class="line-clamp-2 block italic">รู้จักกับ Supabase เทคโนโลยีฐานข้อมูลที่เรียกตัวเองว่าเป็น Firebase alternative กันว่าใช้ทำอะไรได้บ้าง</q> </div> <div class="ml-4 flex flex-shrink-0 items-center"> <a href="/posts/supabase-next/" data-astro-prefetch> <img src="/img/thumbnail-blogs/supabase-next.webp" alt="ลองเล่น Supabase กับ Next.js กัน" class="h-24 w-24 rounded-lg object-cover md:h-[calc(9/16*9rem)] md:w-36" decoding="async" loading="lazy"> </a> </div> </div> </div> </li><li class="flex flex-col flex-wrap gap-2 px-0 sm:flex-row [&_q]:basis-full"> <div class="flex w-full flex-col border-b border-gray-200 dark:border-gray-700 pb-4 mb-4"> <div class="w-full"> <time datetime="2024-01-03T00:00:00.000Z" class="mb-1 block w-full text-gray-400 dark:text-gray-400"> 3 ม.ค. 2567 </time> </div> <div class="flex items-start"> <div class="flex min-h-[6rem] min-w-0 flex-grow flex-col">  <a href="/posts/astro-basic/" class="cactus-link line-clamp-1" data-astro-prefetch> Astro และ Static site generator </a> <div class="mt-0.5"> <div class="flex gap-2"> <span class="inline-flex w-fit items-center gap-1.5 rounded-md bg-red-100 px-2 py-1 text-sm text-red-700 dark:bg-red-900/30 dark:text-red-500"> <svg width="1em" height="1em" viewBox="0 0 24 24" class="text-base" data-icon="mdi:youtube">  <use  xlink:href="#ai:mdi:youtube"></use>  </svg> <span class="items-center leading-none">มี Video</span> </span>   </div> </div> <q class="line-clamp-2 block italic">มารู้จักกับ Astro Framework สำหรับทำเว็บ Static สำหรับเว็บทำ Content โดยเฉพาะกัน</q> </div> <div class="ml-4 flex flex-shrink-0 items-center"> <a href="/posts/astro-basic/" data-astro-prefetch> <img src="/img/thumbnail-blogs/astro-basic.webp" alt="Astro และ Static site generator" class="h-24 w-24 rounded-lg object-cover md:h-[calc(9/16*9rem)] md:w-36" decoding="async" loading="lazy"> </a> </div> </div> </div> </li><li class="flex flex-col flex-wrap gap-2 px-0 sm:flex-row [&_q]:basis-full"> <div class="flex w-full flex-col border-b border-gray-200 dark:border-gray-700 pb-4 mb-4"> <div class="w-full"> <time datetime="2023-10-18T00:00:00.000Z" class="mb-1 block w-full text-gray-400 dark:text-gray-400"> 18 ต.ค. 2566 </time> </div> <div class="flex items-start"> <div class="flex min-h-[6rem] min-w-0 flex-grow flex-col">  <a href="/posts/canvas-pong-game/" class="cactus-link line-clamp-1" data-astro-prefetch> มาเรียน Canvas ผ่าน Pong game กัน </a> <div class="mt-0.5"> <div class="flex gap-2"> <span class="inline-flex w-fit items-center gap-1.5 rounded-md bg-red-100 px-2 py-1 text-sm text-red-700 dark:bg-red-900/30 dark:text-red-500"> <svg width="1em" height="1em" viewBox="0 0 24 24" class="text-base" data-icon="mdi:youtube">  <use  xlink:href="#ai:mdi:youtube"></use>  </svg> <span class="items-center leading-none">มี Video</span> </span>   </div> </div> <q class="line-clamp-2 block italic">มารู้จักกับ HTML Canvas ว่ามันคืออะไร ใช้ทำอะไรบ้าง และมารู้จักพื้นฐานเบื้องต้นของการทำ Animation บน Browser ว่ามีหลักการเป็นประมาณไหน</q> </div> <div class="ml-4 flex flex-shrink-0 items-center"> <a href="/posts/canvas-pong-game/" data-astro-prefetch> <img src="https://img.youtube.com/vi/p8Vr1qLi0gU/maxresdefault.jpg" alt="มาเรียน Canvas ผ่าน Pong game กัน" class="h-24 w-24 rounded-lg object-cover md:h-[calc(9/16*9rem)] md:w-36" decoding="async" loading="lazy"> </a> </div> </div> </div> </li><li class="flex flex-col flex-wrap gap-2 px-0 sm:flex-row [&_q]:basis-full"> <div class="flex w-full flex-col border-b border-gray-200 dark:border-gray-700 pb-4 mb-4"> <div class="w-full"> <time datetime="2023-09-13T00:00:00.000Z" class="mb-1 block w-full text-gray-400 dark:text-gray-400"> 13 ก.ย. 2566 </time> </div> <div class="flex items-start"> <div class="flex min-h-[6rem] min-w-0 flex-grow flex-col">  <a href="/posts/orm-express/" class="cactus-link line-clamp-1" data-astro-prefetch> รู้จักกับ ORM ตัวช่วย query ฐานข้อมูลกัน </a> <div class="mt-0.5"> <div class="flex gap-2"> <span class="inline-flex w-fit items-center gap-1.5 rounded-md bg-red-100 px-2 py-1 text-sm text-red-700 dark:bg-red-900/30 dark:text-red-500"> <svg width="1em" height="1em" viewBox="0 0 24 24" class="text-base" data-icon="mdi:youtube">  <use  xlink:href="#ai:mdi:youtube"></use>  </svg> <span class="items-center leading-none">มี Video</span> </span> <span class="inline-flex w-fit items-center gap-1.5 rounded-md bg-blue-100 px-2 py-1 text-sm text-blue-700 dark:bg-blue-900/30 dark:text-blue-500"> <svg width="1em" height="1em" viewBox="0 0 24 24" class="text-base" data-icon="mdi:github">  <use  xlink:href="#ai:mdi:github"></use>  </svg> <span class="items-center leading-none">มี Github</span> </span>  </div> </div> <q class="line-clamp-2 block italic">พามาลองเล่นตัว ORM หรือ Object Relational Mapping เทคนิคสำหรับการคุยกับ Database ผ่าน Object กัน</q> </div> <div class="ml-4 flex flex-shrink-0 items-center"> <a href="/posts/orm-express/" data-astro-prefetch> <img src="https://img.youtube.com/vi/w1ucsQoEA0Y/maxresdefault.jpg" alt="รู้จักกับ ORM ตัวช่วย query ฐานข้อมูลกัน" class="h-24 w-24 rounded-lg object-cover md:h-[calc(9/16*9rem)] md:w-36" decoding="async" loading="lazy"> </a> </div> </div> </div> </li> </ul> </div> <script type="cf1e3cc9d8860513cd1ab917-module">const u=document.querySelectorAll("img"),t=function(o){if(!o.src.includes("youtube"))return!1;o.naturalWidth>0&&o.naturalHeight>0&&(o.naturalWidth<200||o.naturalHeight<200)&&o.parentNode.parentNode.remove()};u.forEach(o=>{o.onload=function(){t(this)},t(o)});</script>  </div> <div class="my-7 flex flex-wrap items-center gap-x-4 border px-4 py-2"> <p>Share on social media</p><div class="flex flex-1 items-center gap-x-2"><a class="social-share-btn" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https://mikelopster.dev/posts/fastapi-basic/" rel="noopener noreferrer" data-astro-cid-nksckkzh> <svg width="1em" height="1em" viewBox="0 0 24 24" class="h-9 w-9 p-1 text-black" aria-hidden="true" focusable="false" data-icon="mdi:facebook">  <use  xlink:href="#ai:mdi:facebook"></use>  </svg> </a><a class="social-share-btn" target="_blank" href="https://twitter.com/intent/tweet?url=https://mikelopster.dev/posts/fastapi-basic/&text=มาทำความรู้จักกับ FastAPI Framework สำหรับการทำ API ด้วยภาษา Python กัน" rel="noopener noreferrer" data-astro-cid-a232q27d> <svg width="1em" height="1em" viewBox="0 0 24 24" class="h-9 w-9 p-1 text-black" aria-hidden="true" focusable="false" data-icon="mdi:twitter">  <use  xlink:href="#ai:mdi:twitter"></use>  </svg> </a></div> </div> <section class="giscus mx-auto mt-10 w-full"></section> <script type="cf1e3cc9d8860513cd1ab917-module">let s=typeof localStorage<"u"&&localStorage.getItem("theme"),c=s||(window.matchMedia("(prefers-color-scheme: light)").matches?"light":"dark"),o={src:"https://giscus.app/client.js","data-repo":"mikelopster/mikelopster-feedback","data-repo-id":"R_kgDOK9SVOQ","data-category":"Blog Posts Comments","data-category-id":"DIC_kwDOK9SVOc4Cb93c","data-mapping":"url","data-reactions-enabled":"1","data-emit-metadata":"0","data-theme":c,"data-lang":"en",crossorigin:"anonymous",async:""},e=document.createElement("script");Object.entries(o).forEach(([t,a])=>e.setAttribute(t,a));document.body.appendChild(e);</script> </article> </div> <button id="to-top-btn" class="z-90 fixed bottom-8 end-4 flex h-10 w-10 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-zinc-200 text-3xl opacity-0 transition-all duration-300 hover:border-zinc-400 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 dark:bg-zinc-700 sm:end-8 sm:h-12 sm:w-12" aria-label="Back to Top" data-show="false"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="h-6 w-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 15.75l7.5-7.5 7.5 7.5"></path> </svg> </button>  </main> <footer class="mt-auto flex w-full flex-col items-center justify-center gap-y-2 pb-4 pt-20 text-center align-top font-semibold text-gray-600 sm:flex-row sm:justify-between sm:text-xs dark:text-gray-400"> <div class="me-0 sm:me-4">
Copyright &copy; 2025  mikelopster </div> <div class="flex items-center"> <nav aria-label="More on this site" class="flex gap-x-2 sm:gap-x-0 sm:divide-x sm:divide-gray-500"> <a href="/" class="px-4 py-2 sm:px-2 sm:py-0 sm:hover:text-textColor sm:hover:underline"> Home </a><a href="/posts/" class="px-4 py-2 sm:px-2 sm:py-0 sm:hover:text-textColor sm:hover:underline"> Posts </a><a href="https://docs.mikelopster.dev" class="px-4 py-2 sm:px-2 sm:py-0 sm:hover:text-textColor sm:hover:underline"> Docs </a><a href="/resources/" class="px-4 py-2 sm:px-2 sm:py-0 sm:hover:text-textColor sm:hover:underline"> Resources </a> </nav> </div> </footer> <script type="cf1e3cc9d8860513cd1ab917-module">document.addEventListener("DOMContentLoaded",function(){const t=document.createElement("script");t.src="https://storage.ko-fi.com/cdn/scripts/overlay-widget.js",t.onload=()=>{kofiWidgetOverlay.draw("mikelopster",{type:"floating-chat","floating-chat.donateButton.text":"Support me","floating-chat.donateButton.background-color":"#00bfa5","floating-chat.donateButton.text-color":"#fff"})},document.body.appendChild(t)});</script> <script src="/cdn-cgi/scripts/7d0fa10a/cloudflare-static/rocket-loader.min.js" data-cf-settings="cf1e3cc9d8860513cd1ab917-|49" defer></script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon='{"version":"2024.11.0","token":"c38e2559f05b47429cd299333d9f13ce","r":1,"server_timing":{"name":{"cfCacheStatus":true,"cfEdge":true,"cfExtPri":true,"cfL4":true,"cfOrigin":true,"cfSpeedBrain":true},"location_startswith":null}}' crossorigin="anonymous"></script>
</body> </html> <script type="cf1e3cc9d8860513cd1ab917-module">const e=document.getElementById("to-top-btn"),n=document.getElementById("blog-hero");function c(t){t.forEach(o=>{e.dataset.show=(!o.isIntersecting).toString()})}e.addEventListener("click",()=>{document.documentElement.scrollTo({top:0,behavior:"smooth"})});const r=new IntersectionObserver(c);r.observe(n);</script>